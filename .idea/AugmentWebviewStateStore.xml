<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AugmentWebviewStateStore">
    <option name="stateMap">
      <map>
        <entry key="CHAT_STATE" value="eyJjdXJyZW50Q29udmVyc2F0aW9uSWQiOiI4NTYxOThkMC1mMWJmLTQ5MjctYjAxMy1jNjU0YTU2NWE1ZDQiLCJjb252ZXJzYXRpb25zIjp7IjVmNDcwYjNhLTJmZDAtNDIzYS1iMmZiLTZmNDE2MzE3M2VjYyI6eyJpZCI6IjVmNDcwYjNhLTJmZDAtNDIzYS1iMmZiLTZmNDE2MzE3M2VjYyIsImNyZWF0ZWRBdElzbyI6IjIwMjUtMDQtMTdUMDE6Mzk6MzkuMjIyWiIsImxhc3RJbnRlcmFjdGVkQXRJc28iOiIyMDI1LTA0LTE3VDAxOjM5OjM5LjIyMloiLCJjaGF0SGlzdG9yeSI6W10sImZlZWRiYWNrU3RhdGVzIjp7fSwidG9vbFVzZVN0YXRlcyI6e30sImRyYWZ0RXhjaGFuZ2UiOnsicmVxdWVzdF9tZXNzYWdlIjoiIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCJ9XX0sInN0YXR1cyI6ImRyYWZ0In0sInJlcXVlc3RJZHMiOltdLCJpc1Bpbm5lZCI6ZmFsc2UsImlzU2hhcmVhYmxlIjpmYWxzZSwiZXh0cmFEYXRhIjp7Imhhc0RpcnR5RWRpdHMiOmZhbHNlfSwicGVyc29uYVR5cGUiOjB9LCI0MzU1NmMzNy03Y2VhLTQwYWEtYTZjZi05MTAwNjQ3NjQ4NWQiOnsiaWQiOiI0MzU1NmMzNy03Y2VhLTQwYWEtYTZjZi05MTAwNjQ3NjQ4NWQiLCJjcmVhdGVkQXRJc28iOiIyMDI1LTA0LTE3VDAxOjM5OjM5LjM2NVoiLCJsYXN0SW50ZXJhY3RlZEF0SXNvIjoiMjAyNS0wNC0xN1QwMTozOTozOS4zNjVaIiwiY2hhdEhpc3RvcnkiOltdLCJmZWVkYmFja1N0YXRlcyI6e30sInRvb2xVc2VTdGF0ZXMiOnt9LCJkcmFmdEV4Y2hhbmdlIjp7InJlcXVlc3RfbWVzc2FnZSI6IiIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgifV19LCJzdGF0dXMiOiJkcmFmdCJ9LCJyZXF1ZXN0SWRzIjpbXSwiaXNQaW5uZWQiOmZhbHNlLCJpc1NoYXJlYWJsZSI6ZmFsc2UsImV4dHJhRGF0YSI6eyJoYXNEaXJ0eUVkaXRzIjpmYWxzZX0sInBlcnNvbmFUeXBlIjowfSwiODU2MTk4ZDAtZjFiZi00OTI3LWIwMTMtYzY1NGE1NjVhNWQ0Ijp7ImlkIjoiODU2MTk4ZDAtZjFiZi00OTI3LWIwMTMtYzY1NGE1NjVhNWQ0IiwibmFtZSI6IldlbGNvbWUgdG8gdGhlIEF1Z21lbnQgQWdlbnQiLCJjcmVhdGVkQXRJc28iOiIyMDI1LTA0LTE3VDAxOjM5OjQ0LjUzNloiLCJsYXN0SW50ZXJhY3RlZEF0SXNvIjoiMjAyNS0wNC0xN1QwOTo1MTowNC44MjFaIiwiY2hhdEhpc3RvcnkiOlt7InJlcXVlc3RfaWQiOiI0ZWQxMWQwNy00YTZkLTQ1ZjUtYmE1Yi0yZTEwNjdhZDgyM2UiLCJ1dWlkIjoiYTAxZjM0ODctYmU3NC00OGVmLWExZDUtNWZmM2U0YTU1ZGFjIiwiY2hhdEl0ZW1UeXBlIjoiYWdlbnRpYy1jaGVja3BvaW50LWRlbGltaXRlciIsInN0YXR1cyI6InN1Y2Nlc3MiLCJmcm9tVGltZXN0YW1wIjowLCJ0b1RpbWVzdGFtcCI6MTc0NDg1Mzk4NDUzNywic2Vlbl9zdGF0ZSI6InNlZW4ifSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNDkwYzAzYTMtNzdlOC00OGRkLTlhN2MtMjFkMzgwNjNhOTY4IiwicmVxdWVzdF9tZXNzYWdlIjoi5YiG5p6Q5b2T5YmN55qE6aG555uu57uT5p6EIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IuWIhuaekOW9k+WJjeeahOmhueebrue7k+aehCJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMTluRVg2dmJQZzMzV3k3NGlvdEJqZzkiLCJ0b29sX25hbWUiOiJsYXVuY2gtcHJvY2VzcyIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwiZGlyIC9zIC9iIEQ6XFxcXEV4cGxvaXRhdGlvblxcXFxKYXZhV2ViXFxcXEtIXFxcXGxvdmUtc3BhY2VcXFxcTG92ZS1TcGFjZS1VaVwiLCBcIndhaXRcIjogdHJ1ZSwgXCJtYXhfd2FpdF9zZWNvbmRzXCI6IDYwfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiSSdsbCBoZWxwIHlvdSBhbmFseXplIHRoZSBwcm9qZWN0IHN0cnVjdHVyZS4gTGV0IG1lIGdhdGhlciBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBwcm9qZWN0IHRvIHByb3ZpZGUgeW91IHdpdGggYSBjb21wcmVoZW5zaXZlIG92ZXJ2aWV3LlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MCwidGV4dF9ub2RlIjp7ImNvbnRlbnQiOiLliIbmnpDlvZPliY3nmoTpobnnm67nu5PmnoQifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IkknbGwgaGVscCB5b3UgYW5hbHl6ZSB0aGUgcHJvamVjdCBzdHJ1Y3R1cmUuIExldCBtZSBnYXRoZXIgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgcHJvamVjdCB0byBwcm92aWRlIHlvdSB3aXRoIGEgY29tcHJlaGVuc2l2ZSBvdmVydmlldy5cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIyODIyYmQyMy02YjFhLTQ3ZGQtYjEyNi01OWQ5OGM1MWY5NzUiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxRmtlbk1hV1Z4Y3o4RnVyOXpkcVV6UCIsInRvb2xfbmFtZSI6ImxhdW5jaC1wcm9jZXNzIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJkaXIgL3MgL2JcIiwgXCJ3YWl0XCI6IHRydWUsIFwibWF4X3dhaXRfc2Vjb25kc1wiOiAxMjB9In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJJIHNlZSB0aGVyZSB3YXMgYW4gaXNzdWUgd2l0aCB0aGUgcHJldmlvdXMgY29tbWFuZC4gTGV0IG1lIHRyeSBhIGRpZmZlcmVudCBhcHByb2FjaCB0byBhbmFseXplIHRoZSBwcm9qZWN0IHN0cnVjdHVyZS5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkhlcmUgYXJlIHRoZSByZXN1bHRzIGZyb20gZXhlY3V0aW5nIHRoZSBjb21tYW5kLlxuICAgICAgICA8cmV0dXJuLWNvZGU+XG4gICAgICAgIDFcbiAgICAgICAgPC9yZXR1cm4tY29kZT5cbiAgICAgICAgPHN0ZG91dD5cbiAgICAgICAgXHUwMDFiWz85MDAxaFx1MDAxYls/MTAwNGhcdTAwMWJbPzI1bFx1MDAxYlsySlx1MDAxYlttXHUwMDFiW0hcdTAwMWJdMDvnrqHnkIblkZg6IEM6XFxXaW5kb3dzXFxTeXN0ZW0zMlxcV2luZG93c1Bvd2VyU2hlbGxcXHYxLjBcXHBvd2Vyc2hlbGwuZXhlXHUwMDA3XHUwMDFiWz8yNWhcdTAwMWJbMzg7NTs5bUdldC1DaGlsZEl0ZW0gOiDmib7kuI3liLDmjqXlj5flrp7pmYXlj4LmlbDigJxEOlxcRXhwbG9pdGF0aW9uXFxKYXZhV2ViXFxLSFxcbG92ZS1zcGFjZVxcTG92ZS1TcGFjZS1VaeKAneeahOS9jee9ruW9ouW8j+WPguaVsOOAglxu5omA5Zyo5L2N572uIOihjDoxIOWtl+espjogMVxuKyBkaXIgL3MgL2IgRDpcXEV4cGxvaXRhdGlvblxcSmF2YVdlYlxcS0hcXGxvdmUtc3BhY2VcXExvdmUtU3BhY2UtVWlcbisgfn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+flxuICAgICsgQ2F0ZWdvcnlJbmZvICAgICAgICAgIDogSW52YWxpZEFyZ3VtZW50OiAoOikgW0dldC1DaGlsZEl0ZW1d77yMUGFyYW1ldGVyQmluZGluZ0V4Y2VwdGlvblxuICAgICsgRnVsbHlRdWFsaWZpZWRFcnJvcklkIDogUG9zaXRpb25hbFBhcmFtZXRlck5vdEZvdW5kLE1pY3Jvc29mdC5Qb3dlclNoZWxsLkNvbW1hbmRzLkdldENoaWxkSXRlbUNvbW1hbmRcbiBcblx1MDAxYlttXG4gICAgICAgIDwvc3Rkb3V0PlxuICAgICAgICA8c3RkZXJyPlxuICAgICAgICBcbiAgICAgICAgPC9zdGRlcnI+IiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMTluRVg2dmJQZzMzV3k3NGlvdEJqZzkifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZSwiY3VycmVudFRlcm1pbmFsIjp7InRlcm1pbmFsSWQiOjIsImN1cnJlbnRXb3JraW5nRGlyZWN0b3J5IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn19fV0sInJlc3BvbnNlX3RleHQiOiJJIHNlZSB0aGVyZSB3YXMgYW4gaXNzdWUgd2l0aCB0aGUgcHJldmlvdXMgY29tbWFuZC4gTGV0IG1lIHRyeSBhIGRpZmZlcmVudCBhcHByb2FjaCB0byBhbmFseXplIHRoZSBwcm9qZWN0IHN0cnVjdHVyZS5cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJkN2ZkZDg5ZS1jYzhmLTQ1NDItYTIxMi0wZjNjZDkxM2QyM2UiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxOWk5Y0NYTjk1b3FTemU1Y3Q5SHZmbyIsInRvb2xfbmFtZSI6ImxhdW5jaC1wcm9jZXNzIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJkaXJcIiwgXCJ3YWl0XCI6IHRydWUsIFwibWF4X3dhaXRfc2Vjb25kc1wiOiA2MH0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6Ikkgc2VlIHRoZXJlJ3Mgc3RpbGwgYW4gaXNzdWUgd2l0aCB0aGUgY29tbWFuZC4gTGV0IG1lIHRyeSBhIGRpZmZlcmVudCBhcHByb2FjaCB0byBhbmFseXplIHRoZSBwcm9qZWN0IHN0cnVjdHVyZS5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkhlcmUgYXJlIHRoZSByZXN1bHRzIGZyb20gZXhlY3V0aW5nIHRoZSBjb21tYW5kLlxuICAgICAgICA8cmV0dXJuLWNvZGU+XG4gICAgICAgIDFcbiAgICAgICAgPC9yZXR1cm4tY29kZT5cbiAgICAgICAgPHN0ZG91dD5cbiAgICAgICAgXHUwMDFiWz85MDAxaFx1MDAxYls/MTAwNGhcdTAwMWJbPzI1bFx1MDAxYlsySlx1MDAxYlttXHUwMDFiW0hcdTAwMWJdMDvnrqHnkIblkZg6IEM6XFxXaW5kb3dzXFxTeXN0ZW0zMlxcV2luZG93c1Bvd2VyU2hlbGxcXHYxLjBcXHBvd2Vyc2hlbGwuZXhlXHUwMDA3XHUwMDFiWz8yNWhcdTAwMWJbMzg7NTs5bWRpciA6IOaJvuS4jeWIsOi3r+W+hOKAnEQ6XFxz4oCd77yM5Zug5Li66K+l6Lev5b6E5LiN5a2Y5Zyo44CCXG7miYDlnKjkvY3nva4g6KGMOjEg5a2X56ymOiAxXG4rIGRpciAvcyAvYlxuKyB+fn5+fn5+fn5cbiAgICArIENhdGVnb3J5SW5mbyAgICAgICAgICA6IE9iamVjdE5vdEZvdW5kOiAoRDpcXHM6U3RyaW5nKSBbR2V0LUNoaWxkSXRlbV0sIEl0ZW1Ob3RGb3VuZEV4Y2VwdGlvblxuICAgICsgRnVsbHlRdWFsaWZpZWRFcnJvcklkIDogUGF0aE5vdEZvdW5kLE1pY3Jvc29mdC5Qb3dlclNoZWxsLkNvbW1hbmRzLkdldENoaWxkSXRlbUNvbW1hbmRcbiBcblx1MDAxYlttXG4gICAgICAgIDwvc3Rkb3V0PlxuICAgICAgICA8c3RkZXJyPlxuICAgICAgICBcbiAgICAgICAgPC9zdGRlcnI+IiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMUZrZW5NYVdWeGN6OEZ1cjl6ZHFVelAifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZSwiY3VycmVudFRlcm1pbmFsIjp7InRlcm1pbmFsSWQiOjMsImN1cnJlbnRXb3JraW5nRGlyZWN0b3J5IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn19fV0sInJlc3BvbnNlX3RleHQiOiJJIHNlZSB0aGVyZSdzIHN0aWxsIGFuIGlzc3VlIHdpdGggdGhlIGNvbW1hbmQuIExldCBtZSB0cnkgYSBkaWZmZXJlbnQgYXBwcm9hY2ggdG8gYW5hbHl6ZSB0aGUgcHJvamVjdCBzdHJ1Y3R1cmUuXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiYzhiNDczZmQtM2Y3Ni00MjJlLWJiNWMtZGFjMWJiMTYwNjJlIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMTlwOXZDRVU5OGluTm5VWlEzWW82ZzgiLCJ0b29sX25hbWUiOiJsYXVuY2gtcHJvY2VzcyIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwiZGlyIHNyYyAvc1wiLCBcIndhaXRcIjogdHJ1ZSwgXCJtYXhfd2FpdF9zZWNvbmRzXCI6IDYwfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiTm93IEkgaGF2ZSBhIGJldHRlciB1bmRlcnN0YW5kaW5nIG9mIHRoZSBwcm9qZWN0IHN0cnVjdHVyZS4gTGV0IG1lIGV4YW1pbmUgdGhlIHNvdXJjZSBjb2RlIGRpcmVjdG9yeSB0byBnZXQgbW9yZSBkZXRhaWxzIGFib3V0IHRoZSBwcm9qZWN0LlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSGVyZSBhcmUgdGhlIHJlc3VsdHMgZnJvbSBleGVjdXRpbmcgdGhlIGNvbW1hbmQuXG4gICAgICAgIDxyZXR1cm4tY29kZT5cbiAgICAgICAgMFxuICAgICAgICA8L3JldHVybi1jb2RlPlxuICAgICAgICA8c3Rkb3V0PlxuICAgICAgICBcdTAwMWJbPzkwMDFoXHUwMDFiWz8xMDA0aFx1MDAxYls/MjVsXHUwMDFiWzJKXHUwMDFiW21cdTAwMWJbSFx1MDAxYl0wO+euoeeQhuWRmDogQzpcXFdpbmRvd3NcXFN5c3RlbTMyXFxXaW5kb3dzUG93ZXJTaGVsbFxcdjEuMFxccG93ZXJzaGVsbC5leGVcdTAwMDdcdTAwMWJbPzI1aFx1MDAxYls/MjVsXHUwMDFiWzM7MUggICAg55uu5b2VOiBEOlxcRXhwbG9pdGF0aW9uXFxKYXZhV2ViXFxLSFxcbG92ZS1zcGFjZVxcTG92ZS1TcGFjZS1VaVx1MDAxYls2OzFITW9kZSAgICAgICAgICAgICAgICAgTGFzdFdyaXRlVGltZSAgICAgICAgIExlbmd0aCBOYW1lXHUwMDFiWzY1WFxuLS0tLSAgICAgICAgICAgICAgICAgLS0tLS0tLS0tLS0tLSAgICAgICAgIC0tLS0tLSAtLS0tXHUwMDFiWzY1WFxuZC0tLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgICAgICAuZ2l0aHViXHUwMDFiWzYyWFxuZC0tLS0tICAgICAgICAgMjAyNS80LzE2ICAgICAxNjo0OCAgICAgICAgICAgICAgICAuaWRlYVx1MDAxYls2NFhcbmQtLS0tLSAgICAgICAgIDIwMjUvNC8xNiAgICAgMTY6MjIgICAgICAgICAgICAgICAgbm9kZV9tb2R1bGVzXHUwMDFiWzU3WFxuZC0tLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgICAgICBzcmNcdTAwMWJbNjZYXG4tYS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEyOjU2ICAgICAgICAgICAgIDQ3IC5naXRpZ25vcmVcdTAwMWJbNTlYXG5cdTAwMWJbPzI1aFx1MDAxYls/MjVsLWEtLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgIDI4NSBibGlibGktdnVlLmltbFx1MDAxYls1NVhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTI6NTYgICAgICAgICAgICAzNjEgaW5kZXguaHRtbFx1MDAxYls1OVhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xNiAgICAgMTY6MjIgICAgICAgICAgNjE2ODEgcGFja2FnZS1sb2NrLmpzb25cdTAwMWJbNTJYXG4tYS0tLS0gICAgICAgICAyMDI1LzQvMTYgICAgIDE2OjIyICAgICAgICAgICAgNzEyIHBhY2thZ2UuanNvblx1MDAxYls1N1hcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTI6NTYgICAgICAgICAgIDM1ODQgUkVBRE1FLm1kXHUwMDFiWzYwWFxuLWEtLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgIDU3MCB2aXRlLmNvbmZpZy5qc1x1MDAxYls1NVhcdTAwMWJbMjE7MUhcdTAwMWJbPzI1aFxuICAgICAgICA8L3N0ZG91dD5cbiAgICAgICAgPHN0ZGVycj5cbiAgICAgICAgXG4gICAgICAgIDwvc3RkZXJyPiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDE5aTljQ1hOOTVvcVN6ZTVjdDlIdmZvIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2UsImN1cnJlbnRUZXJtaW5hbCI6eyJ0ZXJtaW5hbElkIjo0LCJjdXJyZW50V29ya2luZ0RpcmVjdG9yeSI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9fX1dLCJyZXNwb25zZV90ZXh0IjoiTm93IEkgaGF2ZSBhIGJldHRlciB1bmRlcnN0YW5kaW5nIG9mIHRoZSBwcm9qZWN0IHN0cnVjdHVyZS4gTGV0IG1lIGV4YW1pbmUgdGhlIHNvdXJjZSBjb2RlIGRpcmVjdG9yeSB0byBnZXQgbW9yZSBkZXRhaWxzIGFib3V0IHRoZSBwcm9qZWN0LlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6ImJiYmM4YjhhLWE2YjctNDRjMy1hMDFiLTEzZmRhYjYxYTFjMCIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDFQdVV6eG94c21kTGllZ3M4cXZnWG5UIiwidG9vbF9uYW1lIjoibGF1bmNoLXByb2Nlc3MiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcImRpciBzcmNcIiwgXCJ3YWl0XCI6IHRydWUsIFwibWF4X3dhaXRfc2Vjb25kc1wiOiA2MH0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkxldCBtZSB0cnkgYSBkaWZmZXJlbnQgYXBwcm9hY2ggdG8gZXhwbG9yZSB0aGUgcHJvamVjdCBzdHJ1Y3R1cmUuXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJIZXJlIGFyZSB0aGUgcmVzdWx0cyBmcm9tIGV4ZWN1dGluZyB0aGUgY29tbWFuZC5cbiAgICAgICAgPHJldHVybi1jb2RlPlxuICAgICAgICAxXG4gICAgICAgIDwvcmV0dXJuLWNvZGU+XG4gICAgICAgIDxzdGRvdXQ+XG4gICAgICAgIFx1MDAxYls/OTAwMWhcdTAwMWJbPzEwMDRoXHUwMDFiWz8yNWxcdTAwMWJbMkpcdTAwMWJbbVx1MDAxYltIXHUwMDFiXTA7566h55CG5ZGYOiBDOlxcV2luZG93c1xcU3lzdGVtMzJcXFdpbmRvd3NQb3dlclNoZWxsXFx2MS4wXFxwb3dlcnNoZWxsLmV4ZVx1MDAwN1x1MDAxYls/MjVoXHUwMDFiWzM4OzU7OW1kaXIgOiDnrKzkuozkuKrot6/lvoTmrrXkuI3lvpfkuLrpqbHliqjlmajmiJYgVU5DIOWQjeensOOAglxu5Y+C5pWw5ZCNOiBwYXRoMlxu5omA5Zyo5L2N572uIOihjDoxIOWtl+espjogMVxuKyBkaXIgc3JjIC9zXG4rIH5+fn5+fn5+fn5cbiAgICArIENhdGVnb3J5SW5mbyAgICAgICAgICA6IEludmFsaWRBcmd1bWVudDogKEQ6XFxFeHBsb2l0YXRpb24uLi52ZS1TcGFjZS1VaVxcc3JjOlN0cmluZykgW0dldC1DaGlsZEl0ZW1d77yMQXJndW1lbnRFeGNlXG4gICAgcHRpb25cbiAgICArIEZ1bGx5UXVhbGlmaWVkRXJyb3JJZCA6IERpckFyZ3VtZW50RXJyb3IsTWljcm9zb2Z0LlBvd2VyU2hlbGwuQ29tbWFuZHMuR2V0Q2hpbGRJdGVtQ29tbWFuZFxuIFxuXHUwMDFiW21cbiAgICAgICAgPC9zdGRvdXQ+XG4gICAgICAgIDxzdGRlcnI+XG4gICAgICAgIFxuICAgICAgICA8L3N0ZGVycj4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxOXA5dkNFVTk4aW5OblVaUTNZbzZnOCJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlLCJjdXJyZW50VGVybWluYWwiOnsidGVybWluYWxJZCI6NSwiY3VycmVudFdvcmtpbmdEaXJlY3RvcnkiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifX19XSwicmVzcG9uc2VfdGV4dCI6IkxldCBtZSB0cnkgYSBkaWZmZXJlbnQgYXBwcm9hY2ggdG8gZXhwbG9yZSB0aGUgcHJvamVjdCBzdHJ1Y3R1cmUuXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMjI2NmZjMzctMDBkYS00YTJjLTg2ZTUtNWRiMTNmNzRiMWUzIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUpSdWtTZ01qeUQ1YUt0QXJNVmFBVmMiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL2FwaS9TZWFyY2guanNcIn0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6Ik5vdyBJIGNhbiBzZWUgdGhlIHByb2plY3Qgc3RydWN0dXJlIGJldHRlci4gTGV0IG1lIGNoZWNrIHRoZSBBUEkgZGlyZWN0b3J5IHNpbmNlIHlvdSBtZW50aW9uZWQgYHNyYy9hcGkvU2VhcmNoLmpzYCBpbiB5b3VyIGluaXRpYWwgbWVzc2FnZS5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkhlcmUgYXJlIHRoZSByZXN1bHRzIGZyb20gZXhlY3V0aW5nIHRoZSBjb21tYW5kLlxuICAgICAgICA8cmV0dXJuLWNvZGU+XG4gICAgICAgIDBcbiAgICAgICAgPC9yZXR1cm4tY29kZT5cbiAgICAgICAgPHN0ZG91dD5cbiAgICAgICAgXHUwMDFiWz85MDAxaFx1MDAxYls/MTAwNGhcdTAwMWJbPzI1bFx1MDAxYlsySlx1MDAxYlttXHUwMDFiW0hcdTAwMWJdMDvnrqHnkIblkZg6IEM6XFxXaW5kb3dzXFxTeXN0ZW0zMlxcV2luZG93c1Bvd2VyU2hlbGxcXHYxLjBcXHBvd2Vyc2hlbGwuZXhlXHUwMDA3XHUwMDFiWz8yNWhcdTAwMWJbPzI1bFx1MDAxYlszOzFIICAgIOebruW9lTogRDpcXEV4cGxvaXRhdGlvblxcSmF2YVdlYlxcS0hcXGxvdmUtc3BhY2VcXExvdmUtU3BhY2UtVWlcXHNyY1x1MDAxYls2OzFITW9kZSAgICAgICAgICAgICAgICAgTGFzdFdyaXRlVGltZSAgICAgICAgIExlbmd0aCBOYW1lXHUwMDFiWzY1WFxuLS0tLSAgICAgICAgICAgICAgICAgLS0tLS0tLS0tLS0tLSAgICAgICAgIC0tLS0tLSAtLS0tXHUwMDFiWzY1WFxuZC0tLS0tICAgICAgICAgMjAyNS80LzE2ICAgICAxNToyNyAgICAgICAgICAgICAgICBhcGlcdTAwMWJbNjZYXG5kLS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEzOjUyICAgICAgICAgICAgICAgIGFzc2V0c1x1MDAxYls2M1hcbmQtLS0tLSAgICAgICAgIDIwMjUvNC8xNiAgICAgMTY6NDAgICAgICAgICAgICAgICAgY29tcG9uZW50c1x1MDAxYls1OVhcbmQtLS0tLSAgICAgICAgIDIwMjUvNC8xNSAgICAgMTc6MjMgICAgICAgICAgICAgICAgcm91dGVyXHUwMDFiWzYzWFxuZC0tLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgICAgICBzdG9yZXNcdTAwMWJbNjNYXG5kLS0tLS0gICAgICAgICAyMDI1LzQvMTIgICAgICA5OjA5ICAgICAgICAgICAgICAgIHV0aWxzXHUwMDFiWzY0WFxuZC0tLS0tICAgICAgICAgMjAyNS80LzE2ICAgICAxNjo0MSAgICAgICAgICAgICAgICB2aWV3c1x1MDAxYls2NFhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTQ6MTEgICAgICAgICAgICAzNzIgQXBwLnZ1ZVx1MDAxYls2Mlhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTI6NTYgICAgICAgICAgICA4OTEgbWFpbi5qc1x1MDAxYls2MlhcdTAwMWJbMTk7MUhcdTAwMWJbPzI1aFxuICAgICAgICA8L3N0ZG91dD5cbiAgICAgICAgPHN0ZGVycj5cbiAgICAgICAgXG4gICAgICAgIDwvc3RkZXJyPiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFQdVV6eG94c21kTGllZ3M4cXZnWG5UIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2UsImN1cnJlbnRUZXJtaW5hbCI6eyJ0ZXJtaW5hbElkIjo2LCJjdXJyZW50V29ya2luZ0RpcmVjdG9yeSI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9fX1dLCJyZXNwb25zZV90ZXh0IjoiTm93IEkgY2FuIHNlZSB0aGUgcHJvamVjdCBzdHJ1Y3R1cmUgYmV0dGVyLiBMZXQgbWUgY2hlY2sgdGhlIEFQSSBkaXJlY3Rvcnkgc2luY2UgeW91IG1lbnRpb25lZCBgc3JjL2FwaS9TZWFyY2guanNgIGluIHlvdXIgaW5pdGlhbCBtZXNzYWdlLlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6ImM5ZjY3NzY1LWIyYWEtNDc1ZS1hZGJiLTZmMjliYTUzZjU0NiIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDE3RXdpRDNCUVRLVVhkbVh0YlZjaTMyIiwidG9vbF9uYW1lIjoibGF1bmNoLXByb2Nlc3MiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcImRpciBzcmNcXFxcYXBpXCIsIFwid2FpdFwiOiB0cnVlLCBcIm1heF93YWl0X3NlY29uZHNcIjogNjB9In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiJMZXQgbWUgYWxzbyBjaGVjayB0aGUgc3RydWN0dXJlIG9mIHRoZSBBUEkgZGlyZWN0b3J5IHRvIHVuZGVyc3RhbmQgaG93IHRoZSBBUEkgZmlsZXMgYXJlIG9yZ2FuaXplZDpcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL2FwaS9TZWFyY2guanM6XG4gICAgIDFcdGltcG9ydCByZXF1ZXN0IGZyb20gXCJAL3V0aWxzL3JlcXVlc3RcIlxuICAgICAyXHRcbiAgICAgM1x0Ly8g5pCc57SiXG4gICAgIDRcdGV4cG9ydCBjb25zdCBnZXRTZWFyY2hSZXN1bHQgPSAocGFyYW1zKSA9PiB7XG4gICAgIDVcdCAgICByZXR1cm4gcmVxdWVzdC5nZXQoJy9zZWFyY2gnLCB7XG4gICAgIDZcdCAgICAgICAgcGFyYW1zOiB7XG4gICAgIDdcdCAgICAgICAgICAgIGtleXdvcmQ6IHBhcmFtcy5rZXl3b3JkLFxuICAgICA4XHQgICAgICAgICAgICBwYWdlTnVtOiBwYXJhbXMucGFnZU51bSxcbiAgICAgOVx0ICAgICAgICAgICAgcGFnZVNpemU6IHBhcmFtcy5wYWdlU2l6ZVxuICAgIDEwXHQgICAgICAgIH1cbiAgICAxMVx0ICAgIH0pXG4gICAgMTJcdH1cblRvdGFsIGxpbmVzIGluIGZpbGU6IDEyXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxSlJ1a1NnTWp5RDVhS3RBck1WYUFWYyJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlLCJjdXJyZW50VGVybWluYWwiOnsidGVybWluYWxJZCI6NiwiY3VycmVudFdvcmtpbmdEaXJlY3RvcnkiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifX19XSwicmVzcG9uc2VfdGV4dCI6IkxldCBtZSBhbHNvIGNoZWNrIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlIEFQSSBkaXJlY3RvcnkgdG8gdW5kZXJzdGFuZCBob3cgdGhlIEFQSSBmaWxlcyBhcmUgb3JnYW5pemVkOlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjE3ODNhZWJlLWU3YmMtNGIwYi1hNGM3LTJlMjg3MjdiMmM1YyIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IkkndmUgZXhhbWluZWQgdGhlIHByb2plY3Qgc3RydWN0dXJlIGFuZCB0aGUgYHNyYy9hcGkvU2VhcmNoLmpzYCBmaWxlLiBCYXNlZCBvbiB3aGF0IEkgY2FuIHNlZSwgdGhpcyBpcyBhIFZ1ZS5qcyBwcm9qZWN0IHdpdGggYSB0eXBpY2FsIHN0cnVjdHVyZS4gVGhlIGBTZWFyY2guanNgIGZpbGUgY29udGFpbnMgYW4gQVBJIGZ1bmN0aW9uIGZvciBzZWFyY2hpbmcgd2l0aCBwYWdpbmF0aW9uIHBhcmFtZXRlcnMuXG5cbklzIHRoZXJlIHNvbWV0aGluZyBzcGVjaWZpYyB5b3UnZCBsaWtlIG1lIHRvIGhlbHAgeW91IHdpdGggcmVnYXJkaW5nIHRoaXMgZmlsZSBvciB0aGUgcHJvamVjdCBpbiBnZW5lcmFsPyBJIGNhbjpcblxuMS4gRXhwbGFpbiB0aGUgY3VycmVudCBmdW5jdGlvbmFsaXR5IG9mIHRoZSBTZWFyY2guanMgZmlsZVxuMi4gSGVscCBtb2RpZnkgb3IgZXh0ZW5kIHRoZSBzZWFyY2ggZnVuY3Rpb25hbGl0eVxuMy4gRXhwbG9yZSBob3cgdGhpcyBzZWFyY2ggQVBJIGlzIHVzZWQgaW4gdGhlIGNvbXBvbmVudHNcbjQuIEFzc2lzdCB3aXRoIG90aGVyIGFzcGVjdHMgb2YgdGhlIHByb2plY3RcblxuUGxlYXNlIGxldCBtZSBrbm93IHdoYXQgeW91J2QgbGlrZSBtZSB0byBmb2N1cyBvbi5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkhlcmUgYXJlIHRoZSByZXN1bHRzIGZyb20gZXhlY3V0aW5nIHRoZSBjb21tYW5kLlxuICAgICAgICA8cmV0dXJuLWNvZGU+XG4gICAgICAgIDBcbiAgICAgICAgPC9yZXR1cm4tY29kZT5cbiAgICAgICAgPHN0ZG91dD5cbiAgICAgICAgXHUwMDFiWz85MDAxaFx1MDAxYls/MTAwNGhcdTAwMWJbPzI1bFx1MDAxYlsySlx1MDAxYlttXHUwMDFiW0hcdTAwMWJdMDvnrqHnkIblkZg6IEM6XFxXaW5kb3dzXFxTeXN0ZW0zMlxcV2luZG93c1Bvd2VyU2hlbGxcXHYxLjBcXHBvd2Vyc2hlbGwuZXhlXHUwMDA3XHUwMDFiWz8yNWhcdTAwMWJbPzI1bFx1MDAxYlszOzFIICAgIOebruW9lTogRDpcXEV4cGxvaXRhdGlvblxcSmF2YVdlYlxcS0hcXGxvdmUtc3BhY2VcXExvdmUtU3BhY2UtVWlcXHNyY1xcYXBpXHUwMDFiWzY7MUhNb2RlICAgICAgICAgICAgICAgICBMYXN0V3JpdGVUaW1lICAgICAgICAgTGVuZ3RoIE5hbWVcdTAwMWJbNjVYXG4tLS0tICAgICAgICAgICAgICAgICAtLS0tLS0tLS0tLS0tICAgICAgICAgLS0tLS0tIC0tLS1cdTAwMWJbNjVYXG5kLS0tLS0gICAgICAgICAyMDI1LzQvMTIgICAgIDE4OjQyICAgICAgICAgICAgICAgIGFkbWluXHUwMDFiWzY0WFxuZC0tLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgICAgICBhbmltZVx1MDAxYls2NFhcbmQtLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTI6NTYgICAgICAgICAgICAgICAgYmFuZ3VtaVx1MDAxYls2MlhcbmQtLS0tLSAgICAgICAgIDIwMjUvNC8xNSAgICAgMTc6MDkgICAgICAgICAgICAgICAgdXNlclx1MDAxYls2NVhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xNSAgICAgMTc6MzUgICAgICAgICAgICA0NzcgQW5ub3VuY2VtZW50LmpzXHUwMDFiWzU0WFxuLWEtLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgIDI4MCBiYXJyYWdlLmpzXHUwMDFiWzU5WFxuXHUwMDFiWz8yNWhcdTAwMWJbPzI1bC1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTI6NTYgICAgICAgICAgICA4NjcgY2hhdC5qc1x1MDAxYls2Mlhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTI6NTYgICAgICAgICAgICAzNDUgY29tbWVudHMuanNcdTAwMWJbNThYXG4tYS0tLS0gICAgICAgICAyMDI1LzQvMTUgICAgIDE0OjEyICAgICAgICAgICAgMjkxIGZvbGxvdy5qc1x1MDAxYls2MFhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTI6NTYgICAgICAgICAgICAyODkgU2VhcmNoLmpzXHUwMDFiWzYwWFxuLWEtLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgIDYwMSB1c2VyVmlkZW8uanNcdTAwMWJbNTdYXG4tYS0tLS0gICAgICAgICAyMDI1LzQvMTQgICAgIDE1OjA0ICAgICAgICAgICAgNTIyIHZpZGVvLmpzXHUwMDFiWzYxWFxuLWEtLS0tICAgICAgICAgMjAyNS80LzE2ICAgICAxNToyNyAgICAgICAgICAgIDE1OCB2aWRvZWxpa2UuanNcdTAwMWJbNTdYXHUwMDFiWzIzOzFIXHUwMDFiWz8yNWhcbiAgICAgICAgPC9zdGRvdXQ+XG4gICAgICAgIDxzdGRlcnI+XG4gICAgICAgIFxuICAgICAgICA8L3N0ZGVycj4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxN0V3aUQzQlFUS1VYZG1YdGJWY2kzMiJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlLCJjdXJyZW50VGVybWluYWwiOnsidGVybWluYWxJZCI6NywiY3VycmVudFdvcmtpbmdEaXJlY3RvcnkiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifX19XSwicmVzcG9uc2VfdGV4dCI6IkkndmUgZXhhbWluZWQgdGhlIHByb2plY3Qgc3RydWN0dXJlIGFuZCB0aGUgYHNyYy9hcGkvU2VhcmNoLmpzYCBmaWxlLiBCYXNlZCBvbiB3aGF0IEkgY2FuIHNlZSwgdGhpcyBpcyBhIFZ1ZS5qcyBwcm9qZWN0IHdpdGggYSB0eXBpY2FsIHN0cnVjdHVyZS4gVGhlIGBTZWFyY2guanNgIGZpbGUgY29udGFpbnMgYW4gQVBJIGZ1bmN0aW9uIGZvciBzZWFyY2hpbmcgd2l0aCBwYWdpbmF0aW9uIHBhcmFtZXRlcnMuXG5cbklzIHRoZXJlIHNvbWV0aGluZyBzcGVjaWZpYyB5b3UnZCBsaWtlIG1lIHRvIGhlbHAgeW91IHdpdGggcmVnYXJkaW5nIHRoaXMgZmlsZSBvciB0aGUgcHJvamVjdCBpbiBnZW5lcmFsPyBJIGNhbjpcblxuMS4gRXhwbGFpbiB0aGUgY3VycmVudCBmdW5jdGlvbmFsaXR5IG9mIHRoZSBTZWFyY2guanMgZmlsZVxuMi4gSGVscCBtb2RpZnkgb3IgZXh0ZW5kIHRoZSBzZWFyY2ggZnVuY3Rpb25hbGl0eVxuMy4gRXhwbG9yZSBob3cgdGhpcyBzZWFyY2ggQVBJIGlzIHVzZWQgaW4gdGhlIGNvbXBvbmVudHNcbjQuIEFzc2lzdCB3aXRoIG90aGVyIGFzcGVjdHMgb2YgdGhlIHByb2plY3RcblxuUGxlYXNlIGxldCBtZSBrbm93IHdoYXQgeW91J2QgbGlrZSBtZSB0byBmb2N1cyBvbi5cbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsicmVxdWVzdF9pZCI6IjliOTQzMzkyLTIyOGYtNGM2NS1iZWJhLWY3NGMxNjhkNGU1MyIsInN0YXR1cyI6ImNhbmNlbGxlZCIsImNoYXRJdGVtVHlwZSI6ImFnZW50aWMtdHVybi1kZWxpbWl0ZXIifSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMmE5YjNmNWUtNzQxNy00M2M5LTkyOTktYTRiMDhiYjBhYjk3IiwicmVxdWVzdF9tZXNzYWdlIjoi5L2/55So5Lit5paH5LiO5oiR5Lqk5rWBIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IuS9v+eUqOS4reaWh+S4juaIkeS6pOa1gSJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5b2T54S25Y+v5Lul5L2/55So5Lit5paH5LiO5oKo5Lqk5rWB44CC5oiR5bey57uP5p+l55yL5LqG6aG555uu57uT5p6E5ZKMYHNyYy9hcGkvU2VhcmNoLmpzYOaWh+S7tuOAgui/meaYr+S4gOS4qlZ1ZS5qc+mhueebru+8jOWFt+acieWFuOWei+eahOmhueebrue7k+aehOOAgmBTZWFyY2guanNg5paH5Lu25YyF5ZCr5LqG5LiA5Liq5bim5pyJ5YiG6aG15Y+C5pWw55qE5pCc57SiQVBJ5Ye95pWw44CCXG5cbuaIkeWPr+S7peW4ruaCqO+8mlxuXG4xLiDop6Pph4pTZWFyY2guanPmlofku7bnmoTlvZPliY3lip/og71cbjIuIOW4ruWKqeS/ruaUueaIluaJqeWxleaQnOe0ouWKn+iDvVxuMy4g5o6i57Si6L+Z5Liq5pCc57SiQVBJ5Zyo57uE5Lu25Lit5piv5aaC5L2V5L2/55So55qEXG40LiDljY/liqnlpITnkIbpobnnm67nmoTlhbbku5bmlrnpnaJcblxu6K+35ZGK6K+J5oiR5oKo5biM5pyb5oiR6YeN54K55YWz5rOo5LuA5LmI77yfXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjowLCJ0ZXh0X25vZGUiOnsiY29udGVudCI6IuS9v+eUqOS4reaWh+S4juaIkeS6pOa1gSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlLCJjdXJyZW50VGVybWluYWwiOnsidGVybWluYWxJZCI6NywiY3VycmVudFdvcmtpbmdEaXJlY3RvcnkiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifX19XSwicmVzcG9uc2VfdGV4dCI6IuW9k+eEtuWPr+S7peS9v+eUqOS4reaWh+S4juaCqOS6pOa1geOAguaIkeW3sue7j+afpeeci+S6humhueebrue7k+aehOWSjGBzcmMvYXBpL1NlYXJjaC5qc2Dmlofku7bjgILov5nmmK/kuIDkuKpWdWUuanPpobnnm67vvIzlhbfmnInlhbjlnovnmoTpobnnm67nu5PmnoTjgIJgU2VhcmNoLmpzYOaWh+S7tuWMheWQq+S6huS4gOS4quW4puacieWIhumhteWPguaVsOeahOaQnOe0okFQSeWHveaVsOOAglxuXG7miJHlj6/ku6XluK7mgqjvvJpcblxuMS4g6Kej6YeKU2VhcmNoLmpz5paH5Lu255qE5b2T5YmN5Yqf6IO9XG4yLiDluK7liqnkv67mlLnmiJbmianlsZXmkJzntKLlip/og71cbjMuIOaOoue0oui/meS4quaQnOe0okFQSeWcqOe7hOS7tuS4reaYr+WmguS9leS9v+eUqOeahFxuNC4g5Y2P5Yqp5aSE55CG6aG555uu55qE5YW25LuW5pa56Z2iXG5cbuivt+WRiuivieaIkeaCqOW4jOacm+aIkemHjeeCueWFs+azqOS7gOS5iO+8n1xuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJyZXF1ZXN0X2lkIjoiY2I1YzRmNjItMTkyMC00YTYwLWI4ZDMtYzM2ODQwZjlmMjQ5Iiwic3RhdHVzIjoiY2FuY2VsbGVkIiwiY2hhdEl0ZW1UeXBlIjoiYWdlbnRpYy10dXJuLWRlbGltaXRlciJ9LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiI2YmQwNDUyMi03MDZhLTRhNzMtYmVjMi1kNWYxMThiNGU5NzYiLCJyZXF1ZXN0X21lc3NhZ2UiOiLov5nkuKrliY3nq6/pobnnm67kvb/nlKjkuobku4DkuYjmoYbmnrYiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoi6L+Z5Liq5YmN56uv6aG555uu5L2/55So5LqG5LuA5LmI5qGG5p62In1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxVFFiVVFhWTZFYXd0NG5hWHN2dGExaCIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwidmlld1wiLCBcInBhdGhcIjogXCJwYWNrYWdlLmpzb25cIn0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuiuqeaIkeWIhuaekOS4gOS4i+i/meS4quWJjeerr+mhueebruS9v+eUqOeahOahhuaetuOAguaIkeWwhuafpeeci+S4gOS6m+WFs+mUruaWh+S7tuadpeehruWumuS9v+eUqOeahOaKgOacr+agiOOAglxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MCwidGV4dF9ub2RlIjp7ImNvbnRlbnQiOiLov5nkuKrliY3nq6/pobnnm67kvb/nlKjkuobku4DkuYjmoYbmnrYifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZSwiY3VycmVudFRlcm1pbmFsIjp7InRlcm1pbmFsSWQiOjcsImN1cnJlbnRXb3JraW5nRGlyZWN0b3J5IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn19fV0sInJlc3BvbnNlX3RleHQiOiLorqnmiJHliIbmnpDkuIDkuIvov5nkuKrliY3nq6/pobnnm67kvb/nlKjnmoTmoYbmnrbjgILmiJHlsIbmn6XnnIvkuIDkupvlhbPplK7mlofku7bmnaXnoa7lrprkvb/nlKjnmoTmioDmnK/moIjjgIJcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJkNGUyYTE1NS02MDQyLTRhNTctYTFlYS00YjcxZmY0YzVlZjYiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxTXV5ZU1MczZwMTlWUTRwM0JaUG9VZCIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwidmlld1wiLCBcInBhdGhcIjogXCJtYWluLmpzXCJ9In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiIifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHBhY2thZ2UuanNvbjpcbiAgICAgMVx0e1xuICAgICAyXHQgIFwibmFtZVwiOiBcImJpbGliaWxpLWNsb25lXCIsXG4gICAgIDNcdCAgXCJ2ZXJzaW9uXCI6IFwiMS4wLjBcIixcbiAgICAgNFx0ICBcInByaXZhdGVcIjogdHJ1ZSxcbiAgICAgNVx0ICBcInNjcmlwdHNcIjoge1xuICAgICA2XHQgICAgXCJkZXZcIjogXCJ2aXRlXCIsXG4gICAgIDdcdCAgICBcImJ1aWxkXCI6IFwidml0ZSBidWlsZFwiLFxuICAgICA4XHQgICAgXCJwcmV2aWV3XCI6IFwidml0ZSBwcmV2aWV3XCJcbiAgICAgOVx0ICB9LFxuICAgIDEwXHQgIFwiZGVwZW5kZW5jaWVzXCI6IHtcbiAgICAxMVx0ICAgIFwiQGVsZW1lbnQtcGx1cy9pY29ucy12dWVcIjogXCJeMi4wLjBcIixcbiAgICAxMlx0ICAgIFwiYXJ0cGxheWVyXCI6IFwiXjUuMi4xXCIsXG4gICAgMTNcdCAgICBcImFydHBsYXllci1wbHVnaW4tZGFubXVrdVwiOiBcIl4zLjUuMzFcIixcbiAgICAxNFx0ICAgIFwiYXhpb3NcIjogXCJeMS43LjlcIixcbiAgICAxNVx0ICAgIFwiYmlsaWJpbGktY2xvbmVcIjogXCJmaWxlOlwiLFxuICAgIDE2XHQgICAgXCJkYXlqc1wiOiBcIl4xLjExLjEzXCIsXG4gICAgMTdcdCAgICBcImVsZW1lbnQtcGx1c1wiOiBcIl4yLjAuMFwiLFxuICAgIDE4XHQgICAgXCJtaXR0XCI6IFwiXjMuMC4xXCIsXG4gICAgMTlcdCAgICBcInBpbmlhXCI6IFwiXjIuMy4wXCIsXG4gICAgMjBcdCAgICBcInBpbmlhLXBlcnNpc3RlZHN0YXRlLXBsdWdpblwiOiBcIl4wLjEuMFwiLFxuICAgIDIxXHQgICAgXCJ2dWVcIjogXCJeMy4zLjBcIixcbiAgICAyMlx0ICAgIFwidnVlLXJvdXRlclwiOiBcIl40LjAuMFwiXG4gICAgMjNcdCAgfSxcbiAgICAyNFx0ICBcImRldkRlcGVuZGVuY2llc1wiOiB7XG4gICAgMjVcdCAgICBcIkB2aXRlanMvcGx1Z2luLXZ1ZVwiOiBcIl40LjAuMFwiLFxuICAgIDI2XHQgICAgXCJwYXRoXCI6IFwiXjAuMTIuN1wiLFxuICAgIDI3XHQgICAgXCJzYXNzXCI6IFwiXjEuODMuMFwiLFxuICAgIDI4XHQgICAgXCJ2aXRlXCI6IFwiXjQuMC4wXCJcbiAgICAyOVx0ICB9XG4gICAgMzBcdH1cbiAgICAzMVx0XG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiAzMVxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMVRRYlVRYVk2RWF3dDRuYVhzdnRhMWgifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZSwiY3VycmVudFRlcm1pbmFsIjp7InRlcm1pbmFsSWQiOjcsImN1cnJlbnRXb3JraW5nRGlyZWN0b3J5IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn19fV0sInJlc3BvbnNlX3RleHQiOiIiLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNjMzOTIwMzUtZDZlZC00ZDRkLTk1NjAtYzkxNTYyZmNlNzdlIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMVNKVUNzVTl1cUJWclhDNFRON2ltcWgiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL21haW4uanNcIn0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IlJhbiBpbnRvIFVua25vd24gZXJyb3Igd2hpbGUgdHJ5aW5nIHRvIHJlYWQgbWFpbi5qcyIsImlzX2Vycm9yIjp0cnVlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMU11eWVNTHM2cDE5VlE0cDNCWlBvVWQifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZSwiY3VycmVudFRlcm1pbmFsIjp7InRlcm1pbmFsSWQiOjcsImN1cnJlbnRXb3JraW5nRGlyZWN0b3J5IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn19fV0sInJlc3BvbnNlX3RleHQiOiIiLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiZTVlY2U1NTQtZjYyNC00N2FlLWFhYmQtZThiMTZkOWMzZjEzIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMVk1azV5M2J5aWtvc2p5dXBKTWlxTlIiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwidml0ZS5jb25maWcuanNcIn0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL21haW4uanM6XG4gICAgIDFcdGltcG9ydCB7IGNyZWF0ZUFwcCB9IGZyb20gJ3Z1ZSdcbiAgICAgMlx0aW1wb3J0IEVsZW1lbnRQbHVzIGZyb20gJ2VsZW1lbnQtcGx1cydcbiAgICAgM1x0aW1wb3J0ICogYXMgRWxlbWVudFBsdXNJY29uc1Z1ZSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcbiAgICAgNFx0aW1wb3J0ICdlbGVtZW50LXBsdXMvZGlzdC9pbmRleC5jc3MnXG4gICAgIDVcdGltcG9ydCBBcHAgZnJvbSAnQC9BcHAudnVlJ1xuICAgICA2XHRpbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyJ1xuICAgICA3XHRpbXBvcnQge2NyZWF0ZVBpbmlhfSBmcm9tIFwicGluaWFcIlxuICAgICA4XHRpbXBvcnQge2NyZWF0ZVBlcnNpc3RlZFN0YXRlfSBmcm9tIFwicGluaWEtcGVyc2lzdGVkc3RhdGUtcGx1Z2luXCJcbiAgICAgOVx0aW1wb3J0IHpoQ24gZnJvbSBcImVsZW1lbnQtcGx1cy9kaXN0L2xvY2FsZS96aC1jbi5tanNcIlxuICAgIDEwXHRpbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXG4gICAgMTFcdGltcG9ydCByZWxhdGl2ZVRpbWUgZnJvbSAnZGF5anMvcGx1Z2luL3JlbGF0aXZlVGltZSdcbiAgICAxMlx0aW1wb3J0ICdkYXlqcy9sb2NhbGUvemgtY24nXG4gICAgMTNcdFxuICAgIDE0XHRkYXlqcy5leHRlbmQocmVsYXRpdmVUaW1lKVxuICAgIDE1XHRkYXlqcy5sb2NhbGUoJ3poLWNuJylcbiAgICAxNlx0XG4gICAgMTdcdGNvbnN0IGFwcCA9IGNyZWF0ZUFwcChBcHApXG4gICAgMThcdGNvbnN0IHBpbmlhID0gY3JlYXRlUGluaWEoKVxuICAgIDE5XHRjb25zdCBwZXJzaXN0ID0gY3JlYXRlUGVyc2lzdGVkU3RhdGUoKTtcbiAgICAyMFx0Ly8g5rOo5YaM5omA5pyJ5Zu+5qCHXG4gICAgMjFcdGZvciAoY29uc3QgW2tleSwgY29tcG9uZW50XSBvZiBPYmplY3QuZW50cmllcyhFbGVtZW50UGx1c0ljb25zVnVlKSkge1xuICAgIDIyXHQgIGFwcC5jb21wb25lbnQoa2V5LCBjb21wb25lbnQpXG4gICAgMjNcdH1cbiAgICAyNFx0cGluaWEudXNlKHBlcnNpc3QpXG4gICAgMjVcdGFwcC51c2UocGluaWEpXG4gICAgMjZcdGFwcC51c2UoRWxlbWVudFBsdXMse2xvY2FsZTp6aENufSlcbiAgICAyN1x0YXBwLnVzZShyb3V0ZXIpXG4gICAgMjhcdGFwcC5tb3VudCgnI2FwcCcpIFxuVG90YWwgbGluZXMgaW4gZmlsZTogMjhcbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFTSlVDc1U5dXFCVnJYQzRUTjdpbXFoIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2UsImN1cnJlbnRUZXJtaW5hbCI6eyJ0ZXJtaW5hbElkIjo3LCJjdXJyZW50V29ya2luZ0RpcmVjdG9yeSI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9fX1dLCJyZXNwb25zZV90ZXh0IjoiIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjRiNWQ2MTYzLTUwNmEtNGIyMy05OTExLTlmNmFkNTNlNzJjNyIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuagueaNruaIkeafpeeci+eahOaWh+S7tu+8jOaIkeWPr+S7peehruWumui/meS4quWJjeerr+mhueebruS9v+eUqOS6huS7peS4i+ahhuaetuWSjOaKgOacr++8mlxuXG4xLiAqKlZ1ZS5qcyAzKirvvJrov5nmmK/pobnnm67nmoTkuLvopoHmoYbmnrbvvIzkvb/nlKjkuoZWdWUgM+eahENvbXBvc2l0aW9uIEFQSeOAglxuXG4yLiAqKlZpdGUqKu+8muS9nOS4uuaehOW7uuW3peWFt+WSjOW8gOWPkeacjeWKoeWZqOOAglxuXG4zLiAqKkVsZW1lbnQgUGx1cyoq77ya55So5LqOVUnnu4Tku7blupPvvIzov5nmmK/kuIDkuKrln7rkuo5WdWUgM+eahOe7hOS7tuW6k+OAglxuXG40LiAqKlBpbmlhKirvvJrnlKjkuo7nirbmgIHnrqHnkIbvvIzov5nmmK9WdWUgM+aOqOiNkOeahOeKtuaAgeeuoeeQhuW6k++8jOabv+S7o+S6hlZ1ZXjjgIJcblxuNS4gKipWdWUgUm91dGVyIDQqKu+8mueUqOS6jui3r+eUseeuoeeQhuOAglxuXG42LiAqKkF4aW9zKirvvJrnlKjkuo5IVFRQ6K+35rGC44CCXG5cbjcuICoqRGF5anMqKu+8mueUqOS6juaXpeacn+WkhOeQhuOAglxuXG44LiAqKlNhc3MqKu+8mueUqOS6jkNTU+mihOWkhOeQhuOAglxuXG45LiAqKkFydHBsYXllcioq77ya6KeG6aKR5pKt5pS+5Zmo77yM55yL6LW35p2l6L+Z5Liq6aG555uu5Y+v6IO95piv5LiA5Liq6KeG6aKR5YiG5Lqr5bmz5Y+w77yI5LuO6aG555uu5ZCN56ewXCJiaWxpYmlsaS1jbG9uZVwi5Lmf5Y+v5Lul55yL5Ye677yJ44CCXG5cbui/meaYr+S4gOS4quWFuOWei+eahOeOsOS7o1Z1ZSAz6aG555uu77yM5L2/55So5LqGVnVl55Sf5oCB57O757uf5Lit5pyA5paw55qE5bel5YW35ZKM5bqT44CC6aG555uu57uT5p6E5Lmf6YG15b6q5LqGVnVl6aG555uu55qE5pyA5L2z5a6e6Le177yM5YyF5ous57uE5Lu25YyW5byA5Y+R44CBQVBJ5qih5Z2X5YyW562J44CCXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHZpdGUuY29uZmlnLmpzOlxuICAgICAxXHRpbXBvcnQgeyBkZWZpbmVDb25maWcgfSBmcm9tICd2aXRlJ1xuICAgICAyXHRpbXBvcnQgdnVlIGZyb20gJ0B2aXRlanMvcGx1Z2luLXZ1ZSdcbiAgICAgM1x0aW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbiAgICAgNFx0XG4gICAgIDVcdGV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZyh7XG4gICAgIDZcdCAgcGx1Z2luczogW3Z1ZSgpXSxcbiAgICAgN1x0ICBzZXJ2ZXI6IHtcbiAgICAgOFx0ICAgIHBvcnQ6IDUxNzMsXG4gICAgIDlcdCAgICBwcm94eToge1xuICAgIDEwXHQgICAgICAgICcvYXBpJzogeyAvL+iOt+WPlui3r+W+hOS4reWMheWQq2FwaeeahOivt+axglxuICAgIDExXHQgICAgICAgICAgdGFyZ2V0OiAnaHR0cDovLzEyNy4wLjAuMTo4MDgwJywgLy/lkI7lj7DmnI3liqHmiYDlnKjnmoTmupBcbiAgICAxMlx0ICAgICAgICAgIGNoYW5nZU9yaWdpbjogdHJ1ZSxcbiAgICAxM1x0ICAgICAgICAgIC8vIHJld3JpdGU6IChwYXRoKSA9PiBwYXRoLnJlcGxhY2UoL15cXC9hcGkvLCAnJykgLy8g5bCG6Lev5b6E5Lit55qEYXBp5pu/5o2i5Li656m6XG4gICAgMTRcdCAgICAgICAgfVxuICAgIDE1XHQgICAgICB9XG4gICAgMTZcdCAgfSxcbiAgICAxN1x0ICByZXNvbHZlOiB7XG4gICAgMThcdCAgICBhbGlhczoge1xuICAgIDE5XHQgICAgICAnQCc6IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICdzcmMnKVxuICAgIDIwXHQgICAgfSxcbiAgICAyMVx0ICAgIFxuICAgIDIyXHQgIH1cbiAgICAyM1x0XG4gICAgMjRcdH0pIFxuVG90YWwgbGluZXMgaW4gZmlsZTogMjRcbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFZNWs1eTNieWlrb3NqeXVwSk1pcU5SIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2UsImN1cnJlbnRUZXJtaW5hbCI6eyJ0ZXJtaW5hbElkIjo3LCJjdXJyZW50V29ya2luZ0RpcmVjdG9yeSI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9fX1dLCJyZXNwb25zZV90ZXh0Ijoi5qC55o2u5oiR5p+l55yL55qE5paH5Lu277yM5oiR5Y+v5Lul56Gu5a6a6L+Z5Liq5YmN56uv6aG555uu5L2/55So5LqG5Lul5LiL5qGG5p625ZKM5oqA5pyv77yaXG5cbjEuICoqVnVlLmpzIDMqKu+8mui/meaYr+mhueebrueahOS4u+imgeahhuaetu+8jOS9v+eUqOS6hlZ1ZSAz55qEQ29tcG9zaXRpb24gQVBJ44CCXG5cbjIuICoqVml0ZSoq77ya5L2c5Li65p6E5bu65bel5YW35ZKM5byA5Y+R5pyN5Yqh5Zmo44CCXG5cbjMuICoqRWxlbWVudCBQbHVzKirvvJrnlKjkuo5VSee7hOS7tuW6k++8jOi/meaYr+S4gOS4quWfuuS6jlZ1ZSAz55qE57uE5Lu25bqT44CCXG5cbjQuICoqUGluaWEqKu+8mueUqOS6jueKtuaAgeeuoeeQhu+8jOi/meaYr1Z1ZSAz5o6o6I2Q55qE54q25oCB566h55CG5bqT77yM5pu/5Luj5LqGVnVleOOAglxuXG41LiAqKlZ1ZSBSb3V0ZXIgNCoq77ya55So5LqO6Lev55Sx566h55CG44CCXG5cbjYuICoqQXhpb3MqKu+8mueUqOS6jkhUVFDor7fmsYLjgIJcblxuNy4gKipEYXlqcyoq77ya55So5LqO5pel5pyf5aSE55CG44CCXG5cbjguICoqU2Fzcyoq77ya55So5LqOQ1NT6aKE5aSE55CG44CCXG5cbjkuICoqQXJ0cGxheWVyKirvvJrop4bpopHmkq3mlL7lmajvvIznnIvotbfmnaXov5nkuKrpobnnm67lj6/og73mmK/kuIDkuKrop4bpopHliIbkuqvlubPlj7DvvIjku47pobnnm67lkI3np7BcImJpbGliaWxpLWNsb25lXCLkuZ/lj6/ku6XnnIvlh7rvvInjgIJcblxu6L+Z5piv5LiA5Liq5YW45Z6L55qE546w5LujVnVlIDPpobnnm67vvIzkvb/nlKjkuoZWdWXnlJ/mgIHns7vnu5/kuK3mnIDmlrDnmoTlt6XlhbflkozlupPjgILpobnnm67nu5PmnoTkuZ/pgbXlvqrkuoZWdWXpobnnm67nmoTmnIDkvbPlrp7ot7XvvIzljIXmi6znu4Tku7bljJblvIDlj5HjgIFBUEnmqKHlnZfljJbnrYnjgIJcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsicmVxdWVzdF9pZCI6IjI0ZmY0NDY3LTYxMzUtNDkyOS04NjQ5LWVjZDdiYjE5NjhiZiIsInN0YXR1cyI6ImNhbmNlbGxlZCIsImNoYXRJdGVtVHlwZSI6ImFnZW50aWMtdHVybi1kZWxpbWl0ZXIifSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiM2MwNGM5YjgtY2NkOS00NDhhLTlmNWQtOWEwZTg5MWY5MTVkIiwicmVxdWVzdF9tZXNzYWdlIjoi546w5Zyo5Yib5bu65LiA5Liq5raI5oGv5Lit5b+D6aG16Z2i55So5oi354K55Ye75a+86Iiq5qCP55qE5L+h5oGv5Zu+5qCH5Y+v5Lul6L+b5YWl6L+Z5Liq6aG16Z2iIiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IueOsOWcqOWIm+W7uuS4gOS4qua2iOaBr+S4reW/g+mhtemdoueUqOaIt+eCueWHu+WvvOiIquagj+eahOS/oeaBr+Wbvuagh+WPr+S7pei/m+WFpei/meS4qumhtemdoiJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUNOalNQQVZNV1FnUTJFOU1uVGg0MXAiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL2NvbXBvbmVudHMvSGVhZGVyLnZ1ZVwifSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5oiR5bCG5biu5oKo5Yib5bu65LiA5Liq5raI5oGv5Lit5b+D6aG16Z2i77yM5bm26K6+572u5a+86Iiq5qCP55qE5L+h5oGv5Zu+5qCH6ZO+5o6l5Yiw6L+Z5Liq6aG16Z2i44CC6K6p5oiR5YWI5LqG6Kej5LiA5LiL5b2T5YmN55qE5a+86Iiq5qCP57uT5p6E5ZKM6Lev55Sx6YWN572u77yM54S25ZCO5YaN5Yib5bu65paw6aG16Z2i44CCXG5cbiMjIOiuoeWIklxuMS4g5qOA5p+l5b2T5YmN55qE5a+86Iiq5qCP57uE5Lu277yI5Y+v6IO95ZyoSGVhZGVyLnZ1ZeS4re+8iVxuMi4g5qOA5p+l5b2T5YmN55qE6Lev55Sx6YWN572uXG4zLiDliJvlu7rmlrDnmoTmtojmga/kuK3lv4PpobXpnaLnu4Tku7ZcbjQuIOabtOaWsOi3r+eUsemFjee9ru+8jOa3u+WKoOa2iOaBr+S4reW/g+i3r+eUsVxuNS4g5Zyo5a+86Iiq5qCP5Lit5re75Yqg5L+h5oGv5Zu+5qCH5bm26ZO+5o6l5Yiw5paw6aG16Z2iXG5cbuiuqeaIkeS7rOW8gOWni++8mlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MCwidGV4dF9ub2RlIjp7ImNvbnRlbnQiOiLnjrDlnKjliJvlu7rkuIDkuKrmtojmga/kuK3lv4PpobXpnaLnlKjmiLfngrnlh7vlr7zoiKrmoI/nmoTkv6Hmga/lm77moIflj6/ku6Xov5vlhaXov5nkuKrpobXpnaIifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IuaIkeWwhuW4ruaCqOWIm+W7uuS4gOS4qua2iOaBr+S4reW/g+mhtemdou+8jOW5tuiuvue9ruWvvOiIquagj+eahOS/oeaBr+Wbvuagh+mTvuaOpeWIsOi/meS4qumhtemdouOAguiuqeaIkeWFiOS6huino+S4gOS4i+W9k+WJjeeahOWvvOiIquagj+e7k+aehOWSjOi3r+eUsemFjee9ru+8jOeEtuWQjuWGjeWIm+W7uuaWsOmhtemdouOAglxuXG4jIyDorqHliJJcbjEuIOajgOafpeW9k+WJjeeahOWvvOiIquagj+e7hOS7tu+8iOWPr+iDveWcqEhlYWRlci52dWXkuK3vvIlcbjIuIOajgOafpeW9k+WJjeeahOi3r+eUsemFjee9rlxuMy4g5Yib5bu65paw55qE5raI5oGv5Lit5b+D6aG16Z2i57uE5Lu2XG40LiDmm7TmlrDot6/nlLHphY3nva7vvIzmt7vliqDmtojmga/kuK3lv4Pot6/nlLFcbjUuIOWcqOWvvOiIquagj+S4rea3u+WKoOS/oeaBr+Wbvuagh+W5tumTvuaOpeWIsOaWsOmhtemdolxuXG7orqnmiJHku6zlvIDlp4vvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIzYTliYjY5Yi1jNTkyLTQzYmItOTVjMi0zNTVhZmZiNThmMTEiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxQzRKZ1RuSDhHNmEyUlZ2aHllRDVmUSIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwidmlld1wiLCBcInBhdGhcIjogXCJzcmMvcm91dGVyL2luZGV4LmpzXCJ9In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiIifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHNyYy9jb21wb25lbnRzL0hlYWRlci52dWU6XG4gICAgIDFcdDx0ZW1wbGF0ZT5cbiAgICAgMlx0ICA8ZGl2IGNsYXNzPVwiaGVhZGVyXCIgOmNsYXNzPVwieyAnaGVhZGVyLXNjcm9sbGVkJzogaXNTY3JvbGxlZCB9XCI+XG4gICAgIDNcdCAgICA8IS0tIOenu+WKqOerr+aQnOe0ouahhiAtLT5cbiAgICAgNFx0ICAgIDxkaXYgY2xhc3M9XCJtb2JpbGUtc2VhcmNoXCIgdi1pZj1cInNob3dNb2JpbGVTZWFyY2ggJiYgaXNNb2JpbGVcIj5cbiAgICAgNVx0ICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1zZWFyY2gtaGVhZGVyXCI+XG4gICAgIDZcdCAgICAgICAgPGVsLWljb24gY2xhc3M9XCJiYWNrLWljb25cIiBAY2xpY2s9XCJzaG93TW9iaWxlU2VhcmNoID0gZmFsc2VcIj48QXJyb3dMZWZ0IC8+PC9lbC1pY29uPlxuICAgICA3XHQgICAgICAgIDxTZWFyY2hCYXIgXG4gICAgIDhcdCAgICAgICAgICBAc2VhcmNoPVwiaGFuZGxlTW9iaWxlU2VhcmNoXCIgXG4gICAgIDlcdCAgICAgICAgICB2LW1vZGVsPVwic2VhcmNoVGV4dFwiXG4gICAgMTBcdCAgICAgICAgICA6aXMtbW9iaWxlPVwidHJ1ZVwiXG4gICAgMTFcdCAgICAgICAgICByZWY9XCJtb2JpbGVTZWFyY2hCYXJSZWZcIlxuICAgIDEyXHQgICAgICAgIC8+XG4gICAgMTNcdCAgICAgIDwvZGl2PlxuICAgIDE0XHQgICAgPC9kaXY+XG4gICAgMTVcdFxuICAgIDE2XHQgICAgPGRpdiBjbGFzcz1cImhlYWRlci1jb250ZW50XCI+XG4gICAgMTdcdCAgICAgIDwhLS0g5bem5L6nTG9nb+WSjOWvvOiIqiAtLT5cbiAgICAxOFx0ICAgICAgPGRpdiBjbGFzcz1cImxlZnQtc2VjdGlvblwiPlxuICAgIDE5XHQgICAgICAgIDxkaXYgY2xhc3M9XCJsb2dvXCIgQGNsaWNrPVwicm91dGVyLnB1c2goJy8nKVwiPlxuICAgIDIwXHQgICAgICAgICAgPGRpdiBjbGFzcz1cInR2LWljb25cIj5cbiAgICAyMVx0ICAgICAgICAgICAgPGVsLWljb24+PE1vbml0b3IgLz48L2VsLWljb24+XG4gICAgMjJcdCAgICAgICAgICA8L2Rpdj5cbiAgICAyM1x0ICAgICAgICAgIDxzcGFuIGNsYXNzPVwibG9nby10ZXh0XCI+5ZOU5ZOp5ZOU5ZOpPC9zcGFuPlxuICAgIDI0XHQgICAgICAgIDwvZGl2PlxuICAgIDI1XHQgICAgICAgIDwhLS0g56e75Yqo56uv6I+c5Y2V5oyJ6ZKuIC0tPlxuICAgIDI2XHQgICAgICAgIDxkaXYgdi1pZj1cImlzTW9iaWxlXCIgY2xhc3M9XCJtb2JpbGUtbWVudS1idG5cIiBAY2xpY2s9XCJzaG93TW9iaWxlTWVudSA9IHRydWVcIj5cbiAgICAyN1x0ICAgICAgICAgIDxlbC1pY29uPjxNZW51IC8+PC9lbC1pY29uPlxuICAgIDI4XHQgICAgICAgIDwvZGl2PlxuICAgIDI5XHQgICAgICAgIDxkaXYgdi1pZj1cIiFpc01vYmlsZVwiIGNsYXNzPVwibmF2LWxpbmtzXCI+XG4gICAgMzBcdCAgICAgICAgICA8cm91dGVyLWxpbmsgdG89XCIvXCIgY2xhc3M9XCJuYXYtaXRlbVwiIGFjdGl2ZS1jbGFzcz1cImFjdGl2ZVwiPummlumhtTwvcm91dGVyLWxpbms+XG4gICAgMzFcdCAgICAgICAgPC9kaXY+XG4gICAgMzJcdCAgICAgIDwvZGl2PlxuICAgIDMzXHRcbiAgICAzNFx0ICAgICAgPCEtLSDkuK3pl7TmkJzntKLmoYYgLS0+XG4gICAgMzVcdCAgICAgIDxkaXYgdi1pZj1cIiFpc01vYmlsZVwiIGNsYXNzPVwiY2VudGVyLXNlY3Rpb25cIj5cbiAgICAzNlx0ICAgICAgICA8U2VhcmNoQmFyIFxuICAgIDM3XHQgICAgICAgICAgQHNlYXJjaD1cImhhbmRsZVNlYXJjaFwiIFxuICAgIDM4XHQgICAgICAgICAgdi1tb2RlbD1cInNlYXJjaFRleHRcIiBcbiAgICAzOVx0ICAgICAgICAgIHJlZj1cInNlYXJjaEJhclJlZlwiXG4gICAgNDBcdCAgICAgICAgLz5cbiAgICA0MVx0ICAgICAgPC9kaXY+XG4gICAgNDJcdFxuICAgIDQzXHQgICAgICA8IS0tIOWPs+S+p+eUqOaIt+WMuuWfnyAtLT5cbiAgICA0NFx0ICAgICAgPGRpdiBjbGFzcz1cInJpZ2h0LXNlY3Rpb25cIj5cbiAgICA0NVx0ICAgICAgICA8IS0tIOenu+WKqOerr+aQnOe0ouaMiemSriAtLT5cbiAgICA0Nlx0ICAgICAgICA8ZGl2IHYtaWY9XCJpc01vYmlsZVwiIGNsYXNzPVwibW9iaWxlLXNlYXJjaC1idG5cIiBAY2xpY2s9XCJvcGVuTW9iaWxlU2VhcmNoXCI+XG4gICAgNDdcdCAgICAgICAgICA8ZWwtaWNvbj48U2VhcmNoIC8+PC9lbC1pY29uPlxuICAgIDQ4XHQgICAgICAgIDwvZGl2PlxuICAgIDQ5XHQgICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyLWluZm9cIj5cbiAgICA1MFx0ICAgICAgICAgIDxVc2VyUG9wb3ZlciB2LWlmPVwiaXNMb2dpblwiIC8+XG4gICAgNTFcdCAgICAgICAgICA8ZGl2IHYtZWxzZSBjbGFzcz1cInVzZXItYXZhdGFyXCIgQGNsaWNrPVwic2hvd0xvZ2luRGlhbG9nXCI+XG4gICAgNTJcdCAgICAgICAgICAgIDxlbC1hdmF0YXIgOnNpemU9XCI0MlwiIHNyYz1cImh0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmdcIiAvPlxuICAgIDUzXHQgICAgICAgICAgPC9kaXY+XG4gICAgNTRcdCAgICAgICAgICA8ZGl2IHYtaWY9XCIhaXNNb2JpbGVcIiBjbGFzcz1cInVzZXItaWNvbnNcIj5cbiAgICA1NVx0ICAgICAgICAgICAgPGVsLWljb24+PE1lc3NhZ2UgLz48L2VsLWljb24+XG4gICAgNTZcdCAgICAgICAgICAgIDxlbC1pY29uPjxTdGFyIC8+PC9lbC1pY29uPlxuICAgIDU3XHQgICAgICAgICAgICA8ZWwtaWNvbj48Q29sbGVjdGlvbiAvPjwvZWwtaWNvbj5cbiAgICA1OFx0ICAgICAgICAgICAgPGVsLWljb24+PENsb2NrIC8+PC9lbC1pY29uPlxuICAgIDU5XHQgICAgICAgICAgPC9kaXY+XG4gICAgNjBcdCAgICAgICAgPC9kaXY+XG4gICAgNjFcdCAgICAgICAgPGRpdiBjbGFzcz1cInVwbG9hZC1zZWN0aW9uXCIgdi1pZj1cIiFpc01vYmlsZSAmJiAhaXNVcGxvYWRQYWdlXCI+XG4gICAgNjJcdCAgICAgICAgICA8ZWwtYnV0dG9uIGNsYXNzPVwidXBsb2FkLWJ0blwiIHR5cGU9XCJwcmltYXJ5XCIgQGNsaWNrPVwiZ29Ub1VwbG9hZFwiPlxuICAgIDYzXHQgICAgICAgICAgICA8ZWwtaWNvbiBjbGFzcz1cImNhbWVyYS1pY29uXCI+PFZpZGVvQ2FtZXJhIC8+PC9lbC1pY29uPlxuICAgIDY0XHQgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJ0bi10ZXh0XCI+5oqV56i/PC9zcGFuPlxuICAgIDY1XHQgICAgICAgICAgPC9lbC1idXR0b24+XG4gICAgNjZcdCAgICAgICAgPC9kaXY+XG4gICAgNjdcdCAgICAgIDwvZGl2PlxuICAgIDY4XHQgICAgPC9kaXY+XG4gICAgNjlcdFxuICAgIDcwXHQgICAgPCEtLSDnp7vliqjnq6/oj5zljZXmir3lsYkgLS0+XG4gICAgNzFcdCAgICA8ZWwtZHJhd2VyXG4gICAgNzJcdCAgICAgIHYtbW9kZWw9XCJzaG93TW9iaWxlTWVudVwiXG4gICAgNzNcdCAgICAgIGRpcmVjdGlvbj1cImx0clwiXG4gICAgNzRcdCAgICAgIHNpemU9XCI4MCVcIlxuICAgIDc1XHQgICAgICA6d2l0aC1oZWFkZXI9XCJmYWxzZVwiXG4gICAgNzZcdCAgICAgIGNsYXNzPVwibW9iaWxlLW1lbnUtZHJhd2VyXCJcbiAgICA3N1x0ICAgICAgOnNob3ctY2xvc2U9XCJmYWxzZVwiXG4gICAgNzhcdCAgICA+XG4gICAgNzlcdCAgICAgIDxkaXYgY2xhc3M9XCJtb2JpbGUtbWVudS1jb250ZW50XCI+XG4gICAgODBcdCAgICAgICAgPGRpdiBjbGFzcz1cImRyYXdlci1oZWFkZXJcIj5cbiAgICA4MVx0ICAgICAgICAgIDxlbC1pY29uIGNsYXNzPVwiY2xvc2UtaWNvblwiIEBjbGljaz1cInNob3dNb2JpbGVNZW51ID0gZmFsc2VcIj48Q2xvc2UgLz48L2VsLWljb24+XG4gICAgODJcdCAgICAgICAgPC9kaXY+XG4gICAgODNcdCAgICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS11c2VyLWluZm9cIiB2LWlmPVwiaXNMb2dpblwiPlxuICAgIDg0XHQgICAgICAgICAgPFVzZXJQb3BvdmVyIC8+XG4gICAgODVcdCAgICAgICAgPC9kaXY+XG4gICAgODZcdCAgICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS11c2VyLWluZm9cIiB2LWVsc2UgQGNsaWNrPVwic2hvd0xvZ2luRGlhbG9nXCI+XG4gICAgODdcdCAgICAgICAgICA8ZWwtYXZhdGFyIDpzaXplPVwiNTBcIiBzcmM9XCJodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nXCIgLz5cbiAgICA4OFx0ICAgICAgICAgIDxzcGFuPueCueWHu+eZu+W9lTwvc3Bhbj5cbiAgICA4OVx0ICAgICAgICA8L2Rpdj5cbiAgICA5MFx0ICAgICAgICA8ZGl2IGNsYXNzPVwibW9iaWxlLW5hdi1saW5rc1wiPlxuICAgIDkxXHQgICAgICAgICAgPHJvdXRlci1saW5rIFxuICAgIDkyXHQgICAgICAgICAgICB2LWZvcj1cIihpdGVtLCBpbmRleCkgaW4gbW9iaWxlTmF2SXRlbXNcIiBcbiAgICA5M1x0ICAgICAgICAgICAgOmtleT1cImluZGV4XCJcbiAgICA5NFx0ICAgICAgICAgICAgOnRvPVwiaXRlbS5wYXRoXCIgXG4gICAgOTVcdCAgICAgICAgICAgIGNsYXNzPVwibW9iaWxlLW5hdi1pdGVtXCIgXG4gICAgOTZcdCAgICAgICAgICAgIEBjbGljaz1cInNob3dNb2JpbGVNZW51ID0gZmFsc2VcIlxuICAgIDk3XHQgICAgICAgICAgPlxuICAgIDk4XHQgICAgICAgICAgICA8ZWwtaWNvbj48Y29tcG9uZW50IDppcz1cIml0ZW0uaWNvblwiIC8+PC9lbC1pY29uPlxuICAgIDk5XHQgICAgICAgICAgICA8c3Bhbj57eyBpdGVtLm5hbWUgfX08L3NwYW4+XG4gICAxMDBcdCAgICAgICAgICA8L3JvdXRlci1saW5rPlxuICAgMTAxXHQgICAgICAgIDwvZGl2PlxuICAgMTAyXHQgICAgICA8L2Rpdj5cbiAgIDEwM1x0ICAgIDwvZWwtZHJhd2VyPlxuICAgMTA0XHQgIDwvZGl2PlxuICAgMTA1XHRcbiAgIDEwNlx0ICA8IS0tIOa3u+WKoOeZu+W9leWvueivneahhue7hOS7tiAtLT5cbiAgIDEwN1x0ICA8TG9naW5EaWFsb2cgOnZpc2libGU9XCJsb2dpbkRpYWxvZ1Zpc2libGVcIiBAdXBkYXRlOnZpc2libGU9XCJsb2dpbkRpYWxvZ1Zpc2libGUgPSAkZXZlbnRcIiAvPlxuICAgMTA4XHQ8L3RlbXBsYXRlPlxuICAgMTA5XHRcbiAgIDExMFx0PHNjcmlwdCBzZXR1cD5cbiAgIDExMVx0aW1wb3J0IHsgcmVmLCBvbk1vdW50ZWQsIG9uVW5tb3VudGVkLCBjb21wdXRlZCwgd2F0Y2gsIG5leHRUaWNrIH0gZnJvbSAndnVlJ1xuICAgMTEyXHRpbXBvcnQgU2VhcmNoQmFyIGZyb20gJ0AvY29tcG9uZW50cy9TZWFyY2hCYXIudnVlJ1xuICAgMTEzXHRpbXBvcnQgTG9naW5EaWFsb2cgZnJvbSAnQC9jb21wb25lbnRzL0xvZ2luRGlhbG9nLnZ1ZSdcbiAgIDExNFx0aW1wb3J0IFVzZXJQb3BvdmVyIGZyb20gJ0AvY29tcG9uZW50cy91c2VyL1VzZXJQb3BvdmVyLnZ1ZSdcbiAgIDExNVx0aW1wb3J0IHsgdXNlVG9rZW5TdG9yZSB9IGZyb20gJ0Avc3RvcmVzL3Rva2VuJ1xuICAgMTE2XHRpbXBvcnQgdXNlVXNlckluZm9TdG9yZSAgZnJvbSAnQC9zdG9yZXMvdXNlckluZm8nXG4gICAxMTdcdGltcG9ydCB7IGdldFVzZXJJbmZvU2VydmljZSB9IGZyb20gJ0AvYXBpL3VzZXIvdXNlcidcbiAgIDExOFx0aW1wb3J0IHsgXG4gICAxMTlcdCAgVmlkZW9DYW1lcmEsIFxuICAgMTIwXHQgIE1lc3NhZ2UsIFxuICAgMTIxXHQgIFN0YXIsIFxuICAgMTIyXHQgIENvbGxlY3Rpb24sIFxuICAgMTIzXHQgIENsb2NrLFxuICAgMTI0XHQgIE1vbml0b3IsXG4gICAxMjVcdCAgTWVudSxcbiAgIDEyNlx0ICBIb21lRmlsbGVkLFxuICAgMTI3XHQgIFZpZGVvUGxheSxcbiAgIDEyOFx0ICBTZWFyY2gsXG4gICAxMjlcdCAgQXJyb3dMZWZ0LFxuICAgMTMwXHQgIENsb3NlXG4gICAxMzFcdH0gZnJvbSAnQGVsZW1lbnQtcGx1cy9pY29ucy12dWUnXG4gICAxMzJcdGltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ3Z1ZS1yb3V0ZXInXG4gICAxMzNcdGltcG9ydCBldmVudEJ1cyBmcm9tICdAL3V0aWxzL2V2ZW50QnVzJ1xuICAgMTM0XHRpbXBvcnQge0VsTWVzc2FnZX0gZnJvbSBcImVsZW1lbnQtcGx1c1wiO1xuICAgMTM1XHQvL+i3r+eUsVxuICAgMTM2XHRjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuICAgMTM3XHRjb25zdCBpc1Njcm9sbGVkID0gcmVmKGZhbHNlKVxuICAgMTM4XHRcbiAgIDEzOVx0Ly8g55m75b2V5a+56K+d5qGG5pi+56S654q25oCBXG4gICAxNDBcdGNvbnN0IGxvZ2luRGlhbG9nVmlzaWJsZSA9IHJlZihmYWxzZSlcbiAgIDE0MVx0XG4gICAxNDJcdGNvbnN0IHRva2VuU3RvcmUgPSB1c2VUb2tlblN0b3JlKClcbiAgIDE0M1x0Y29uc3QgdXNlckluZm9TdG9yZSA9IHVzZVVzZXJJbmZvU3RvcmUoKVxuICAgMTQ0XHRjb25zdCBpc0xvZ2luID0gY29tcHV0ZWQoKCkgPT4gISF0b2tlblN0b3JlLnRva2VuKVxuICAgMTQ1XHRcbiAgIDE0Nlx0Ly8g6I635Y+W55So5oi35L+h5oGvXG4gICAxNDdcdGNvbnN0IGdldFVzZXJJbmZvID0gYXN5bmMgKCkgPT4ge1xuICAgMTQ4XHQgIGlmIChpc0xvZ2luLnZhbHVlKSB7XG4gICAxNDlcdCAgICBjb25zdCByZXMgPSBhd2FpdCBnZXRVc2VySW5mb1NlcnZpY2UoKVxuICAgMTUwXHQgICAgdXNlckluZm9TdG9yZS5zZXRJbmZvKHJlcy5kYXRhKVxuICAgMTUxXHQgIH1cbiAgIDE1Mlx0fVxuICAgMTUzXHRcbiAgIDE1NFx0Ly8g55uR5ZCs55m75b2V54q25oCB5Y+Y5YyWXG4gICAxNTVcdHdhdGNoKCgpID0+IGlzTG9naW4udmFsdWUsIChuZXdWYWwpID0+IHtcbiAgIDE1Nlx0ICBpZiAobmV3VmFsKSB7XG4gICAxNTdcdCAgICBnZXRVc2VySW5mbygpXG4gICAxNThcdCAgfVxuICAgMTU5XHR9KVxuICAgMTYwXHRcbiAgIDE2MVx0Ly8g55uR5ZCs5rua5Yqo5LqL5Lu2XG4gICAxNjJcdGNvbnN0IGhhbmRsZVNjcm9sbCA9ICgpID0+IHtcbiAgIDE2M1x0ICBpc1Njcm9sbGVkLnZhbHVlID0gd2luZG93LnNjcm9sbFkgPiAwXG4gICAxNjRcdH1cbiAgIDE2NVx0XG4gICAxNjZcdGNvbnN0IHNob3dNb2JpbGVNZW51ID0gcmVmKGZhbHNlKVxuICAgMTY3XHRjb25zdCBpc01vYmlsZSA9IHJlZih3aW5kb3cuaW5uZXJXaWR0aCA8PSA3NjgpXG4gICAxNjhcdFxuICAgMTY5XHQvLyDnm5HlkKznqpflj6PlpKflsI/lj5jljJZcbiAgIDE3MFx0Y29uc3QgaGFuZGxlUmVzaXplID0gKCkgPT4ge1xuICAgMTcxXHQgIGlzTW9iaWxlLnZhbHVlID0gd2luZG93LmlubmVyV2lkdGggPD0gNzY4XG4gICAxNzJcdH1cbiAgIDE3M1x0XG4gICAxNzRcdG9uTW91bnRlZCgoKSA9PiB7XG4gICAxNzVcdCAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZVNjcm9sbClcbiAgIDE3Nlx0ICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlUmVzaXplKVxuICAgMTc3XHR9KVxuICAgMTc4XHRcbiAgIDE3OVx0b25Vbm1vdW50ZWQoKCkgPT4ge1xuICAgMTgwXHQgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBoYW5kbGVTY3JvbGwpXG4gICAxODFcdCAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZVJlc2l6ZSlcbiAgIDE4Mlx0ICBldmVudEJ1cy5vZmYoJ3Nob3dMb2dpbicpXG4gICAxODNcdH0pXG4gICAxODRcdFxuICAgMTg1XHQvLyDmmL7npLrnmbvlvZXlr7nor53moYZcbiAgIDE4Nlx0Y29uc3Qgc2hvd0xvZ2luRGlhbG9nID0gKCkgPT4ge1xuICAgMTg3XHQgIGxvZ2luRGlhbG9nVmlzaWJsZS52YWx1ZSA9IHRydWVcbiAgIDE4OFx0fVxuICAgMTg5XHRcbiAgIDE5MFx0Ly8g55uR5ZCs5pi+56S655m75b2V5by556qX5LqL5Lu2XG4gICAxOTFcdGV2ZW50QnVzLm9uKCdzaG93TG9naW4nLCAoKSA9PiB7XG4gICAxOTJcdCAgbG9naW5EaWFsb2dWaXNpYmxlLnZhbHVlID0gdHJ1ZVxuICAgMTkzXHR9KVxuICAgMTk0XHRcbiAgIDE5NVx0Y29uc3Qgc2VhcmNoVGV4dCA9IHJlZignJylcbiAgIDE5Nlx0Y29uc3Qgc2VhcmNoQmFyUmVmID0gcmVmKG51bGwpXG4gICAxOTdcdFxuICAgMTk4XHRjb25zdCBoYW5kbGVTZWFyY2ggPSAoKSA9PiB7XG4gICAxOTlcdCAgaWYgKCFzZWFyY2hUZXh0LnZhbHVlLnRyaW0oKSkgcmV0dXJuXG4gICAyMDBcdCAgXG4gICAyMDFcdCAgLy8g6Lez6L2s5Yiw5pCc57Si6aG16Z2iXG4gICAyMDJcdCAgcm91dGVyLnB1c2goe1xuICAgMjAzXHQgICAgcGF0aDogJy9zZWFyY2gnLFxuICAgMjA0XHQgICAgcXVlcnk6IHtcbiAgIDIwNVx0ICAgICAga2V5d29yZDogc2VhcmNoVGV4dC52YWx1ZS50cmltKClcbiAgIDIwNlx0ICAgIH1cbiAgIDIwN1x0ICB9KVxuICAgMjA4XHR9XG4gICAyMDlcdFxuICAgMjEwXHRjb25zdCBzaG93TW9iaWxlU2VhcmNoID0gcmVmKGZhbHNlKVxuICAgMjExXHRjb25zdCBtb2JpbGVTZWFyY2hCYXJSZWYgPSByZWYobnVsbClcbiAgIDIxMlx0XG4gICAyMTNcdGNvbnN0IG9wZW5Nb2JpbGVTZWFyY2ggPSAoKSA9PiB7XG4gICAyMTRcdCAgc2hvd01vYmlsZVNlYXJjaC52YWx1ZSA9IHRydWVcbiAgIDIxNVx0ICBuZXh0VGljaygoKSA9PiB7XG4gICAyMTZcdCAgICBtb2JpbGVTZWFyY2hCYXJSZWYudmFsdWU/LmZvY3VzKClcbiAgIDIxN1x0ICB9KVxuICAgMjE4XHR9XG4gICAyMTlcdFxuICAgMjIwXHRjb25zdCBoYW5kbGVNb2JpbGVTZWFyY2ggPSAoKSA9PiB7XG4gICAyMjFcdCAgaGFuZGxlU2VhcmNoKClcbiAgIDIyMlx0ICBzaG93TW9iaWxlU2VhcmNoLnZhbHVlID0gZmFsc2VcbiAgIDIyM1x0fVxuICAgMjI0XHRcbiAgIDIyNVx0Ly8g56e75Yqo56uv5a+86Iiq6aG56YWN572uXG4gICAyMjZcdGNvbnN0IG1vYmlsZU5hdkl0ZW1zID0gW1xuICAgMjI3XHQgIHsgbmFtZTogJ+mmlumhtScsIHBhdGg6ICcvJywgaWNvbjogJ0hvbWVGaWxsZWQnIH0sXG4gICAyMjhcdCAgeyBuYW1lOiAn55Wq5YmnJywgcGF0aDogJy9hbmltZScsIGljb246ICdWaWRlb1BsYXknIH0sXG4gICAyMjlcdCAgeyBuYW1lOiAn55u05pKtJywgcGF0aDogJy9saXZlJywgaWNvbjogJ1ZpZGVvQ2FtZXJhJyB9LFxuICAgMjMwXHQgIHsgbmFtZTogJ+a2iOaBrycsIHBhdGg6ICcvbWVzc2FnZXMnLCBpY29uOiAnTWVzc2FnZScgfSxcbiAgIDIzMVx0ICB7IG5hbWU6ICfmlLbol48nLCBwYXRoOiAnL2Zhdm9yaXRlcycsIGljb246ICdTdGFyJyB9XG4gICAyMzJcdF1cbiAgIDIzM1x0XG4gICAyMzRcdGNvbnN0IGdvVG9VcGxvYWQgPSAoKSA9PiB7XG4gICAyMzVcdCAgaWYgKCFpc0xvZ2luLnZhbHVlKSB7XG4gICAyMzZcdCAgICAvLyDlpoLmnpzmnKrnmbvlvZXvvIzmmL7npLrnmbvlvZXlr7nor53moYZcbiAgIDIzN1x0ICAgIEVsTWVzc2FnZS5lcnJvcign6K+35YWI55m75b2VJylcbiAgIDIzOFx0ICAgIGxvZ2luRGlhbG9nVmlzaWJsZS52YWx1ZSA9IHRydWVcbiAgIDIzOVx0ICAgIHJldHVyblxuICAgMjQwXHQgIH1cbiAgIDI0MVx0ICAvLyDot7PovazliLDkuKrkurrkuK3lv4PnmoTop4bpopHlj5HluIPpobXpnaJcbiAgIDI0Mlx0ICByb3V0ZXIucHVzaCgnL3VzZXItY2VudGVyJylcbiAgIDI0M1x0ICAvLyDpgJrov4cgZXZlbnRCdXMg5Y+R6YCB5LqL5Lu277yM6YCa55+lIFVzZXJDZW50ZXIg57uE5Lu25omT5byA6KeG6aKR5Y+R5biD5oq95bGJXG4gICAyNDRcdCAgZXZlbnRCdXMuZW1pdCgnb3BlblVwbG9hZERyYXdlcicpXG4gICAyNDVcdH1cbiAgIDI0Nlx0XG4gICAyNDdcdC8vIOWcqCBzY3JpcHQgc2V0dXAg6YOo5YiG5re75Yqg6Lev55Sx55u45YWz55qE6K6h566X5bGe5oCnXG4gICAyNDhcdGNvbnN0IGlzVXBsb2FkUGFnZSA9IGNvbXB1dGVkKCgpID0+IHtcbiAgIDI0OVx0ICByZXR1cm4gcm91dGVyLmN1cnJlbnRSb3V0ZS52YWx1ZS5wYXRoID09PSAnL3VzZXItY2VudGVyJ1xuICAgMjUwXHR9KVxuICAgMjUxXHQ8L3NjcmlwdD5cbiAgIDI1Mlx0XG4gICAyNTNcdDxzdHlsZSBzY29wZWQ+XG4gICAyNTRcdDpyb290IHtcbiAgIDI1NVx0ICAtLXRleHQtY29sb3I6ICMxODE5MWM7XG4gICAyNTZcdH1cbiAgIDI1N1x0XG4gICAyNThcdC5oZWFkZXIge1xuICAgMjU5XHQgIHBvc2l0aW9uOiBmaXhlZDtcbiAgIDI2MFx0ICB0b3A6IDA7XG4gICAyNjFcdCAgbGVmdDogMDtcbiAgIDI2Mlx0ICB3aWR0aDogMTAwJTtcbiAgIDI2M1x0ICB6LWluZGV4OiAxMDAwO1xuICAgMjY0XHQgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgMjY1XHQgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAyNjZcdH1cbiAgIDI2N1x0XG4gICAyNjhcdC8qIOenu+mZpOmhtumDqOa4kOWPmOmBrue9qe+8jOiuqeiDjOaZr+Wbvuadpei0n+i0o+i/memDqOWIhuaViOaenCAqL1xuICAgMjY5XHQvKiAuaGVhZGVyOjpiZWZvcmUge1xuICAgMjcwXHQgIGNvbnRlbnQ6ICcnO1xuICAgMjcxXHQgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgIDI3Mlx0ICB0b3A6IDA7XG4gICAyNzNcdCAgbGVmdDogMDtcbiAgIDI3NFx0ICByaWdodDogMDtcbiAgIDI3NVx0ICBoZWlnaHQ6IDEwMHB4O1xuICAgMjc2XHQgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sXG4gICAyNzdcdCAgICByZ2JhKDAsIDAsIDAsIDAuNCkgMCUsXG4gICAyNzhcdCAgICByZ2JhKDAsIDAsIDAsIDAuMikgNTAlLFxuICAgMjc5XHQgICAgdHJhbnNwYXJlbnQgMTAwJVxuICAgMjgwXHQgICk7XG4gICAyODFcdCAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAyODJcdCAgei1pbmRleDogLTE7XG4gICAyODNcdH0gKi9cbiAgIDI4NFx0XG4gICAyODVcdC5oZWFkZXItc2Nyb2xsZWQge1xuICAgMjg2XHQgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45OCk7XG4gICAyODdcdCAgYm94LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4wNik7XG4gICAyODhcdH1cbiAgIDI4OVx0XG4gICAyOTBcdC5oZWFkZXItY29udGVudCB7XG4gICAyOTFcdCAgbWF4LXdpZHRoOiAxODAwcHg7XG4gICAyOTJcdCAgbWFyZ2luOiAwIGF1dG87XG4gICAyOTNcdCAgcGFkZGluZzogMCA0MHB4O1xuICAgMjk0XHQgIGhlaWdodDogNjRweDtcbiAgIDI5NVx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMjk2XHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAyOTdcdCAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgMjk4XHQgIGNvbG9yOiAjZmZmO1xuICAgMjk5XHQgIHRleHQtc2hhZG93OiAwIDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgMzAwXHQgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAzMDFcdH1cbiAgIDMwMlx0XG4gICAzMDNcdC5oZWFkZXItc2Nyb2xsZWQgLmhlYWRlci1jb250ZW50IHtcbiAgIDMwNFx0ICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvciwgIzE4MTkxYyk7XG4gICAzMDVcdCAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gICAzMDZcdH1cbiAgIDMwN1x0XG4gICAzMDhcdC8qIOW3puS+p+WMuuWfnyAqL1xuICAgMzA5XHQubGVmdC1zZWN0aW9uIHtcbiAgIDMxMFx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMzExXHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAzMTJcdCAgZmxleC1zaHJpbms6IDA7XG4gICAzMTNcdCAgbWluLXdpZHRoOiBmaXQtY29udGVudDtcbiAgIDMxNFx0ICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAzMTVcdCAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgIDMxNlx0fVxuICAgMzE3XHRcbiAgIDMxOFx0Lyog5Lit6Ze05Yy65Z+fICovXG4gICAzMTlcdC5jZW50ZXItc2VjdGlvbiB7XG4gICAzMjBcdCAgZmxleDogMCAxIDUwMHB4O1xuICAgMzIxXHQgIG1pbi13aWR0aDogMzAwcHg7XG4gICAzMjJcdCAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgMzIzXHR9XG4gICAzMjRcdFxuICAgMzI1XHQvKiDlj7PkvqfljLrln58gKi9cbiAgIDMyNlx0LnJpZ2h0LXNlY3Rpb24ge1xuICAgMzI3XHQgIGRpc3BsYXk6IGZsZXg7XG4gICAzMjhcdCAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDMyOVx0ICBnYXA6IDI0cHg7XG4gICAzMzBcdCAgZmxleC1zaHJpbms6IDA7XG4gICAzMzFcdCAgbWluLXdpZHRoOiBmaXQtY29udGVudDtcbiAgIDMzMlx0ICBtYXJnaW4tbGVmdDogYXV0bztcbiAgIDMzM1x0fVxuICAgMzM0XHRcbiAgIDMzNVx0LnVzZXItaW5mbyB7XG4gICAzMzZcdCAgZGlzcGxheTogZmxleDtcbiAgIDMzN1x0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgMzM4XHQgIGdhcDogMjRweDtcbiAgIDMzOVx0ICBoZWlnaHQ6IDY0cHg7XG4gICAzNDBcdCAgZmxleC1zaHJpbms6IDA7XG4gICAzNDFcdH1cbiAgIDM0Mlx0XG4gICAzNDNcdC51c2VyLWF2YXRhciB7XG4gICAzNDRcdCAgY3Vyc29yOiBwb2ludGVyO1xuICAgMzQ1XHQgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAzNDZcdCAgZGlzcGxheTogZmxleDtcbiAgIDM0N1x0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgMzQ4XHQgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgMzQ5XHQgIHBhZGRpbmc6IDRweDtcbiAgIDM1MFx0ICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAzNTFcdCAgd2lkdGg6IDUwcHg7XG4gICAzNTJcdCAgaGVpZ2h0OiA1MHB4O1xuICAgMzUzXHR9XG4gICAzNTRcdFxuICAgMzU1XHQuaGVhZGVyOm5vdCguaGVhZGVyLXNjcm9sbGVkKSAudXNlci1hdmF0YXI6aG92ZXIge1xuICAgMzU2XHQgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQxLCAyNDIsIDI0MywgMC4xKTtcbiAgIDM1N1x0fVxuICAgMzU4XHRcbiAgIDM1OVx0LmhlYWRlci1zY3JvbGxlZCAudXNlci1hdmF0YXI6aG92ZXIge1xuICAgMzYwXHQgIGJhY2tncm91bmQtY29sb3I6ICNmMWYyZjM7XG4gICAzNjFcdH1cbiAgIDM2Mlx0XG4gICAzNjNcdC51c2VyLWljb25zIHtcbiAgIDM2NFx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMzY1XHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAzNjZcdCAgZ2FwOiAyMHB4O1xuICAgMzY3XHQgIGhlaWdodDogMTAwJTtcbiAgIDM2OFx0ICBmbGV4LXNocmluazogMDtcbiAgIDM2OVx0fVxuICAgMzcwXHRcbiAgIDM3MVx0LnVzZXItaWNvbnMgLmVsLWljb24ge1xuICAgMzcyXHQgIGN1cnNvcjogcG9pbnRlcjtcbiAgIDM3M1x0ICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgMzc0XHQgIHBhZGRpbmc6IDRweDtcbiAgIDM3NVx0ICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAzNzZcdCAgZGlzcGxheTogZmxleDtcbiAgIDM3N1x0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgMzc4XHQgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgMzc5XHQgIGNvbG9yOiAjZmZmO1xuICAgMzgwXHQgIHRleHQtc2hhZG93OiAwIDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgMzgxXHR9XG4gICAzODJcdFxuICAgMzgzXHQuaGVhZGVyOm5vdCguaGVhZGVyLXNjcm9sbGVkKSAudXNlci1pY29ucyAuZWwtaWNvbiB7XG4gICAzODRcdCAgY29sb3I6ICNmZmY7XG4gICAzODVcdCAgdGV4dC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAzODZcdH1cbiAgIDM4N1x0XG4gICAzODhcdC51c2VyLWljb25zIC5lbC1pY29uOmhvdmVyIHtcbiAgIDM4OVx0ICBjb2xvcjogIzAwYWVlYztcbiAgIDM5MFx0ICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0MSwgMjQyLCAyNDMsIDAuMSk7XG4gICAzOTFcdH1cbiAgIDM5Mlx0XG4gICAzOTNcdC5oZWFkZXItc2Nyb2xsZWQgLnVzZXItaWNvbnMgLmVsLWljb246aG92ZXIge1xuICAgMzk0XHQgIGJhY2tncm91bmQtY29sb3I6ICNmMWYyZjM7XG4gICAzOTVcdH1cbiAgIDM5Nlx0XG4gICAzOTdcdC51cGxvYWQtc2VjdGlvbiB7XG4gICAzOThcdCAgZGlzcGxheTogZmxleDtcbiAgIDM5OVx0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNDAwXHQgIGhlaWdodDogNjRweDtcbiAgIDQwMVx0fVxuICAgNDAyXHRcbiAgIDQwM1x0LnVwbG9hZC1idG4ge1xuICAgNDA0XHQgIGRpc3BsYXk6IGZsZXg7XG4gICA0MDVcdCAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDQwNlx0ICBnYXA6IDRweDtcbiAgIDQwN1x0ICBoZWlnaHQ6IDMycHg7XG4gICA0MDhcdCAgcGFkZGluZzogMCAxMnB4O1xuICAgNDA5XHQgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgIDQxMFx0ICBmb250LXNpemU6IDE0cHg7XG4gICA0MTFcdCAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgIDQxMlx0ICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1MSwgMTE0LCAxNTMsIDAuOSk7XG4gICA0MTNcdCAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgIDQxNFx0ICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNHB4KTtcbiAgIDQxNVx0ICBjb2xvcjogI2ZmZjtcbiAgIDQxNlx0fVxuICAgNDE3XHRcbiAgIDQxOFx0LmhlYWRlci1zY3JvbGxlZCAudXBsb2FkLWJ0biB7XG4gICA0MTlcdCAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNzI5OTtcbiAgIDQyMFx0fVxuICAgNDIxXHRcbiAgIDQyMlx0Lm1lc3NhZ2UtYmFkZ2UgOmRlZXAoLmVsLWJhZGdlX19jb250ZW50KSB7XG4gICA0MjNcdCAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNzI5OTtcbiAgIDQyNFx0ICBib3JkZXI6IG5vbmU7XG4gICA0MjVcdCAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMzAlLCAtMzAlKTtcbiAgIDQyNlx0fVxuICAgNDI3XHRcbiAgIDQyOFx0LmNhbWVyYS1pY29uIHtcbiAgIDQyOVx0ICBmb250LXNpemU6IDE2cHg7XG4gICA0MzBcdH1cbiAgIDQzMVx0XG4gICA0MzJcdC5idG4tdGV4dCB7XG4gICA0MzNcdCAgbWFyZ2luLWxlZnQ6IDJweDtcbiAgIDQzNFx0fVxuICAgNDM1XHRcbiAgIDQzNlx0LmxvZ28ge1xuICAgNDM3XHQgIGRpc3BsYXk6IGZsZXg7XG4gICA0MzhcdCAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDQzOVx0ICBnYXA6IDZweDtcbiAgIDQ0MFx0ICBjdXJzb3I6IHBvaW50ZXI7XG4gICA0NDFcdH1cbiAgIDQ0Mlx0XG4gICA0NDNcdC50di1pY29uIHtcbiAgIDQ0NFx0ICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmI3Mjk5O1xuICAgNDQ1XHQgIHdpZHRoOiAyOHB4O1xuICAgNDQ2XHQgIGhlaWdodDogMjhweDtcbiAgIDQ0N1x0ICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICA0NDhcdCAgZGlzcGxheTogZmxleDtcbiAgIDQ0OVx0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNDUwXHQgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgNDUxXHR9XG4gICA0NTJcdFxuICAgNDUzXHQudHYtaWNvbiAuZWwtaWNvbiB7XG4gICA0NTRcdCAgZm9udC1zaXplOiAyMHB4O1xuICAgNDU1XHQgIGNvbG9yOiB3aGl0ZTtcbiAgIDQ1Nlx0fVxuICAgNDU3XHRcbiAgIDQ1OFx0LmxvZ28tdGV4dCB7XG4gICA0NTlcdCAgZm9udC1zaXplOiAyMHB4O1xuICAgNDYwXHQgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgNDYxXHQgIGNvbG9yOiAjZmZmO1xuICAgNDYyXHQgIGZvbnQtZmFtaWx5OiBcIk1pY3Jvc29mdCBZYUhlaVwiLCBzYW5zLXNlcmlmO1xuICAgNDYzXHQgIHRleHQtc2hhZG93OiAwIDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgNDY0XHQgIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZTtcbiAgIDQ2NVx0fVxuICAgNDY2XHRcbiAgIDQ2N1x0LmhlYWRlcjpub3QoLmhlYWRlci1zY3JvbGxlZCkgLmxvZ28tdGV4dCB7XG4gICA0NjhcdCAgY29sb3I6ICNmZmY7XG4gICA0NjlcdCAgdGV4dC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICA0NzBcdH1cbiAgIDQ3MVx0XG4gICA0NzJcdC5uYXYtbGlua3Mge1xuICAgNDczXHQgIGRpc3BsYXk6IGZsZXg7XG4gICA0NzRcdCAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDQ3NVx0ICBtYXJnaW4tbGVmdDogNDBweDtcbiAgIDQ3Nlx0ICBnYXA6IDMwcHg7XG4gICA0NzdcdCAgaGVpZ2h0OiA2NHB4O1xuICAgNDc4XHQgIG92ZXJmbG93OiBoaWRkZW47XG4gICA0NzlcdH1cbiAgIDQ4MFx0XG4gICA0ODFcdC5uYXYtaXRlbSB7XG4gICA0ODJcdCAgZm9udC1zaXplOiAxNHB4O1xuICAgNDgzXHQgIGNvbG9yOiAjZmZmO1xuICAgNDg0XHQgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgIDQ4NVx0ICBmb250LXdlaWdodDogNTAwO1xuICAgNDg2XHQgIGhlaWdodDogNjRweDtcbiAgIDQ4N1x0ICBsaW5lLWhlaWdodDogNjRweDtcbiAgIDQ4OFx0ICBwYWRkaW5nOiAwIDEycHg7XG4gICA0ODlcdCAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgNDkwXHQgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICA0OTFcdCAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgIDQ5Mlx0ICB0ZXh0LXNoYWRvdzogMCAxcHggNHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgIDQ5M1x0fVxuICAgNDk0XHRcbiAgIDQ5NVx0LmhlYWRlcjpub3QoLmhlYWRlci1zY3JvbGxlZCkgLm5hdi1pdGVtIHtcbiAgIDQ5Nlx0ICBjb2xvcjogI2ZmZjtcbiAgIDQ5N1x0ICB0ZXh0LXNoYWRvdzogMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgIDQ5OFx0fVxuICAgNDk5XHRcbiAgIDUwMFx0Lm5hdi1pdGVtOmhvdmVyIHtcbiAgIDUwMVx0ICBjb2xvcjogI2ZiNzI5OTtcbiAgIDUwMlx0fVxuICAgNTAzXHRcbiAgIDUwNFx0Lm5hdi1pdGVtLmFjdGl2ZSB7XG4gICA1MDVcdCAgY29sb3I6ICNmYjcyOTk7XG4gICA1MDZcdH1cbiAgIDUwN1x0XG4gICA1MDhcdC5uYXYtaXRlbS5hY3RpdmU6OmFmdGVyIHtcbiAgIDUwOVx0ICBjb250ZW50OiAnJztcbiAgIDUxMFx0ICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICA1MTFcdCAgYm90dG9tOiAwO1xuICAgNTEyXHQgIGxlZnQ6IDA7XG4gICA1MTNcdCAgd2lkdGg6IDEwMCU7XG4gICA1MTRcdCAgaGVpZ2h0OiAycHg7XG4gICA1MTVcdCAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNzI5OTtcbiAgIDUxNlx0ICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7XG4gICA1MTdcdH1cbiAgIDUxOFx0XG4gICA1MTlcdC51c2VyLWF2YXRhcjpob3ZlciB7XG4gICA1MjBcdCAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbiAgIDUyMVx0ICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0MSwgMjQyLCAyNDMsIDAuMSk7XG4gICA1MjJcdH1cbiAgIDUyM1x0XG4gICA1MjRcdDpkZWVwKC5lbC1tZW51LS1ob3Jpem9udGFsID4gLmVsLW1lbnUtaXRlbSkge1xuICAgNTI1XHQgIGhlaWdodDogNjRweDtcbiAgIDUyNlx0ICBsaW5lLWhlaWdodDogNjRweDtcbiAgIDUyN1x0ICBib3JkZXItYm90dG9tOiBub25lO1xuICAgNTI4XHQgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICA1MjlcdH1cbiAgIDUzMFx0XG4gICA1MzFcdDpkZWVwKC5lbC1tZW51LS1ob3Jpem9udGFsID4gLmVsLW1lbnUtaXRlbS5pcy1hY3RpdmUpIHtcbiAgIDUzMlx0ICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2ZiNzI5OTtcbiAgIDUzM1x0ICBjb2xvcjogI2ZiNzI5OTtcbiAgIDUzNFx0ICBmb250LXdlaWdodDogYm9sZDtcbiAgIDUzNVx0ICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7XG4gICA1MzZcdH1cbiAgIDUzN1x0XG4gICA1MzhcdDpkZWVwKC5lbC1idXR0b24tLXByaW1hcnkpIHtcbiAgIDUzOVx0ICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmI3Mjk5O1xuICAgNTQwXHQgIGJvcmRlci1jb2xvcjogI2ZiNzI5OTtcbiAgIDU0MVx0ICBjb2xvcjogI2ZmZjtcbiAgIDU0Mlx0fVxuICAgNTQzXHRcbiAgIDU0NFx0OmRlZXAoLmVsLWJ1dHRvbi0tcHJpbWFyeTpob3Zlcikge1xuICAgNTQ1XHQgIGJhY2tncm91bmQtY29sb3I6ICNmYzhiYWI7XG4gICA1NDZcdCAgYm9yZGVyLWNvbG9yOiAjZmM4YmFiO1xuICAgNTQ3XHR9XG4gICA1NDhcdFxuICAgNTQ5XHQ6ZGVlcCguZWwtYXZhdGFyKSB7XG4gICA1NTBcdCAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgIDU1MVx0ICBib3gtc2hhZG93OiAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgNTUyXHR9XG4gICA1NTNcdFxuICAgNTU0XHQvKiDmt7vliqDlk43lupTlvI/luIPlsYAgKi9cbiAgIDU1NVx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gICA1NTZcdCAgLmhlYWRlci1jb250ZW50IHtcbiAgIDU1N1x0ICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgIDU1OFx0ICB9XG4gICA1NTlcdFxuICAgNTYwXHQgIC5uYXYtbGlua3Mge1xuICAgNTYxXHQgICAgZ2FwOiAyMHB4O1xuICAgNTYyXHQgIH1cbiAgIDU2M1x0XG4gICA1NjRcdCAgLyog5Zyo6L6D56qE5bGP5bmV5LiL6ZqQ6JeP6YOo5YiG5a+86Iiq6aG5ICovXG4gICA1NjVcdCAgLm5hdi1saW5rcyAubmF2LWl0ZW06bnRoLWxhc3QtY2hpbGQobiszKSB7XG4gICA1NjZcdCAgICBkaXNwbGF5OiBub25lO1xuICAgNTY3XHQgIH1cbiAgIDU2OFx0fVxuICAgNTY5XHRcbiAgIDU3MFx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcbiAgIDU3MVx0ICAubG9nby10ZXh0IHtcbiAgIDU3Mlx0ICAgIGRpc3BsYXk6IG5vbmU7IC8qIOmakOiXj2xvZ2/mloflrZcgKi9cbiAgIDU3M1x0ICB9XG4gICA1NzRcdFxuICAgNTc1XHQgIC5jZW50ZXItc2VjdGlvbiB7XG4gICA1NzZcdCAgICBtYXJnaW46IDAgMTZweDtcbiAgIDU3N1x0ICAgIG1pbi13aWR0aDogMjAwcHg7IC8qIOWHj+Wwj+acgOWwj+WuveW6piAqL1xuICAgNTc4XHQgIH1cbiAgIDU3OVx0XG4gICA1ODBcdCAgLnVzZXItaWNvbnMge1xuICAgNTgxXHQgICAgZ2FwOiAxNnB4OyAvKiDlh4/lsI/lm77moIfpl7Tot50gKi9cbiAgIDU4Mlx0ICB9XG4gICA1ODNcdH1cbiAgIDU4NFx0XG4gICA1ODVcdEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICA1ODZcdCAgLnVzZXItaWNvbnMgLmVsLWljb246bnRoLWxhc3QtY2hpbGQoLW4rMikge1xuICAgNTg3XHQgICAgZGlzcGxheTogbm9uZTsgLyog6ZqQ6JeP5pyA5ZCO5Lik5Liq5Zu+5qCHICovXG4gICA1ODhcdCAgfVxuICAgNTg5XHRcbiAgIDU5MFx0ICAubW9iaWxlLXNlYXJjaC1idG4ge1xuICAgNTkxXHQgICAgZGlzcGxheTogZmxleDtcbiAgIDU5Mlx0ICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICA1OTNcdCAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgIDU5NFx0ICAgIHdpZHRoOiA0MHB4O1xuICAgNTk1XHQgICAgaGVpZ2h0OiA0MHB4O1xuICAgNTk2XHQgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICA1OTdcdCAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICA1OThcdCAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvciwgIzE4MTkxYyk7XG4gICA1OTlcdCAgfVxuICAgNjAwXHRcbiAgIDYwMVx0ICAubW9iaWxlLXNlYXJjaCB7XG4gICA2MDJcdCAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICA2MDNcdCAgICB0b3A6IDA7XG4gICA2MDRcdCAgICBsZWZ0OiAwO1xuICAgNjA1XHQgICAgcmlnaHQ6IDA7XG4gICA2MDZcdCAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgNjA3XHQgICAgcGFkZGluZzogOHB4IDE2cHg7XG4gICA2MDhcdCAgICB6LWluZGV4OiAxMDAyO1xuICAgNjA5XHQgICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgIDYxMFx0ICB9XG4gICA2MTFcdFxuICAgNjEyXHQgIC5tb2JpbGUtc2VhcmNoLWhlYWRlciB7XG4gICA2MTNcdCAgICBkaXNwbGF5OiBmbGV4O1xuICAgNjE0XHQgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDYxNVx0ICAgIGdhcDogMTJweDtcbiAgIDYxNlx0ICB9XG4gICA2MTdcdFxuICAgNjE4XHQgIC5iYWNrLWljb24ge1xuICAgNjE5XHQgICAgZm9udC1zaXplOiAyNHB4O1xuICAgNjIwXHQgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgNjIxXHQgICAgY29sb3I6ICMxODE5MWM7XG4gICA2MjJcdCAgfVxuICAgNjIzXHR9XG4gICA2MjRcdFxuICAgNjI1XHQvKiDkv67mlLnlr7zoiKrpk77mjqXpopzoibIgKi9cbiAgIDYyNlx0Lm5hdi1saW5rcyBhIHtcbiAgIDYyN1x0ICBjb2xvcjogdmFyKC0taGVhZGVyLXRleHQtY29sb3IsICNmZmYpO1xuICAgNjI4XHQgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgIDYyOVx0ICBwYWRkaW5nOiA4cHggMTZweDtcbiAgIDYzMFx0ICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICA2MzFcdCAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICA2MzJcdH1cbiAgIDYzM1x0XG4gICA2MzRcdC5uYXYtbGlua3MgYTpob3ZlcixcbiAgIDYzNVx0Lm5hdi1saW5rcyBhLmFjdGl2ZSB7XG4gICA2MzZcdCAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taGVhZGVyLWhvdmVyLWJnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMikpO1xuICAgNjM3XHR9XG4gICA2MzhcdFxuICAgNjM5XHQuaGVhZGVyLXNjcm9sbGVkIC5uYXYtbGlua3MgYTpob3ZlcixcbiAgIDY0MFx0LmhlYWRlci1zY3JvbGxlZCAubmF2LWxpbmtzIGEuYWN0aXZlIHtcbiAgIDY0MVx0ICAtLWhlYWRlci1ob3Zlci1iZzogcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgIDY0Mlx0fVxuICAgNjQzXHRcbiAgIDY0NFx0Lyog5pCc57Si5qGG5qC35byP6YCC6YWNICovXG4gICA2NDVcdC5oZWFkZXItc2Nyb2xsZWQgOmRlZXAoLnNlYXJjaC1pbnB1dCAuZWwtaW5wdXRfX2lubmVyKSB7XG4gICA2NDZcdCAgYmFja2dyb3VuZDogI2YxZjJmMztcbiAgIDY0N1x0ICBjb2xvcjogIzE4MTkxYztcbiAgIDY0OFx0fVxuICAgNjQ5XHRcbiAgIDY1MFx0LmhlYWRlci1zY3JvbGxlZCA6ZGVlcCguc2VhcmNoLWlucHV0IC5lbC1pbnB1dF9faW5uZXI6OnBsYWNlaG9sZGVyKSB7XG4gICA2NTFcdCAgY29sb3I6ICM5NDk5YTA7XG4gICA2NTJcdH1cbiAgIDY1M1x0XG4gICA2NTRcdC8qIExvZ28g5paH5a2X6aKc6Imy6YCC6YWNICovXG4gICA2NTVcdC5oZWFkZXItc2Nyb2xsZWQgLmxvZ28tdGV4dCB7XG4gICA2NTZcdCAgY29sb3I6ICMxODE5MWM7XG4gICA2NTdcdH1cbiAgIDY1OFx0XG4gICA2NTlcdC8qIOeUqOaIt+WktOWDj+i+ueahhumAgumFjSAqL1xuICAgNjYwXHQuaGVhZGVyLXNjcm9sbGVkIDpkZWVwKC5lbC1hdmF0YXIpIHtcbiAgIDY2MVx0ICBib3JkZXItY29sb3I6ICNmMWYyZjM7XG4gICA2NjJcdH1cbiAgIDY2M1x0XG4gICA2NjRcdC5oZWFkZXItc2Nyb2xsZWQgLm5hdi1pdGVtIHtcbiAgIDY2NVx0ICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvciwgIzE4MTkxYyk7XG4gICA2NjZcdH1cbiAgIDY2N1x0XG4gICA2NjhcdC8qIOa3u+WKoOenu+WKqOerr+agt+W8jyAqL1xuICAgNjY5XHQubW9iaWxlLW1lbnUtYnRuIHtcbiAgIDY3MFx0ICBkaXNwbGF5OiBub25lO1xuICAgNjcxXHQgIGZvbnQtc2l6ZTogMjRweDtcbiAgIDY3Mlx0ICBjdXJzb3I6IHBvaW50ZXI7XG4gICA2NzNcdCAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gICA2NzRcdH1cbiAgIDY3NVx0XG4gICA2NzZcdEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICA2NzdcdCAgLmhlYWRlci1jb250ZW50IHtcbiAgIDY3OFx0ICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgIDY3OVx0ICAgIGRpc3BsYXk6IGZsZXg7XG4gICA2ODBcdCAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNjgxXHQgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgNjgyXHQgIH1cbiAgIDY4M1x0XG4gICA2ODRcdCAgLm1vYmlsZS1zZWFyY2gtYnRuIHtcbiAgIDY4NVx0ICAgIGRpc3BsYXk6IGZsZXg7XG4gICA2ODZcdCAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNjg3XHQgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICA2ODhcdCAgICB3aWR0aDogNDBweDtcbiAgIDY4OVx0ICAgIGhlaWdodDogNDBweDtcbiAgIDY5MFx0ICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgIDY5MVx0ICAgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yLCAjMTgxOTFjKTtcbiAgIDY5Mlx0ICAgIG1hcmdpbi1yaWdodDogOHB4O1xuICAgNjkzXHQgIH1cbiAgIDY5NFx0XG4gICA2OTVcdCAgLmxvZ28tdGV4dCB7XG4gICA2OTZcdCAgICBkaXNwbGF5OiBub25lO1xuICAgNjk3XHQgIH1cbiAgIDY5OFx0XG4gICA2OTlcdCAgLmxlZnQtc2VjdGlvbiB7XG4gICA3MDBcdCAgICBmbGV4OiAwIDAgYXV0bztcbiAgIDcwMVx0ICAgIGRpc3BsYXk6IGZsZXg7XG4gICA3MDJcdCAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNzAzXHQgIH1cbiAgIDcwNFx0XG4gICA3MDVcdCAgLnJpZ2h0LXNlY3Rpb24ge1xuICAgNzA2XHQgICAgZmxleDogMCAwIGF1dG87XG4gICA3MDdcdCAgICBkaXNwbGF5OiBmbGV4O1xuICAgNzA4XHQgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDcwOVx0ICB9XG4gICA3MTBcdH1cbiAgIDcxMVx0XG4gICA3MTJcdC8qIOenu+WKqOerr+iPnOWNleagt+W8jyAqL1xuICAgNzEzXHQubW9iaWxlLW1lbnUtY29udGVudCB7XG4gICA3MTRcdCAgcGFkZGluZzogMDtcbiAgIDcxNVx0ICBoZWlnaHQ6IDEwMCU7XG4gICA3MTZcdCAgZGlzcGxheTogZmxleDtcbiAgIDcxN1x0ICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgNzE4XHR9XG4gICA3MTlcdFxuICAgNzIwXHQuZHJhd2VyLWhlYWRlciB7XG4gICA3MjFcdCAgcGFkZGluZzogMTZweDtcbiAgIDcyMlx0ICBkaXNwbGF5OiBmbGV4O1xuICAgNzIzXHQgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICA3MjRcdCAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmMWYyZjM7XG4gICA3MjVcdH1cbiAgIDcyNlx0XG4gICA3MjdcdC5jbG9zZS1pY29uIHtcbiAgIDcyOFx0ICBmb250LXNpemU6IDI0cHg7XG4gICA3MjlcdCAgY3Vyc29yOiBwb2ludGVyO1xuICAgNzMwXHQgIGNvbG9yOiAjMTgxOTFjO1xuICAgNzMxXHQgIHBhZGRpbmc6IDhweDtcbiAgIDczMlx0ICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICA3MzNcdCAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICA3MzRcdH1cbiAgIDczNVx0XG4gICA3MzZcdC5jbG9zZS1pY29uOmhvdmVyIHtcbiAgIDczN1x0ICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMmYzO1xuICAgNzM4XHR9XG4gICA3MzlcdFxuICAgNzQwXHQubW9iaWxlLXVzZXItaW5mbyB7XG4gICA3NDFcdCAgZGlzcGxheTogZmxleDtcbiAgIDc0Mlx0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNzQzXHQgIGdhcDogMTZweDtcbiAgIDc0NFx0ICBwYWRkaW5nOiAyMHB4O1xuICAgNzQ1XHQgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjFmMmYzO1xuICAgNzQ2XHR9XG4gICA3NDdcdFxuICAgNzQ4XHQubW9iaWxlLW5hdi1saW5rcyB7XG4gICA3NDlcdCAgcGFkZGluZzogMTZweDtcbiAgIDc1MFx0ICBkaXNwbGF5OiBmbGV4O1xuICAgNzUxXHQgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICA3NTJcdCAgZ2FwOiA4cHg7XG4gICA3NTNcdH1cbiAgIDc1NFx0XG4gICA3NTVcdC5tb2JpbGUtbmF2LWl0ZW0ge1xuICAgNzU2XHQgIGRpc3BsYXk6IGZsZXg7XG4gICA3NTdcdCAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDc1OFx0ICBnYXA6IDEycHg7XG4gICA3NTlcdCAgcGFkZGluZzogMTZweDtcbiAgIDc2MFx0ICBjb2xvcjogIzE4MTkxYztcbiAgIDc2MVx0ICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICA3NjJcdCAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgNzYzXHQgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgNzY0XHQgIFxuICAgNzY1XHQgIC5lbC1pY29uIHtcbiAgIDc2Nlx0ICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgIDc2N1x0ICB9XG4gICA3NjhcdCAgXG4gICA3NjlcdCAgJjpob3ZlciB7XG4gICA3NzBcdCAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmN2Y4O1xuICAgNzcxXHQgIH1cbiAgIDc3Mlx0ICBcbiAgIDc3M1x0ICAmLnJvdXRlci1saW5rLWFjdGl2ZSB7XG4gICA3NzRcdCAgICBjb2xvcjogI2ZiNzI5OTtcbiAgIDc3NVx0ICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmYxZjU7XG4gICA3NzZcdCAgICBcbiAgIDc3N1x0ICAgIC5lbC1pY29uIHtcbiAgIDc3OFx0ICAgICAgY29sb3I6ICNmYjcyOTk7XG4gICA3NzlcdCAgICB9XG4gICA3ODBcdCAgfVxuICAgNzgxXHR9XG4gICA3ODJcdFxuICAgNzgzXHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgNzg0XHQgIC5tb2JpbGUtbWVudS1idG4ge1xuICAgNzg1XHQgICAgZGlzcGxheTogYmxvY2s7XG4gICA3ODZcdCAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgIDc4N1x0ICB9XG4gICA3ODhcdCAgXG4gICA3ODlcdCAgOmRlZXAoLmVsLWRyYXdlcikge1xuICAgNzkwXHQgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgIDc5MVx0ICB9XG4gICA3OTJcdH1cbiAgIDc5M1x0PC9zdHlsZT5cblRvdGFsIGxpbmVzIGluIGZpbGU6IDc5M1xuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMUNOalNQQVZNV1FnUTJFOU1uVGg0MXAifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIwYzQzYTAxNy0zMTY2LTQwZGQtOTVjZi0zNDA1MzU3ZTE1MzciLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxOTY2WDZrOExWdjhFbUJkTmh3cjlVSyIsInRvb2xfbmFtZSI6InNhdmUtZmlsZSIsImlucHV0X2pzb24iOiJ7XCJmaWxlX3BhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJmaWxlX2NvbnRlbnRcIjogXCI8dGVtcGxhdGU+XFxuICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLWNlbnRlclxcXCI+XFxuICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtaGVhZGVyXFxcIj5cXG4gICAgICA8aDI+XFx1NmQ4OFxcdTYwNmZcXHU0ZTJkXFx1NWZjMzwvaDI+XFxuICAgIDwvZGl2PlxcbiAgICBcXG4gICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS10YWJzXFxcIj5cXG4gICAgICA8ZWwtdGFicyB2LW1vZGVsPVxcXCJhY3RpdmVUYWJcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLXRhYnMtY29udGVudFxcXCI+XFxuICAgICAgICA8ZWwtdGFiLXBhbmUgbGFiZWw9XFxcIkBcXHU2MjExXFx1NzY4NFxcXCIgbmFtZT1cXFwibWVudGlvbnNcXFwiPlxcbiAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLWxpc3RcXFwiIHYtaWY9XFxcIm1lbnRpb25zLmxlbmd0aCA+IDBcXFwiPlxcbiAgICAgICAgICAgIDxkaXYgdi1mb3I9XFxcIihtZXNzYWdlLCBpbmRleCkgaW4gbWVudGlvbnNcXFwiIDprZXk9XFxcImluZGV4XFxcIiBjbGFzcz1cXFwibWVzc2FnZS1pdGVtXFxcIj5cXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtYXZhdGFyXFxcIj5cXG4gICAgICAgICAgICAgICAgPGVsLWF2YXRhciA6c2l6ZT1cXFwiNTBcXFwiIDpzcmM9XFxcIm1lc3NhZ2UuYXZhdGFyXFxcIj48L2VsLWF2YXRhcj5cXG4gICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1jb250ZW50XFxcIj5cXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1pbmZvXFxcIj5cXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwibWVzc2FnZS11c2VybmFtZVxcXCI+e3sgbWVzc2FnZS51c2VybmFtZSB9fTwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwibWVzc2FnZS10aW1lXFxcIj57eyBtZXNzYWdlLnRpbWUgfX08L3NwYW4+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLXRleHRcXFwiPnt7IG1lc3NhZ2UuY29udGVudCB9fTwvZGl2PlxcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLXNvdXJjZVxcXCIgdi1pZj1cXFwibWVzc2FnZS5zb3VyY2VcXFwiPlxcbiAgICAgICAgICAgICAgICAgIDxlbC1jYXJkIHNoYWRvdz1cXFwiaG92ZXJcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLXNvdXJjZS1jYXJkXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS10aXRsZVxcXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1jb250ZW50XFxcIj57eyBtZXNzYWdlLnNvdXJjZS5jb250ZW50IH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgPC9lbC1jYXJkPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgPGVsLWVtcHR5IHYtZWxzZSBkZXNjcmlwdGlvbj1cXFwiXFx1NjY4MlxcdTY1ZTBAXFx1NjIxMVxcdTc2ODRcXHU2ZDg4XFx1NjA2ZlxcXCI+PC9lbC1lbXB0eT5cXG4gICAgICAgIDwvZWwtdGFiLXBhbmU+XFxuICAgICAgICBcXG4gICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD1cXFwiXFx1NzBiOVxcdThkNWVcXFwiIG5hbWU9XFxcImxpa2VzXFxcIj5cXG4gICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1saXN0XFxcIiB2LWlmPVxcXCJsaWtlcy5sZW5ndGggPiAwXFxcIj5cXG4gICAgICAgICAgICA8ZGl2IHYtZm9yPVxcXCIobWVzc2FnZSwgaW5kZXgpIGluIGxpa2VzXFxcIiA6a2V5PVxcXCJpbmRleFxcXCIgY2xhc3M9XFxcIm1lc3NhZ2UtaXRlbVxcXCI+XFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLWF2YXRhclxcXCI+XFxuICAgICAgICAgICAgICAgIDxlbC1hdmF0YXIgOnNpemU9XFxcIjUwXFxcIiA6c3JjPVxcXCJtZXNzYWdlLmF2YXRhclxcXCI+PC9lbC1hdmF0YXI+XFxuICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtY29udGVudFxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtaW5mb1xcXCI+XFxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcIm1lc3NhZ2UtdXNlcm5hbWVcXFwiPnt7IG1lc3NhZ2UudXNlcm5hbWUgfX08L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcIm1lc3NhZ2UtdGltZVxcXCI+e3sgbWVzc2FnZS50aW1lIH19PC9zcGFuPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS10ZXh0XFxcIj57eyBtZXNzYWdlLmNvbnRlbnQgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2VcXFwiIHYtaWY9XFxcIm1lc3NhZ2Uuc291cmNlXFxcIj5cXG4gICAgICAgICAgICAgICAgICA8ZWwtY2FyZCBzaGFkb3c9XFxcImhvdmVyXFxcIiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2UtY2FyZFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzb3VyY2UtdGl0bGVcXFwiPnt7IG1lc3NhZ2Uuc291cmNlLnRpdGxlIH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzb3VyY2UtY29udGVudFxcXCI+e3sgbWVzc2FnZS5zb3VyY2UuY29udGVudCB9fTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgIDwvZWwtY2FyZD5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgIDxlbC1lbXB0eSB2LWVsc2UgZGVzY3JpcHRpb249XFxcIlxcdTY2ODJcXHU2NWUwXFx1NzBiOVxcdThkNWVcXHU2ZDg4XFx1NjA2ZlxcXCI+PC9lbC1lbXB0eT5cXG4gICAgICAgIDwvZWwtdGFiLXBhbmU+XFxuICAgICAgICBcXG4gICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD1cXFwiXFx1NTZkZVxcdTU5MGRcXFwiIG5hbWU9XFxcInJlcGxpZXNcXFwiPlxcbiAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLWxpc3RcXFwiIHYtaWY9XFxcInJlcGxpZXMubGVuZ3RoID4gMFxcXCI+XFxuICAgICAgICAgICAgPGRpdiB2LWZvcj1cXFwiKG1lc3NhZ2UsIGluZGV4KSBpbiByZXBsaWVzXFxcIiA6a2V5PVxcXCJpbmRleFxcXCIgY2xhc3M9XFxcIm1lc3NhZ2UtaXRlbVxcXCI+XFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLWF2YXRhclxcXCI+XFxuICAgICAgICAgICAgICAgIDxlbC1hdmF0YXIgOnNpemU9XFxcIjUwXFxcIiA6c3JjPVxcXCJtZXNzYWdlLmF2YXRhclxcXCI+PC9lbC1hdmF0YXI+XFxuICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtY29udGVudFxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtaW5mb1xcXCI+XFxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcIm1lc3NhZ2UtdXNlcm5hbWVcXFwiPnt7IG1lc3NhZ2UudXNlcm5hbWUgfX08L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcIm1lc3NhZ2UtdGltZVxcXCI+e3sgbWVzc2FnZS50aW1lIH19PC9zcGFuPlxcbiAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS10ZXh0XFxcIj57eyBtZXNzYWdlLmNvbnRlbnQgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2VcXFwiIHYtaWY9XFxcIm1lc3NhZ2Uuc291cmNlXFxcIj5cXG4gICAgICAgICAgICAgICAgICA8ZWwtY2FyZCBzaGFkb3c9XFxcImhvdmVyXFxcIiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2UtY2FyZFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzb3VyY2UtdGl0bGVcXFwiPnt7IG1lc3NhZ2Uuc291cmNlLnRpdGxlIH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzb3VyY2UtY29udGVudFxcXCI+e3sgbWVzc2FnZS5zb3VyY2UuY29udGVudCB9fTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgIDwvZWwtY2FyZD5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgIDxlbC1lbXB0eSB2LWVsc2UgZGVzY3JpcHRpb249XFxcIlxcdTY2ODJcXHU2NWUwXFx1NTZkZVxcdTU5MGRcXHU2ZDg4XFx1NjA2ZlxcXCI+PC9lbC1lbXB0eT5cXG4gICAgICAgIDwvZWwtdGFiLXBhbmU+XFxuICAgICAgICBcXG4gICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD1cXFwiXFx1N2NmYlxcdTdlZGZcXHU5MDFhXFx1NzdlNVxcXCIgbmFtZT1cXFwic3lzdGVtXFxcIj5cXG4gICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1saXN0XFxcIiB2LWlmPVxcXCJzeXN0ZW1Ob3RpY2VzLmxlbmd0aCA+IDBcXFwiPlxcbiAgICAgICAgICAgIDxkaXYgdi1mb3I9XFxcIihtZXNzYWdlLCBpbmRleCkgaW4gc3lzdGVtTm90aWNlc1xcXCIgOmtleT1cXFwiaW5kZXhcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLWl0ZW0gc3lzdGVtLW1lc3NhZ2VcXFwiPlxcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1hdmF0YXJcXFwiPlxcbiAgICAgICAgICAgICAgICA8ZWwtYXZhdGFyIDpzaXplPVxcXCI1MFxcXCIgOmljb249XFxcIkJlbGxcXFwiPjwvZWwtYXZhdGFyPlxcbiAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLWNvbnRlbnRcXFwiPlxcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLWluZm9cXFwiPlxcbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJtZXNzYWdlLXVzZXJuYW1lXFxcIj5cXHU3Y2ZiXFx1N2VkZlxcdTkwMWFcXHU3N2U1PC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJtZXNzYWdlLXRpbWVcXFwiPnt7IG1lc3NhZ2UudGltZSB9fTwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtdGV4dFxcXCI+e3sgbWVzc2FnZS5jb250ZW50IH19PC9kaXY+XFxuICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgIDxlbC1lbXB0eSB2LWVsc2UgZGVzY3JpcHRpb249XFxcIlxcdTY2ODJcXHU2NWUwXFx1N2NmYlxcdTdlZGZcXHU5MDFhXFx1NzdlNVxcXCI+PC9lbC1lbXB0eT5cXG4gICAgICAgIDwvZWwtdGFiLXBhbmU+XFxuICAgICAgPC9lbC10YWJzPlxcbiAgICA8L2Rpdj5cXG4gIDwvZGl2PlxcbjwvdGVtcGxhdGU+XFxuXFxuPHNjcmlwdCBzZXR1cD5cXG5pbXBvcnQgeyByZWYgfSBmcm9tICd2dWUnXFxuaW1wb3J0IHsgQmVsbCB9IGZyb20gJ0BlbGVtZW50LXBsdXMvaWNvbnMtdnVlJ1xcbmltcG9ydCB7IHVzZVRva2VuU3RvcmUgfSBmcm9tICdAL3N0b3Jlcy90b2tlbidcXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICd2dWUtcm91dGVyJ1xcblxcbmNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpXFxuY29uc3QgdG9rZW5TdG9yZSA9IHVzZVRva2VuU3RvcmUoKVxcbmNvbnN0IGFjdGl2ZVRhYiA9IHJlZignbWVudGlvbnMnKVxcblxcbi8vIFxcdTY4YzBcXHU2N2U1XFx1NzUyOFxcdTYyMzdcXHU2NjJmXFx1NTQyNlxcdTc2N2JcXHU1ZjU1XFxuY29uc3QgaXNMb2dpbiA9IHJlZighIXRva2VuU3RvcmUudG9rZW4pXFxuaWYgKCFpc0xvZ2luLnZhbHVlKSB7XFxuICAvLyBcXHU1OTgyXFx1Njc5Y1xcdTY3MmFcXHU3NjdiXFx1NWY1NVxcdWZmMGNcXHU5MWNkXFx1NWI5YVxcdTU0MTFcXHU1MjMwXFx1OTk5NlxcdTk4NzVcXG4gIHJvdXRlci5wdXNoKCcvJylcXG59XFxuXFxuLy8gXFx1NmEyMVxcdTYyZGZcXHU2NTcwXFx1NjM2ZSAtIFxcdTViOWVcXHU5NjQ1XFx1OTg3OVxcdTc2ZWVcXHU0ZTJkXFx1NWU5NFxcdThiZTVcXHU0ZWNlQVBJXFx1ODNiN1xcdTUzZDZcXG5jb25zdCBtZW50aW9ucyA9IHJlZihbXFxuICB7XFxuICAgIGlkOiAxLFxcbiAgICB1c2VybmFtZTogJ1xcdTc1MjhcXHU2MjM3QScsXFxuICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxcbiAgICB0aW1lOiAnMlxcdTVjMGZcXHU2NWY2XFx1NTI0ZCcsXFxuICAgIGNvbnRlbnQ6ICdAXFx1NGY2MCBcXHU4ZmQ5XFx1NGUyYVxcdTg5YzZcXHU5ODkxXFx1NzcxZlxcdTRlMGRcXHU5NTE5XFx1ZmYwMScsXFxuICAgIHNvdXJjZToge1xcbiAgICAgIHRpdGxlOiAnXFx1NTk4MlxcdTRmNTVcXHU1YjY2XFx1NGU2MFxcdTUyNGRcXHU3YWVmXFx1NWYwMFxcdTUzZDEnLFxcbiAgICAgIGNvbnRlbnQ6ICdcXHU1MjRkXFx1N2FlZlxcdTVmMDBcXHU1M2QxXFx1NjYyZlxcdTRlMDBcXHU0ZTJhXFx1NGUwZFxcdTY1YWRcXHU1YjY2XFx1NGU2MFxcdTc2ODRcXHU4ZmM3XFx1N2EwYi4uLidcXG4gICAgfVxcbiAgfSxcXG4gIHtcXG4gICAgaWQ6IDIsXFxuICAgIHVzZXJuYW1lOiAnXFx1NzUyOFxcdTYyMzdCJyxcXG4gICAgYXZhdGFyOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsXFxuICAgIHRpbWU6ICdcXHU2NjI4XFx1NTkyOScsXFxuICAgIGNvbnRlbnQ6ICdAXFx1NGY2MCBcXHU4MGZkXFx1NTIwNlxcdTRlYWJcXHU0ZTAwXFx1NGUwYlxcdTViNjZcXHU0ZTYwXFx1OGQ0NFxcdTY1OTlcXHU1NDE3XFx1ZmYxZicsXFxuICAgIHNvdXJjZToge1xcbiAgICAgIHRpdGxlOiAnVnVlLmpzXFx1NWI5ZVxcdTYyMThcXHU2NTU5XFx1N2EwYicsXFxuICAgICAgY29udGVudDogJ1Z1ZS5qc1xcdTY2MmZcXHU0ZTAwXFx1NGUyYVxcdTZkNDFcXHU4ODRjXFx1NzY4NFxcdTUyNGRcXHU3YWVmXFx1Njg0NlxcdTY3YjYuLi4nXFxuICAgIH1cXG4gIH1cXG5dKVxcblxcbmNvbnN0IGxpa2VzID0gcmVmKFtcXG4gIHtcXG4gICAgaWQ6IDEsXFxuICAgIHVzZXJuYW1lOiAnXFx1NzUyOFxcdTYyMzdDJyxcXG4gICAgYXZhdGFyOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsXFxuICAgIHRpbWU6ICczXFx1NWMwZlxcdTY1ZjZcXHU1MjRkJyxcXG4gICAgY29udGVudDogJ1xcdThkNWVcXHU0ZTg2XFx1NGY2MFxcdTc2ODRcXHU4OWM2XFx1OTg5MScsXFxuICAgIHNvdXJjZToge1xcbiAgICAgIHRpdGxlOiAnSmF2YVNjcmlwdFxcdTU3ZmFcXHU3ODQwXFx1NjU1OVxcdTdhMGInLFxcbiAgICAgIGNvbnRlbnQ6ICdKYXZhU2NyaXB0XFx1NjYyZlxcdTdmNTFcXHU5ODc1XFx1NWYwMFxcdTUzZDFcXHU3Njg0XFx1NTdmYVxcdTc4NDAuLi4nXFxuICAgIH1cXG4gIH1cXG5dKVxcblxcbmNvbnN0IHJlcGxpZXMgPSByZWYoW1xcbiAge1xcbiAgICBpZDogMSxcXG4gICAgdXNlcm5hbWU6ICdcXHU3NTI4XFx1NjIzN0QnLFxcbiAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcXG4gICAgdGltZTogJzFcXHU1OTI5XFx1NTI0ZCcsXFxuICAgIGNvbnRlbnQ6ICdcXHU4ZmQ5XFx1NGUyYVxcdTY1NTlcXHU3YTBiXFx1OTc1ZVxcdTVlMzhcXHU2NzA5XFx1NWUyZVxcdTUyYTlcXHVmZjBjXFx1OGMyMlxcdThjMjJcXHU1MjA2XFx1NGVhYlxcdWZmMDEnLFxcbiAgICBzb3VyY2U6IHtcXG4gICAgICB0aXRsZTogJ0NTU1xcdTVlMDNcXHU1YzQwXFx1NjI4MFxcdTVkZTcnLFxcbiAgICAgIGNvbnRlbnQ6ICdDU1NcXHU1ZTAzXFx1NWM0MFxcdTY2MmZcXHU1MjRkXFx1N2FlZlxcdTVmMDBcXHU1M2QxXFx1NzY4NFxcdTkxY2RcXHU4OTgxXFx1OTBlOFxcdTUyMDYuLi4nXFxuICAgIH1cXG4gIH0sXFxuICB7XFxuICAgIGlkOiAyLFxcbiAgICB1c2VybmFtZTogJ1xcdTc1MjhcXHU2MjM3RScsXFxuICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxcbiAgICB0aW1lOiAnMlxcdTU5MjlcXHU1MjRkJyxcXG4gICAgY29udGVudDogJ1xcdTYyMTFcXHU2MzA5XFx1NzE2N1xcdTY1NTlcXHU3YTBiXFx1NTA1YVxcdTRlODZcXHVmZjBjXFx1NGY0NlxcdTkwNDdcXHU1MjMwXFx1NGU4NlxcdTRlMDBcXHU0ZTliXFx1OTVlZVxcdTk4OThcXHVmZjBjXFx1ODBmZFxcdTVlMmVcXHU2MjExXFx1NzcwYlxcdTc3MGJcXHU1NDE3XFx1ZmYxZicsXFxuICAgIHNvdXJjZToge1xcbiAgICAgIHRpdGxlOiAnVnVlXFx1N2VjNFxcdTRlZjZcXHU5MDFhXFx1NGZlMScsXFxuICAgICAgY29udGVudDogJ1Z1ZVxcdTdlYzRcXHU0ZWY2XFx1NGU0YlxcdTk1ZjRcXHU3Njg0XFx1OTAxYVxcdTRmZTFcXHU2NWI5XFx1NWYwZlxcdTY3MDlcXHU1OTFhXFx1NzljZC4uLidcXG4gICAgfVxcbiAgfVxcbl0pXFxuXFxuY29uc3Qgc3lzdGVtTm90aWNlcyA9IHJlZihbXFxuICB7XFxuICAgIGlkOiAxLFxcbiAgICB0aW1lOiAnMjAyMy0wNC0xNScsXFxuICAgIGNvbnRlbnQ6ICdcXHU2MGE4XFx1NzY4NFxcdThkMjZcXHU1M2Y3XFx1NWRmMlxcdTViOGNcXHU2MjEwXFx1NWI5ZVxcdTU0MGRcXHU4YmE0XFx1OGJjMVxcdWZmMGNcXHU2MTFmXFx1OGMyMlxcdTYwYThcXHU3Njg0XFx1OTE0ZFxcdTU0MDhcXHUzMDAyJ1xcbiAgfSxcXG4gIHtcXG4gICAgaWQ6IDIsXFxuICAgIHRpbWU6ICcyMDIzLTA0LTEwJyxcXG4gICAgY29udGVudDogJ1xcdTdjZmJcXHU3ZWRmXFx1NWMwNlxcdTRlOGU0XFx1NjcwODIwXFx1NjVlNVxcdThmZGJcXHU4ODRjXFx1N2VmNFxcdTYyYTRcXHU1MzQ3XFx1N2VhN1xcdWZmMGNcXHU1YzRhXFx1NjVmNlxcdTUzZWZcXHU4MGZkXFx1NGYxYVxcdTVmNzFcXHU1NGNkXFx1OTBlOFxcdTUyMDZcXHU1MjlmXFx1ODBmZFxcdTc2ODRcXHU0ZjdmXFx1NzUyOFxcdTMwMDInXFxuICB9XFxuXSlcXG48L3NjcmlwdD5cXG5cXG48c3R5bGUgc2NvcGVkPlxcbi5tZXNzYWdlLWNlbnRlciB7XFxuICBtYXgtd2lkdGg6IDEyMDBweDtcXG4gIG1hcmdpbjogODBweCBhdXRvIDQwcHg7XFxuICBwYWRkaW5nOiAwIDIwcHg7XFxufVxcblxcbi5tZXNzYWdlLWhlYWRlciB7XFxuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xcbn1cXG5cXG4ubWVzc2FnZS1oZWFkZXIgaDIge1xcbiAgZm9udC1zaXplOiAyNHB4O1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBjb2xvcjogIzE4MTkxYztcXG59XFxuXFxuLm1lc3NhZ2UtdGFicyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgYm94LXNoYWRvdzogMCAycHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuXFxuLm1lc3NhZ2UtdGFicy1jb250ZW50IHtcXG4gIHBhZGRpbmc6IDAgMjBweDtcXG59XFxuXFxuLm1lc3NhZ2UtbGlzdCB7XFxuICBwYWRkaW5nOiAyMHB4IDA7XFxufVxcblxcbi5tZXNzYWdlLWl0ZW0ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHBhZGRpbmc6IDE2cHggMDtcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjFmMmYzO1xcbn1cXG5cXG4ubWVzc2FnZS1pdGVtOmxhc3QtY2hpbGQge1xcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcXG59XFxuXFxuLm1lc3NhZ2UtYXZhdGFyIHtcXG4gIG1hcmdpbi1yaWdodDogMTZweDtcXG4gIGZsZXgtc2hyaW5rOiAwO1xcbn1cXG5cXG4ubWVzc2FnZS1jb250ZW50IHtcXG4gIGZsZXg6IDE7XFxufVxcblxcbi5tZXNzYWdlLWluZm8ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIG1hcmdpbi1ib3R0b206IDhweDtcXG59XFxuXFxuLm1lc3NhZ2UtdXNlcm5hbWUge1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBjb2xvcjogIzE4MTkxYztcXG59XFxuXFxuLm1lc3NhZ2UtdGltZSB7XFxuICBjb2xvcjogIzk0OTlhMDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuLm1lc3NhZ2UtdGV4dCB7XFxuICBtYXJnaW4tYm90dG9tOiAxMnB4O1xcbiAgY29sb3I6ICMxODE5MWM7XFxuICBsaW5lLWhlaWdodDogMS41O1xcbn1cXG5cXG4ubWVzc2FnZS1zb3VyY2Uge1xcbiAgbWFyZ2luLXRvcDogMTJweDtcXG59XFxuXFxuLm1lc3NhZ2Utc291cmNlLWNhcmQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjdmODtcXG4gIGJvcmRlcjogbm9uZTtcXG59XFxuXFxuLnNvdXJjZS10aXRsZSB7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIG1hcmdpbi1ib3R0b206IDhweDtcXG4gIGNvbG9yOiAjMTgxOTFjO1xcbn1cXG5cXG4uc291cmNlLWNvbnRlbnQge1xcbiAgY29sb3I6ICM2MTY2NmQ7XFxuICBmb250LXNpemU6IDE0cHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIC13ZWJraXQtbGluZS1jbGFtcDogMjtcXG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XFxufVxcblxcbi5zeXN0ZW0tbWVzc2FnZSAubWVzc2FnZS11c2VybmFtZSB7XFxuICBjb2xvcjogI2ZiNzI5OTtcXG59XFxuXFxuLyogXFx1NTRjZFxcdTVlOTRcXHU1ZjBmXFx1NjgzN1xcdTVmMGYgKi9cXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xcbiAgLm1lc3NhZ2UtY2VudGVyIHtcXG4gICAgbWFyZ2luLXRvcDogNjBweDtcXG4gICAgcGFkZGluZzogMCAxMnB4O1xcbiAgfVxcbiAgXFxuICAubWVzc2FnZS10YWJzLWNvbnRlbnQge1xcbiAgICBwYWRkaW5nOiAwIDEycHg7XFxuICB9XFxuICBcXG4gIC5tZXNzYWdlLWF2YXRhciB7XFxuICAgIG1hcmdpbi1yaWdodDogMTJweDtcXG4gIH1cXG4gIFxcbiAgLm1lc3NhZ2UtYXZhdGFyIDpkZWVwKC5lbC1hdmF0YXIpIHtcXG4gICAgd2lkdGg6IDQwcHg7XFxuICAgIGhlaWdodDogNDBweDtcXG4gIH1cXG59XFxuPC9zdHlsZT5cIn0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IueOsOWcqOaIkeW3sue7j+S6huino+S6huW9k+WJjeeahOWvvOiIquagj+e7k+aehOWSjOi3r+eUsemFjee9ruOAguaOpeS4i+adpe+8jOaIkeWwhuWIm+W7uuS4gOS4qua2iOaBr+S4reW/g+mhtemdou+8jOW5tuWcqOWvvOiIquagj+S4rea3u+WKoOS/oeaBr+Wbvuagh+mTvuaOpeOAglxuXG4jIyDor6bnu4borqHliJJcblxuMS4g5Yib5bu65raI5oGv5Lit5b+D6aG16Z2i57uE5Lu2IGBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVgXG4yLiDlnKjot6/nlLHphY3nva7kuK3mt7vliqDmtojmga/kuK3lv4Pot6/nlLFcbjMuIOS/ruaUuSBIZWFkZXIudnVlIOS4reeahOS/oeaBr+Wbvuagh++8jOS9v+WFtumTvuaOpeWIsOa2iOaBr+S4reW/g+mhtemdolxuXG7orqnmiJHku6zlvIDlp4vlrp7mlr3vvJpcblxuIyMjIDEuIOWIm+W7uua2iOaBr+S4reW/g+mhtemdoue7hOS7tlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvcm91dGVyL2luZGV4LmpzOlxuICAgICAxXHRpbXBvcnQgeyBjcmVhdGVSb3V0ZXIsIGNyZWF0ZVdlYkhpc3RvcnkgfSBmcm9tICd2dWUtcm91dGVyJ1xuICAgICAyXHRpbXBvcnQgSG9tZSBmcm9tICdAL3ZpZXdzL0hvbWUudnVlJ1xuICAgICAzXHRpbXBvcnQgVXNlckNlbnRlciBmcm9tICdAL2NvbXBvbmVudHMvdXNlci9Vc2VyQ2VudGVyLnZ1ZSdcbiAgICAgNFx0aW1wb3J0IFNlYXJjaFJlc3VsdCBmcm9tICdAL3ZpZXdzL1NlYXJjaFJlc3VsdC52dWUnXG4gICAgIDVcdGltcG9ydCB7IHVzZVRva2VuU3RvcmUgfSBmcm9tICdAL3N0b3Jlcy90b2tlbidcbiAgICAgNlx0XG4gICAgIDdcdGNvbnN0IHJvdXRlcyA9IFtcbiAgICAgOFx0ICB7XG4gICAgIDlcdCAgICBwYXRoOiAnLycsXG4gICAgMTBcdCAgICBuYW1lOiAnSG9tZScsXG4gICAgMTFcdCAgICBjb21wb25lbnQ6IEhvbWVcbiAgICAxMlx0ICB9LFxuICAgIDEzXHQgIHtcbiAgICAxNFx0ICAgIHBhdGg6ICcvc2VhcmNoJyxcbiAgICAxNVx0ICAgIG5hbWU6ICdTZWFyY2hSZXN1bHQnLFxuICAgIDE2XHQgICAgY29tcG9uZW50OiBTZWFyY2hSZXN1bHRcbiAgICAxN1x0ICB9LFxuICAgIDE4XHQgIHtcbiAgICAxOVx0ICAgIHBhdGg6ICcvdXNlci1jZW50ZXInLFxuICAgIDIwXHQgICAgbmFtZTogJ3VzZXJDZW50ZXInLFxuICAgIDIxXHQgICAgY29tcG9uZW50OiBVc2VyQ2VudGVyLFxuICAgIDIyXHQgICAgbWV0YTogeyByZXF1aXJlc0F1dGg6IHRydWUgfVxuICAgIDIzXHQgIH0sXG4gICAgMjRcdCAge1xuICAgIDI1XHQgICAgcGF0aDogJy92aWRlby86aWQnLFxuICAgIDI2XHQgICAgbmFtZTogJ1ZpZGVvRGV0YWlsJyxcbiAgICAyN1x0ICAgIGNvbXBvbmVudDogKCkgPT4gaW1wb3J0KCdAL2NvbXBvbmVudHMvdmlkZW8vVmlkZW9EZXRhaWwudnVlJylcbiAgICAyOFx0ICB9LFxuICAgIDI5XHQgIHtcbiAgICAzMFx0ICAgIHBhdGg6ICcvcmVzZXQtcGFzc3dvcmQnLFxuICAgIDMxXHQgICAgbmFtZTogJ1Jlc2V0UGFzc3dvcmQnLFxuICAgIDMyXHQgICAgY29tcG9uZW50OiAoKSA9PiBpbXBvcnQoJ0AvY29tcG9uZW50cy9SZXNldFBhc3N3b3JkLnZ1ZScpXG4gICAgMzNcdCAgfSxcbiAgICAzNFx0ICB7XG4gICAgMzVcdCAgICBwYXRoOiAnL2NoYXQnLFxuICAgIDM2XHQgICAgbmFtZTogJ0NoYXQnLFxuICAgIDM3XHQgICAgY29tcG9uZW50OiAoKSA9PiBpbXBvcnQoJ0Avdmlld3MvVXNlckNoYXQudnVlJyksXG4gICAgMzhcdCAgICBtZXRhOiB7IHJlcXVpcmVzQXV0aDogdHJ1ZSB9XG4gICAgMzlcdCAgfSxcbiAgICA0MFx0ICB7XG4gICAgNDFcdCAgICBwYXRoOiAnL3VzZXInLFxuICAgIDQyXHQgICAgbmFtZTogJ1VzZXJIb21lJyxcbiAgICA0M1x0ICAgIGNvbXBvbmVudDogKCkgPT4gaW1wb3J0KCdAL3ZpZXdzL1VzZXJIb21lLnZ1ZScpXG4gICAgNDRcdCAgfSxcbiAgICA0NVx0ICB7XG4gICAgNDZcdCAgICBwYXRoOiAnL2Fubm91bmNlbWVudC86aWQnLFxuICAgIDQ3XHQgICAgbmFtZTogJ0Fubm91bmNlbWVudERldGFpbCcsXG4gICAgNDhcdCAgICBjb21wb25lbnQ6ICgpID0+IGltcG9ydCgnQC92aWV3cy9Bbm5vdW5jZW1lbnREZXRhaWwudnVlJylcbiAgICA0OVx0ICB9XG4gICAgNTBcdF1cbiAgICA1MVx0XG4gICAgNTJcdGNvbnN0IHJvdXRlciA9IGNyZWF0ZVJvdXRlcih7XG4gICAgNTNcdCAgaGlzdG9yeTogY3JlYXRlV2ViSGlzdG9yeShpbXBvcnQubWV0YS5lbnYuQkFTRV9VUkwpLFxuICAgIDU0XHQgIHJvdXRlc1xuICAgIDU1XHR9KVxuICAgIDU2XHRcbiAgICA1N1x0Ly8g6Lev55Sx5a6I5Y2rXG4gICAgNThcdHJvdXRlci5iZWZvcmVFYWNoKCh0bywgZnJvbSwgbmV4dCkgPT4ge1xuICAgIDU5XHQgIGNvbnN0IHRva2VuU3RvcmUgPSB1c2VUb2tlblN0b3JlKClcbiAgICA2MFx0ICBpZiAodG8ubWV0YS5yZXF1aXJlc0F1dGggJiYgIXRva2VuU3RvcmUudG9rZW4pIHtcbiAgICA2MVx0ICAgIG5leHQoJy8nKSAvLyDmnKrnmbvlvZXml7bph43lrprlkJHliLDpppbpobVcbiAgICA2Mlx0ICB9IGVsc2Uge1xuICAgIDYzXHQgICAgbmV4dCgpXG4gICAgNjRcdCAgfVxuICAgIDY1XHR9KVxuICAgIDY2XHRcbiAgICA2N1x0ZXhwb3J0IGRlZmF1bHQgcm91dGVyXG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiA2N1xuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMUM0SmdUbkg4RzZhMlJWdmh5ZUQ1ZlEifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IueOsOWcqOaIkeW3sue7j+S6huino+S6huW9k+WJjeeahOWvvOiIquagj+e7k+aehOWSjOi3r+eUsemFjee9ruOAguaOpeS4i+adpe+8jOaIkeWwhuWIm+W7uuS4gOS4qua2iOaBr+S4reW/g+mhtemdou+8jOW5tuWcqOWvvOiIquagj+S4rea3u+WKoOS/oeaBr+Wbvuagh+mTvuaOpeOAglxuXG4jIyDor6bnu4borqHliJJcblxuMS4g5Yib5bu65raI5oGv5Lit5b+D6aG16Z2i57uE5Lu2IGBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVgXG4yLiDlnKjot6/nlLHphY3nva7kuK3mt7vliqDmtojmga/kuK3lv4Pot6/nlLFcbjMuIOS/ruaUuSBIZWFkZXIudnVlIOS4reeahOS/oeaBr+Wbvuagh++8jOS9v+WFtumTvuaOpeWIsOa2iOaBr+S4reW/g+mhtemdolxuXG7orqnmiJHku6zlvIDlp4vlrp7mlr3vvJpcblxuIyMjIDEuIOWIm+W7uua2iOaBr+S4reW/g+mhtemdoue7hOS7tlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjY0NWFmY2ZiLWE4ZmUtNDMxYy05YWJjLTY3ODQ2ZDBmOTNiMSIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDFKUnkyV2VETlhSWFk3Y2NrbmZhTFlDIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvcm91dGVyL2luZGV4LmpzXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBcIjxwYXJhbWV0ZXIgbmFtZT1cXFwib2xkX3N0clxcXCI+aW1wb3J0IHsgY3JlYXRlUm91dGVyLCBjcmVhdGVXZWJIaXN0b3J5IH0gZnJvbSAndnVlLXJvdXRlcidcXG5pbXBvcnQgSG9tZSBmcm9tICdAL3ZpZXdzL0hvbWUudnVlJ1xcbmltcG9ydCBVc2VyQ2VudGVyIGZyb20gJ0AvY29tcG9uZW50cy91c2VyL1VzZXJDZW50ZXIudnVlJ1xcbmltcG9ydCBTZWFyY2hSZXN1bHQgZnJvbSAnQC92aWV3cy9TZWFyY2hSZXN1bHQudnVlJ1xcbmltcG9ydCB7IHVzZVRva2VuU3RvcmUgfSBmcm9tICdAL3N0b3Jlcy90b2tlbidcIiwgXCJuZXdfc3RyXCI6IFwiaW1wb3J0IHsgY3JlYXRlUm91dGVyLCBjcmVhdGVXZWJIaXN0b3J5IH0gZnJvbSAndnVlLXJvdXRlcidcXG5pbXBvcnQgSG9tZSBmcm9tICdAL3ZpZXdzL0hvbWUudnVlJ1xcbmltcG9ydCBVc2VyQ2VudGVyIGZyb20gJ0AvY29tcG9uZW50cy91c2VyL1VzZXJDZW50ZXIudnVlJ1xcbmltcG9ydCBTZWFyY2hSZXN1bHQgZnJvbSAnQC92aWV3cy9TZWFyY2hSZXN1bHQudnVlJ1xcbmltcG9ydCBNZXNzYWdlQ2VudGVyIGZyb20gJ0Avdmlld3MvTWVzc2FnZUNlbnRlci52dWUnXFxuaW1wb3J0IHsgdXNlVG9rZW5TdG9yZSB9IGZyb20gJ0Avc3RvcmVzL3Rva2VuJ1wiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMSwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiA1fSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIyMjIDIuIOabtOaWsOi3r+eUsemFjee9ru+8jOa3u+WKoOa2iOaBr+S4reW/g+i3r+eUsVxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiRmlsZSBzYXZlZCBzdWNjZXNzZnVsbHkuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMTk2Nlg2azhMVnY4RW1CZE5od3I5VUsifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IiMjIyAyLiDmm7TmlrDot6/nlLHphY3nva7vvIzmt7vliqDmtojmga/kuK3lv4Pot6/nlLFcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIzODdkYjk1MC0zNjY4LTQ3ZjgtODliNi1lZDY5YTg2M2JjYWIiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxWUtNaXRuYlMzTVNZR1lFNkg3dUZUTiIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3JvdXRlci9pbmRleC5qc1wiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCJpbXBvcnQgeyBjcmVhdGVSb3V0ZXIsIGNyZWF0ZVdlYkhpc3RvcnkgfSBmcm9tICd2dWUtcm91dGVyJ1xcbmltcG9ydCBIb21lIGZyb20gJ0Avdmlld3MvSG9tZS52dWUnXFxuaW1wb3J0IFVzZXJDZW50ZXIgZnJvbSAnQC9jb21wb25lbnRzL3VzZXIvVXNlckNlbnRlci52dWUnXFxuaW1wb3J0IFNlYXJjaFJlc3VsdCBmcm9tICdAL3ZpZXdzL1NlYXJjaFJlc3VsdC52dWUnXFxuaW1wb3J0IHsgdXNlVG9rZW5TdG9yZSB9IGZyb20gJ0Avc3RvcmVzL3Rva2VuJ1wiLCBcIm5ld19zdHJcIjogXCJpbXBvcnQgeyBjcmVhdGVSb3V0ZXIsIGNyZWF0ZVdlYkhpc3RvcnkgfSBmcm9tICd2dWUtcm91dGVyJ1xcbmltcG9ydCBIb21lIGZyb20gJ0Avdmlld3MvSG9tZS52dWUnXFxuaW1wb3J0IFVzZXJDZW50ZXIgZnJvbSAnQC9jb21wb25lbnRzL3VzZXIvVXNlckNlbnRlci52dWUnXFxuaW1wb3J0IFNlYXJjaFJlc3VsdCBmcm9tICdAL3ZpZXdzL1NlYXJjaFJlc3VsdC52dWUnXFxuaW1wb3J0IE1lc3NhZ2VDZW50ZXIgZnJvbSAnQC92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZSdcXG5pbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiAxLCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDV9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuiuqeaIkemHjeivleS4gOS4i++8mlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSW52YWxpZCBwYXJhbWV0ZXIgYHN0cl9yZXBsYWNlX2VudHJpZXNgIGZvciBgc3RyX3JlcGxhY2VgIGNvbW1hbmQuIEl0IG11c3QgYmUgYW4gYXJyYXkgb2Ygb2JqZWN0cy4iLCJpc19lcnJvciI6dHJ1ZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFKUnkyV2VETlhSWFk3Y2NrbmZhTFlDIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLorqnmiJHph43or5XkuIDkuIvvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJiNTBmMzM1Ny1lN2NmLTRmNGUtYWFiNS01ZjRhOWI1N2U5MjkiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxR1JZb2VRZUhialpXaUsyM042RFZSaiIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3JvdXRlci9pbmRleC5qc1wiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIgIHtcXG4gICAgcGF0aDogJy9hbm5vdW5jZW1lbnQvOmlkJyxcXG4gICAgbmFtZTogJ0Fubm91bmNlbWVudERldGFpbCcsXFxuICAgIGNvbXBvbmVudDogKCkgPT4gaW1wb3J0KCdAL3ZpZXdzL0Fubm91bmNlbWVudERldGFpbC52dWUnKVxcbiAgfVwiLCBcIm5ld19zdHJcIjogXCIgIHtcXG4gICAgcGF0aDogJy9hbm5vdW5jZW1lbnQvOmlkJyxcXG4gICAgbmFtZTogJ0Fubm91bmNlbWVudERldGFpbCcsXFxuICAgIGNvbXBvbmVudDogKCkgPT4gaW1wb3J0KCdAL3ZpZXdzL0Fubm91bmNlbWVudERldGFpbC52dWUnKVxcbiAgfSxcXG4gIHtcXG4gICAgcGF0aDogJy9tZXNzYWdlcycsXFxuICAgIG5hbWU6ICdNZXNzYWdlQ2VudGVyJyxcXG4gICAgY29tcG9uZW50OiBNZXNzYWdlQ2VudGVyLFxcbiAgICBtZXRhOiB7IHJlcXVpcmVzQXV0aDogdHJ1ZSB9XFxuICB9XCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiA0NiwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiA0OX1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi546w5Zyo5re75Yqg5raI5oGv5Lit5b+D55qE6Lev55Sx6YWN572u77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy9yb3V0ZXIvaW5kZXguanMuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICAgMVx0aW1wb3J0IHsgY3JlYXRlUm91dGVyLCBjcmVhdGVXZWJIaXN0b3J5IH0gZnJvbSAndnVlLXJvdXRlcidcbiAgICAgMlx0aW1wb3J0IEhvbWUgZnJvbSAnQC92aWV3cy9Ib21lLnZ1ZSdcbiAgICAgM1x0aW1wb3J0IFVzZXJDZW50ZXIgZnJvbSAnQC9jb21wb25lbnRzL3VzZXIvVXNlckNlbnRlci52dWUnXG4gICAgIDRcdGltcG9ydCBTZWFyY2hSZXN1bHQgZnJvbSAnQC92aWV3cy9TZWFyY2hSZXN1bHQudnVlJ1xuICAgICA1XHRpbXBvcnQgTWVzc2FnZUNlbnRlciBmcm9tICdAL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlJ1xuICAgICA2XHRpbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXG4gICAgIDdcdFxuICAgICA4XHRjb25zdCByb3V0ZXMgPSBbXG4gICAgIDlcdCAge1xuICAgIDEwXHQgICAgcGF0aDogJy8nLFxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxWUtNaXRuYlMzTVNZR1lFNkg3dUZUTiJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi546w5Zyo5re75Yqg5raI5oGv5Lit5b+D55qE6Lev55Sx6YWN572u77yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiY2QzZGNiNWEtMjY5OC00NjhjLWI2MzctMGM1NGU0ZmE5YTM2IiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUNXYkFQQUwxQVpNOVM1QWZnQ2ZHODkiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy9jb21wb25lbnRzL0hlYWRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiICAgICAgICAgIDxkaXYgdi1pZj1cXFwiIWlzTW9iaWxlXFxcIiBjbGFzcz1cXFwidXNlci1pY29uc1xcXCI+XFxuICAgICAgICAgICAgPGVsLWljb24+PE1lc3NhZ2UgLz48L2VsLWljb24+XFxuICAgICAgICAgICAgPGVsLWljb24+PFN0YXIgLz48L2VsLWljb24+XFxuICAgICAgICAgICAgPGVsLWljb24+PENvbGxlY3Rpb24gLz48L2VsLWljb24+XFxuICAgICAgICAgICAgPGVsLWljb24+PENsb2NrIC8+PC9lbC1pY29uPlxcbiAgICAgICAgICA8L2Rpdj5cIiwgXCJuZXdfc3RyXCI6IFwiICAgICAgICAgIDxkaXYgdi1pZj1cXFwiIWlzTW9iaWxlXFxcIiBjbGFzcz1cXFwidXNlci1pY29uc1xcXCI+XFxuICAgICAgICAgICAgPGVsLWljb24gQGNsaWNrPVxcXCJnb1RvTWVzc2FnZXNcXFwiPjxNZXNzYWdlIC8+PC9lbC1pY29uPlxcbiAgICAgICAgICAgIDxlbC1pY29uPjxTdGFyIC8+PC9lbC1pY29uPlxcbiAgICAgICAgICAgIDxlbC1pY29uPjxDb2xsZWN0aW9uIC8+PC9lbC1pY29uPlxcbiAgICAgICAgICAgIDxlbC1pY29uPjxDbG9jayAvPjwvZWwtaWNvbj5cXG4gICAgICAgICAgPC9kaXY+XCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiA1NCwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiA1OH1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIyMjIDMuIOS/ruaUuSBIZWFkZXIudnVlIOS4reeahOS/oeaBr+Wbvuagh++8jOS9v+WFtumTvuaOpeWIsOa2iOaBr+S4reW/g+mhtemdolxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvcm91dGVyL2luZGV4LmpzLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAgNDJcdCAgICBwYXRoOiAnL3VzZXInLFxuICAgIDQzXHQgICAgbmFtZTogJ1VzZXJIb21lJyxcbiAgICA0NFx0ICAgIGNvbXBvbmVudDogKCkgPT4gaW1wb3J0KCdAL3ZpZXdzL1VzZXJIb21lLnZ1ZScpXG4gICAgNDVcdCAgfSxcbiAgICA0Nlx0ICB7XG4gICAgNDdcdCAgICBwYXRoOiAnL2Fubm91bmNlbWVudC86aWQnLFxuICAgIDQ4XHQgICAgbmFtZTogJ0Fubm91bmNlbWVudERldGFpbCcsXG4gICAgNDlcdCAgICBjb21wb25lbnQ6ICgpID0+IGltcG9ydCgnQC92aWV3cy9Bbm5vdW5jZW1lbnREZXRhaWwudnVlJylcbiAgICA1MFx0ICB9LFxuICAgIDUxXHQgIHtcbiAgICA1Mlx0ICAgIHBhdGg6ICcvbWVzc2FnZXMnLFxuICAgIDUzXHQgICAgbmFtZTogJ01lc3NhZ2VDZW50ZXInLFxuICAgIDU0XHQgICAgY29tcG9uZW50OiBNZXNzYWdlQ2VudGVyLFxuICAgIDU1XHQgICAgbWV0YTogeyByZXF1aXJlc0F1dGg6IHRydWUgfVxuICAgIDU2XHQgIH1cbiAgICA1N1x0XVxuICAgIDU4XHRcbiAgICA1OVx0Y29uc3Qgcm91dGVyID0gY3JlYXRlUm91dGVyKHtcbiAgICA2MFx0ICBoaXN0b3J5OiBjcmVhdGVXZWJIaXN0b3J5KGltcG9ydC5tZXRhLmVudi5CQVNFX1VSTCksXG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFHUllvZVFlSGJqWldpSzIzTjZEVlJqIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiIjIyMgMy4g5L+u5pS5IEhlYWRlci52dWUg5Lit55qE5L+h5oGv5Zu+5qCH77yM5L2/5YW26ZO+5o6l5Yiw5raI5oGv5Lit5b+D6aG16Z2iXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMzZkNDJhMTYtNmQ2Zi00MWExLWE5MGQtNjQyZTdlOGE2MTAyIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUZMU3FDa3IyOUEyOW1TTnB2UkcyQnAiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy9jb21wb25lbnRzL0hlYWRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiY29uc3QgZ29Ub1VwbG9hZCA9ICgpID0+IHtcXG4gIGlmICghaXNMb2dpbi52YWx1ZSkge1xcbiAgICAvLyBcXHU1OTgyXFx1Njc5Y1xcdTY3MmFcXHU3NjdiXFx1NWY1NVxcdWZmMGNcXHU2NjNlXFx1NzkzYVxcdTc2N2JcXHU1ZjU1XFx1NWJmOVxcdThiZGRcXHU2ODQ2XFxuICAgIEVsTWVzc2FnZS5lcnJvcignXFx1OGJmN1xcdTUxNDhcXHU3NjdiXFx1NWY1NScpXFxuICAgIGxvZ2luRGlhbG9nVmlzaWJsZS52YWx1ZSA9IHRydWVcXG4gICAgcmV0dXJuXFxuICB9XFxuICAvLyBcXHU4ZGYzXFx1OGY2Y1xcdTUyMzBcXHU0ZTJhXFx1NGViYVxcdTRlMmRcXHU1ZmMzXFx1NzY4NFxcdTg5YzZcXHU5ODkxXFx1NTNkMVxcdTVlMDNcXHU5ODc1XFx1OTc2MlxcbiAgcm91dGVyLnB1c2goJy91c2VyLWNlbnRlcicpXFxuICAvLyBcXHU5MDFhXFx1OGZjNyBldmVudEJ1cyBcXHU1M2QxXFx1OTAwMVxcdTRlOGJcXHU0ZWY2XFx1ZmYwY1xcdTkwMWFcXHU3N2U1IFVzZXJDZW50ZXIgXFx1N2VjNFxcdTRlZjZcXHU2MjUzXFx1NWYwMFxcdTg5YzZcXHU5ODkxXFx1NTNkMVxcdTVlMDNcXHU2MmJkXFx1NWM0OVxcbiAgZXZlbnRCdXMuZW1pdCgnb3BlblVwbG9hZERyYXdlcicpXFxufVwiLCBcIm5ld19zdHJcIjogXCJjb25zdCBnb1RvVXBsb2FkID0gKCkgPT4ge1xcbiAgaWYgKCFpc0xvZ2luLnZhbHVlKSB7XFxuICAgIC8vIFxcdTU5ODJcXHU2NzljXFx1NjcyYVxcdTc2N2JcXHU1ZjU1XFx1ZmYwY1xcdTY2M2VcXHU3OTNhXFx1NzY3YlxcdTVmNTVcXHU1YmY5XFx1OGJkZFxcdTY4NDZcXG4gICAgRWxNZXNzYWdlLmVycm9yKCdcXHU4YmY3XFx1NTE0OFxcdTc2N2JcXHU1ZjU1JylcXG4gICAgbG9naW5EaWFsb2dWaXNpYmxlLnZhbHVlID0gdHJ1ZVxcbiAgICByZXR1cm5cXG4gIH1cXG4gIC8vIFxcdThkZjNcXHU4ZjZjXFx1NTIzMFxcdTRlMmFcXHU0ZWJhXFx1NGUyZFxcdTVmYzNcXHU3Njg0XFx1ODljNlxcdTk4OTFcXHU1M2QxXFx1NWUwM1xcdTk4NzVcXHU5NzYyXFxuICByb3V0ZXIucHVzaCgnL3VzZXItY2VudGVyJylcXG4gIC8vIFxcdTkwMWFcXHU4ZmM3IGV2ZW50QnVzIFxcdTUzZDFcXHU5MDAxXFx1NGU4YlxcdTRlZjZcXHVmZjBjXFx1OTAxYVxcdTc3ZTUgVXNlckNlbnRlciBcXHU3ZWM0XFx1NGVmNlxcdTYyNTNcXHU1ZjAwXFx1ODljNlxcdTk4OTFcXHU1M2QxXFx1NWUwM1xcdTYyYmRcXHU1YzQ5XFxuICBldmVudEJ1cy5lbWl0KCdvcGVuVXBsb2FkRHJhd2VyJylcXG59XFxuXFxuLy8gXFx1OGRmM1xcdThmNmNcXHU1MjMwXFx1NmQ4OFxcdTYwNmZcXHU0ZTJkXFx1NWZjM1xcbmNvbnN0IGdvVG9NZXNzYWdlcyA9ICgpID0+IHtcXG4gIGlmICghaXNMb2dpbi52YWx1ZSkge1xcbiAgICAvLyBcXHU1OTgyXFx1Njc5Y1xcdTY3MmFcXHU3NjdiXFx1NWY1NVxcdWZmMGNcXHU2NjNlXFx1NzkzYVxcdTc2N2JcXHU1ZjU1XFx1NWJmOVxcdThiZGRcXHU2ODQ2XFxuICAgIEVsTWVzc2FnZS5lcnJvcignXFx1OGJmN1xcdTUxNDhcXHU3NjdiXFx1NWY1NScpXFxuICAgIGxvZ2luRGlhbG9nVmlzaWJsZS52YWx1ZSA9IHRydWVcXG4gICAgcmV0dXJuXFxuICB9XFxuICAvLyBcXHU4ZGYzXFx1OGY2Y1xcdTUyMzBcXHU2ZDg4XFx1NjA2ZlxcdTRlMmRcXHU1ZmMzXFx1OTg3NVxcdTk3NjJcXG4gIHJvdXRlci5wdXNoKCcvbWVzc2FnZXMnKVxcbn1cIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDIzNCwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiAyNDV9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IueOsOWcqO+8jOaIkeS7rOmcgOimgeWcqCBIZWFkZXIudnVlIOS4rea3u+WKoCBnb1RvTWVzc2FnZXMg5pa55rOV77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy9jb21wb25lbnRzL0hlYWRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICA1MFx0ICAgICAgICAgIDxVc2VyUG9wb3ZlciB2LWlmPVwiaXNMb2dpblwiIC8+XG4gICAgNTFcdCAgICAgICAgICA8ZGl2IHYtZWxzZSBjbGFzcz1cInVzZXItYXZhdGFyXCIgQGNsaWNrPVwic2hvd0xvZ2luRGlhbG9nXCI+XG4gICAgNTJcdCAgICAgICAgICAgIDxlbC1hdmF0YXIgOnNpemU9XCI0MlwiIHNyYz1cImh0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmdcIiAvPlxuICAgIDUzXHQgICAgICAgICAgPC9kaXY+XG4gICAgNTRcdCAgICAgICAgICA8ZGl2IHYtaWY9XCIhaXNNb2JpbGVcIiBjbGFzcz1cInVzZXItaWNvbnNcIj5cbiAgICA1NVx0ICAgICAgICAgICAgPGVsLWljb24gQGNsaWNrPVwiZ29Ub01lc3NhZ2VzXCI+PE1lc3NhZ2UgLz48L2VsLWljb24+XG4gICAgNTZcdCAgICAgICAgICAgIDxlbC1pY29uPjxTdGFyIC8+PC9lbC1pY29uPlxuICAgIDU3XHQgICAgICAgICAgICA8ZWwtaWNvbj48Q29sbGVjdGlvbiAvPjwvZWwtaWNvbj5cbiAgICA1OFx0ICAgICAgICAgICAgPGVsLWljb24+PENsb2NrIC8+PC9lbC1pY29uPlxuICAgIDU5XHQgICAgICAgICAgPC9kaXY+XG4gICAgNjBcdCAgICAgICAgPC9kaXY+XG4gICAgNjFcdCAgICAgICAgPGRpdiBjbGFzcz1cInVwbG9hZC1zZWN0aW9uXCIgdi1pZj1cIiFpc01vYmlsZSAmJiAhaXNVcGxvYWRQYWdlXCI+XG4gICAgNjJcdCAgICAgICAgICA8ZWwtYnV0dG9uIGNsYXNzPVwidXBsb2FkLWJ0blwiIHR5cGU9XCJwcmltYXJ5XCIgQGNsaWNrPVwiZ29Ub1VwbG9hZFwiPlxuICAgIDYzXHQgICAgICAgICAgICA8ZWwtaWNvbiBjbGFzcz1cImNhbWVyYS1pY29uXCI+PFZpZGVvQ2FtZXJhIC8+PC9lbC1pY29uPlxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxQ1diQVBBTDFBWk05UzVBZmdDZkc4OSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi546w5Zyo77yM5oiR5Lus6ZyA6KaB5ZyoIEhlYWRlci52dWUg5Lit5re75YqgIGdvVG9NZXNzYWdlcyDmlrnms5XvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJiMDg4NGE2Yy1hZjk1LTQ4MjctYmFhZi0yNWRmMDg1MGZjNDgiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxMURjTHVTWmh1alNhMTlHSnlIWWpXMSIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwidmlld1wiLCBcInBhdGhcIjogXCJzcmMvY29tcG9uZW50cy9IZWFkZXIudnVlXCIsIFwidmlld19yYW5nZVwiOiBbMjI2LCAyMzJdfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5pyA5ZCO77yM6K6p5oiR5Lus5Lmf5pu05paw56e75Yqo56uv6I+c5Y2V5Lit55qE5raI5oGv6aG577yM5L2/5YW25q2j56Gu6ZO+5o6l5Yiw5raI5oGv5Lit5b+D6aG16Z2i77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy9jb21wb25lbnRzL0hlYWRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDIzMFx0ICB7IG5hbWU6ICfmtojmga8nLCBwYXRoOiAnL21lc3NhZ2VzJywgaWNvbjogJ01lc3NhZ2UnIH0sXG4gICAyMzFcdCAgeyBuYW1lOiAn5pS26JePJywgcGF0aDogJy9mYXZvcml0ZXMnLCBpY29uOiAnU3RhcicgfVxuICAgMjMyXHRdXG4gICAyMzNcdFxuICAgMjM0XHRjb25zdCBnb1RvVXBsb2FkID0gKCkgPT4ge1xuICAgMjM1XHQgIGlmICghaXNMb2dpbi52YWx1ZSkge1xuICAgMjM2XHQgICAgLy8g5aaC5p6c5pyq55m75b2V77yM5pi+56S655m75b2V5a+56K+d5qGGXG4gICAyMzdcdCAgICBFbE1lc3NhZ2UuZXJyb3IoJ+ivt+WFiOeZu+W9lScpXG4gICAyMzhcdCAgICBsb2dpbkRpYWxvZ1Zpc2libGUudmFsdWUgPSB0cnVlXG4gICAyMzlcdCAgICByZXR1cm5cbiAgIDI0MFx0ICB9XG4gICAyNDFcdCAgLy8g6Lez6L2s5Yiw5Liq5Lq65Lit5b+D55qE6KeG6aKR5Y+R5biD6aG16Z2iXG4gICAyNDJcdCAgcm91dGVyLnB1c2goJy91c2VyLWNlbnRlcicpXG4gICAyNDNcdCAgLy8g6YCa6L+HIGV2ZW50QnVzIOWPkemAgeS6i+S7tu+8jOmAmuefpSBVc2VyQ2VudGVyIOe7hOS7tuaJk+W8gOinhumikeWPkeW4g+aKveWxiVxuICAgMjQ0XHQgIGV2ZW50QnVzLmVtaXQoJ29wZW5VcGxvYWREcmF3ZXInKVxuICAgMjQ1XHR9XG4gICAyNDZcdFxuICAgMjQ3XHQvLyDot7PovazliLDmtojmga/kuK3lv4NcbiAgIDI0OFx0Y29uc3QgZ29Ub01lc3NhZ2VzID0gKCkgPT4ge1xuICAgMjQ5XHQgIGlmICghaXNMb2dpbi52YWx1ZSkge1xuICAgMjUwXHQgICAgLy8g5aaC5p6c5pyq55m75b2V77yM5pi+56S655m75b2V5a+56K+d5qGGXG4gICAyNTFcdCAgICBFbE1lc3NhZ2UuZXJyb3IoJ+ivt+WFiOeZu+W9lScpXG4gICAyNTJcdCAgICBsb2dpbkRpYWxvZ1Zpc2libGUudmFsdWUgPSB0cnVlXG4gICAyNTNcdCAgICByZXR1cm5cbiAgIDI1NFx0ICB9XG4gICAyNTVcdCAgLy8g6Lez6L2s5Yiw5raI5oGv5Lit5b+D6aG16Z2iXG4gICAyNTZcdCAgcm91dGVyLnB1c2goJy9tZXNzYWdlcycpXG4gICAyNTdcdH1cbiAgIDI1OFx0XG4gICAyNTlcdC8vIOWcqCBzY3JpcHQgc2V0dXAg6YOo5YiG5re75Yqg6Lev55Sx55u45YWz55qE6K6h566X5bGe5oCnXG4gICAyNjBcdGNvbnN0IGlzVXBsb2FkUGFnZSA9IGNvbXB1dGVkKCgpID0+IHtcbiAgIDI2MVx0ICByZXR1cm4gcm91dGVyLmN1cnJlbnRSb3V0ZS52YWx1ZS5wYXRoID09PSAnL3VzZXItY2VudGVyJ1xuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxRkxTcUNrcjI5QTI5bVNOcHZSRzJCcCJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5pyA5ZCO77yM6K6p5oiR5Lus5Lmf5pu05paw56e75Yqo56uv6I+c5Y2V5Lit55qE5raI5oGv6aG577yM5L2/5YW25q2j56Gu6ZO+5o6l5Yiw5raI5oGv5Lit5b+D6aG16Z2i77yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMzVmN2UyNWUtNjVkZi00NzNjLWFmOGEtMjcyMTIzMTc2OGJhIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5b6I5aW977yM56e75Yqo56uv6I+c5Y2V5Lit55qE5raI5oGv6aG55bey57uP5q2j56Gu6YWN572u5LqG6Lev5b6E5Li6ICcvbWVzc2FnZXMn77yM5LiN6ZyA6KaB5L+u5pS544CCXG5cbiMjIOaAu+e7k1xuXG7miJHlt7Lnu4/lrozmiJDkuobliJvlu7rmtojmga/kuK3lv4PpobXpnaLnmoTku7vliqHvvIzlhbfkvZPlrp7njrDkuobku6XkuIvlhoXlrrnvvJpcblxuMS4g5Yib5bu65LqG5raI5oGv5Lit5b+D6aG16Z2i57uE5Lu2IGBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVg77yM5YyF5ZCr5Lul5LiL5Yqf6IO977yaXG4gICAtIOS9v+eUqCBFbGVtZW50IFBsdXMg55qE5qCH562+6aG157uE5Lu25bGV56S65LiN5ZCM57G75Z6L55qE5raI5oGvXG4gICAtIOWMheWQqyBA5oiR55qE44CB54K56LWe44CB5Zue5aSN5ZKM57O757uf6YCa55+l5Zub5Liq5YiG57G7XG4gICAtIOa3u+WKoOS6huWTjeW6lOW8j+W4g+WxgO+8jOmAgumFjeenu+WKqOerr+WSjOahjOmdouerr1xuICAgLSDmt7vliqDkuobnmbvlvZXmo4Dmn6XvvIzmnKrnmbvlvZXnlKjmiLfkvJrooqvph43lrprlkJHliLDpppbpobVcblxuMi4g5pu05paw5LqG6Lev55Sx6YWN572uIGBzcmMvcm91dGVyL2luZGV4LmpzYO+8mlxuICAgLSDlr7zlhaXkuoYgTWVzc2FnZUNlbnRlciDnu4Tku7ZcbiAgIC0g5re75Yqg5LqGICcvbWVzc2FnZXMnIOi3r+eUse+8jOW5tuiuvue9ruS6humcgOimgeeZu+W9leeahOadg+mZkFxuXG4zLiDkv67mlLnkuoYgSGVhZGVyLnZ1ZSDkuK3nmoTkv6Hmga/lm77moIfvvJpcbiAgIC0g5Li65qGM6Z2i56uv55qE5raI5oGv5Zu+5qCH5re75Yqg5LqG54K55Ye75LqL5Lu277yM6ZO+5o6l5Yiw5raI5oGv5Lit5b+D6aG16Z2iXG4gICAtIOa3u+WKoOS6hiBnb1RvTWVzc2FnZXMg5pa55rOV77yM5YyF5ZCr55m75b2V5qOA5p+l6YC76L6RXG4gICAtIOenu+WKqOerr+iPnOWNleS4reeahOa2iOaBr+mhueW3sue7j+ato+ehrumFjee9rlxuXG7njrDlnKjvvIznlKjmiLflj6/ku6XpgJrov4fngrnlh7vlr7zoiKrmoI/kuK3nmoTmtojmga/lm77moIfov5vlhaXmtojmga/kuK3lv4PpobXpnaLjgILlpoLmnpznlKjmiLfmnKrnmbvlvZXvvIzns7vnu5/kvJrmj5DnpLrnlKjmiLflhYjnmbvlvZXjgIJcblxu5oKo5Y+v5Lul6YCa6L+H5Lul5LiL5pa55byP5rWL6K+V6L+Z5Liq5Yqf6IO977yaXG4xLiDlkK/liqjpobnnm65cbjIuIOeCueWHu+WvvOiIquagj+S4reeahOa2iOaBr+Wbvuagh1xuMy4g5aaC5p6c5pyq55m75b2V77yM5Lya5o+Q56S655m75b2V77yb5aaC5p6c5bey55m75b2V77yM5Lya6L+b5YWl5raI5oGv5Lit5b+D6aG16Z2iXG5cbuaYr+WQpui/mOmcgOimgeWvuea2iOaBr+S4reW/g+mhtemdoui/m+ihjOWFtuS7luS/ruaUueaIlua3u+WKoOWFtuS7luWKn+iDve+8n1xuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvY29tcG9uZW50cy9IZWFkZXIudnVlOlxuICAgMjI2XHRjb25zdCBtb2JpbGVOYXZJdGVtcyA9IFtcbiAgIDIyN1x0ICB7IG5hbWU6ICfpppbpobUnLCBwYXRoOiAnLycsIGljb246ICdIb21lRmlsbGVkJyB9LFxuICAgMjI4XHQgIHsgbmFtZTogJ+eVquWJpycsIHBhdGg6ICcvYW5pbWUnLCBpY29uOiAnVmlkZW9QbGF5JyB9LFxuICAgMjI5XHQgIHsgbmFtZTogJ+ebtOaSrScsIHBhdGg6ICcvbGl2ZScsIGljb246ICdWaWRlb0NhbWVyYScgfSxcbiAgIDIzMFx0ICB7IG5hbWU6ICfmtojmga8nLCBwYXRoOiAnL21lc3NhZ2VzJywgaWNvbjogJ01lc3NhZ2UnIH0sXG4gICAyMzFcdCAgeyBuYW1lOiAn5pS26JePJywgcGF0aDogJy9mYXZvcml0ZXMnLCBpY29uOiAnU3RhcicgfVxuICAgMjMyXHRdXG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiA4MDVcbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDExRGNMdVNaaHVqU2ExOUdKeUhZalcxIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLlvojlpb3vvIznp7vliqjnq6/oj5zljZXkuK3nmoTmtojmga/pobnlt7Lnu4/mraPnoa7phY3nva7kuobot6/lvoTkuLogJy9tZXNzYWdlcyfvvIzkuI3pnIDopoHkv67mlLnjgIJcblxuIyMg5oC757uTXG5cbuaIkeW3sue7j+WujOaIkOS6huWIm+W7uua2iOaBr+S4reW/g+mhtemdoueahOS7u+WKoe+8jOWFt+S9k+WunueOsOS6huS7peS4i+WGheWuue+8mlxuXG4xLiDliJvlu7rkuobmtojmga/kuK3lv4PpobXpnaLnu4Tku7YgYHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZWDvvIzljIXlkKvku6XkuIvlip/og73vvJpcbiAgIC0g5L2/55SoIEVsZW1lbnQgUGx1cyDnmoTmoIfnrb7pobXnu4Tku7blsZXnpLrkuI3lkIznsbvlnovnmoTmtojmga9cbiAgIC0g5YyF5ZCrIEDmiJHnmoTjgIHngrnotZ7jgIHlm57lpI3lkozns7vnu5/pgJrnn6Xlm5vkuKrliIbnsbtcbiAgIC0g5re75Yqg5LqG5ZON5bqU5byP5biD5bGA77yM6YCC6YWN56e75Yqo56uv5ZKM5qGM6Z2i56uvXG4gICAtIOa3u+WKoOS6hueZu+W9leajgOafpe+8jOacqueZu+W9leeUqOaIt+S8muiiq+mHjeWumuWQkeWIsOmmlumhtVxuXG4yLiDmm7TmlrDkuobot6/nlLHphY3nva4gYHNyYy9yb3V0ZXIvaW5kZXguanNg77yaXG4gICAtIOWvvOWFpeS6hiBNZXNzYWdlQ2VudGVyIOe7hOS7tlxuICAgLSDmt7vliqDkuoYgJy9tZXNzYWdlcycg6Lev55Sx77yM5bm26K6+572u5LqG6ZyA6KaB55m75b2V55qE5p2D6ZmQXG5cbjMuIOS/ruaUueS6hiBIZWFkZXIudnVlIOS4reeahOS/oeaBr+Wbvuagh++8mlxuICAgLSDkuLrmoYzpnaLnq6/nmoTmtojmga/lm77moIfmt7vliqDkuobngrnlh7vkuovku7bvvIzpk77mjqXliLDmtojmga/kuK3lv4PpobXpnaJcbiAgIC0g5re75Yqg5LqGIGdvVG9NZXNzYWdlcyDmlrnms5XvvIzljIXlkKvnmbvlvZXmo4Dmn6XpgLvovpFcbiAgIC0g56e75Yqo56uv6I+c5Y2V5Lit55qE5raI5oGv6aG55bey57uP5q2j56Gu6YWN572uXG5cbueOsOWcqO+8jOeUqOaIt+WPr+S7pemAmui/h+eCueWHu+WvvOiIquagj+S4reeahOa2iOaBr+Wbvuagh+i/m+WFpea2iOaBr+S4reW/g+mhtemdouOAguWmguaenOeUqOaIt+acqueZu+W9le+8jOezu+e7n+S8muaPkOekuueUqOaIt+WFiOeZu+W9leOAglxuXG7mgqjlj6/ku6XpgJrov4fku6XkuIvmlrnlvI/mtYvor5Xov5nkuKrlip/og73vvJpcbjEuIOWQr+WKqOmhueebrlxuMi4g54K55Ye75a+86Iiq5qCP5Lit55qE5raI5oGv5Zu+5qCHXG4zLiDlpoLmnpzmnKrnmbvlvZXvvIzkvJrmj5DnpLrnmbvlvZXvvJvlpoLmnpzlt7LnmbvlvZXvvIzkvJrov5vlhaXmtojmga/kuK3lv4PpobXpnaJcblxu5piv5ZCm6L+Y6ZyA6KaB5a+55raI5oGv5Lit5b+D6aG16Z2i6L+b6KGM5YW25LuW5L+u5pS55oiW5re75Yqg5YW25LuW5Yqf6IO977yfXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InJlcXVlc3RfaWQiOiIxMDBlZWY1Zi00OWNjLTRhY2QtOWMyYS1lOWI2Y2NkMzgxNzciLCJ1dWlkIjoiODQ2NmQ2MTQtNmY5Yy00ZDQ5LThiYmQtNmRjODY0ZjBhNTE1IiwiY2hhdEl0ZW1UeXBlIjoiYWdlbnRpYy1jaGVja3BvaW50LWRlbGltaXRlciIsInN0YXR1cyI6InN1Y2Nlc3MiLCJmcm9tVGltZXN0YW1wIjoxNzQ0ODUzOTg0NTM3LCJ0b1RpbWVzdGFtcCI6MTc0NDg1NDQ2MzMwOSwic2Vlbl9zdGF0ZSI6InNlZW4ifSx7InJlcXVlc3RfaWQiOiI4ZGVkODY2MS1kZDMwLTRlOWItODUyYi04ODliYTkzMzEwYmMiLCJzdGF0dXMiOiJjYW5jZWxsZWQiLCJjaGF0SXRlbVR5cGUiOiJhZ2VudGljLXR1cm4tZGVsaW1pdGVyIn0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjY1OTlhN2M0LWNkNjAtNGU0Yy1iNjYwLTZhYzg1OTAxNjIwZiIsInJlcXVlc3RfbWVzc2FnZSI6Iuiwg+eUqHVzZXJtZXNzYWdlLmpz55qEZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZeaWueazleiOt+WPlueUqOaIt+inhumikeeCuei1nua2iOaBr++8jOW5tuWcqOmhtemdoua4suafk++8jOi/meaYr+WTjeW6lOeahOaVsOaNrumbhuagvOW8j++8mntcclxuICAgIFwiY29kZVwiOiAyMDAsXHJcbiAgICBcIm1lc3NhZ2VcIjogXCLmk43kvZzmiJDlip9cIixcclxuICAgIFwiZGF0YVwiOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBcImlkXCI6IDExMixcclxuICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg2LFxyXG4gICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgXCJ0aXRsZVwiOiBcImRhZGR3YVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3ZpZGVvcy9pbWFnZS8yMDI1LzA0LzA4Lzg1YzE2ODNkLTRkOTYtNDZlNS1iMGRjLTY2N2QyMjM0Y2EyMC5wbmdcIixcclxuICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1N1wiXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIFwiaWRcIjogMTEwLFxyXG4gICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjUwXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJpZFwiOiAxMTgsXHJcbiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MSxcclxuICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcclxuICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTZUMTY6MTM6NDlcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBcImlkXCI6IDExMSxcclxuICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1NFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIFwiaWRcIjogMTE3LFxyXG4gICAgICAgICAgICBcInZpZGVvSWRcIjogOTUsXHJcbiAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE2VDE1OjM5OjM3XCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJpZFwiOiAxMDcsXHJcbiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NCxcclxuICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkYWRhXCIsXHJcbiAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vbG9jYWxob3N0OjgwODAvdmlkZW9zL2ltYWdlLzIwMjUvMDQvMDgvOTM5MmFkMDAtYWRhMi00MGMxLWFhYWQtYjA2YTIyZGZiODNhLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjI5XCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJpZFwiOiAxMDYsXHJcbiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjIyXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJpZFwiOiAxMDgsXHJcbiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NCxcclxuICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjMyXCJcclxuICAgICAgICB9XHJcbiAgICBdXHJcbn0iLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoi6LCD55SodXNlcm1lc3NhZ2UuanPnmoRnZXRVc2VyTWVzc2FnZUxpc3RTZXJ2aWNl5pa55rOV6I635Y+W55So5oi36KeG6aKR54K56LWe5raI5oGv77yM5bm25Zyo6aG16Z2i5riy5p+T77yM6L+Z5piv5ZON5bqU55qE5pWw5o2u6ZuG5qC85byP77yae1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgXCJjb2RlXCI6IDIwMCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgIFwibWVzc2FnZVwiOiBcIuaTjeS9nOaIkOWKn1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgXCJkYXRhXCI6IFtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwiaWRcIjogMTEyLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInZpZGVvSWRcIjogODYsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkZHdhXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vbG9jYWxob3N0OjgwODAvdmlkZW9zL2ltYWdlLzIwMjUvMDQvMDgvODVjMTY4M2QtNGQ5Ni00NmU1LWIwZGMtNjY3ZDIyMzRjYTIwLnBuZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjU3XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJpZFwiOiAxMTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6NTBcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcImlkXCI6IDExOCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNlQxNjoxMzo0OVwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwiaWRcIjogMTExLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInZpZGVvSWRcIjogOTQsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjU0XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJpZFwiOiAxMTcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTZUMTU6Mzk6MzdcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcImlkXCI6IDEwNyxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg0LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkyLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi6JKC5rOVXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidGl0bGVcIjogXCJkYWRhZGFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRlb3MvaW1hZ2UvMjAyNS8wNC8wOC85MzkyYWQwMC1hZGEyLTQwYzEtYWFhZC1iMDZhMjJkZmI4M2EuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6MjlcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcImlkXCI6IDEwNixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg3LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkyLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi6JKC5rOVXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6MjJcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcImlkXCI6IDEwOCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkyLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi6JKC5rOVXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6MzJcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIH1cciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgIF1cciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoifSJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUU5NWdqanZyWVJMbzd2UzhhOWdtUEMiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL2FwaS91c2VyL3VzZXJtZXNzYWdlLmpzXCJ9In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLmiJHlsIbluK7mgqjkv67mlLnmtojmga/kuK3lv4PpobXpnaLvvIzkvb/nlKggYHVzZXJtZXNzYWdlLmpzYCDkuK3nmoQgYGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2VgIOaWueazleiOt+WPlueUqOaIt+inhumikeeCuei1nua2iOaBr+W5tuWcqOmhtemdoua4suafk+OAglxuXG7pppblhYjvvIzorqnmiJHmn6XnnIsgYHNyYy9hcGkvdXNlci91c2VybWVzc2FnZS5qc2Ag5paH5Lu255qE5YaF5a6577yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjowLCJ0ZXh0X25vZGUiOnsiY29udGVudCI6Iuiwg+eUqHVzZXJtZXNzYWdlLmpz55qEZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZeaWueazleiOt+WPlueUqOaIt+inhumikeeCuei1nua2iOaBr++8jOW5tuWcqOmhtemdoua4suafk++8jOi/meaYr+WTjeW6lOeahOaVsOaNrumbhuagvOW8j++8mntcclxuICAgIFwiY29kZVwiOiAyMDAsXHJcbiAgICBcIm1lc3NhZ2VcIjogXCLmk43kvZzmiJDlip9cIixcclxuICAgIFwiZGF0YVwiOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBcImlkXCI6IDExMixcclxuICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg2LFxyXG4gICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgXCJ0aXRsZVwiOiBcImRhZGR3YVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3ZpZGVvcy9pbWFnZS8yMDI1LzA0LzA4Lzg1YzE2ODNkLTRkOTYtNDZlNS1iMGRjLTY2N2QyMjM0Y2EyMC5wbmdcIixcclxuICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1N1wiXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIFwiaWRcIjogMTEwLFxyXG4gICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjUwXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJpZFwiOiAxMTgsXHJcbiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MSxcclxuICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcclxuICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTZUMTY6MTM6NDlcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBcImlkXCI6IDExMSxcclxuICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1NFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIFwiaWRcIjogMTE3LFxyXG4gICAgICAgICAgICBcInZpZGVvSWRcIjogOTUsXHJcbiAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE2VDE1OjM5OjM3XCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJpZFwiOiAxMDcsXHJcbiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NCxcclxuICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkYWRhXCIsXHJcbiAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vbG9jYWxob3N0OjgwODAvdmlkZW9zL2ltYWdlLzIwMjUvMDQvMDgvOTM5MmFkMDAtYWRhMi00MGMxLWFhYWQtYjA2YTIyZGZiODNhLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjI5XCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJpZFwiOiAxMDYsXHJcbiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjIyXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJpZFwiOiAxMDgsXHJcbiAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NCxcclxuICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjMyXCJcclxuICAgICAgICB9XHJcbiAgICBdXHJcbn0ifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IuaIkeWwhuW4ruaCqOS/ruaUuea2iOaBr+S4reW/g+mhtemdou+8jOS9v+eUqCBgdXNlcm1lc3NhZ2UuanNgIOS4reeahCBgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZWAg5pa55rOV6I635Y+W55So5oi36KeG6aKR54K56LWe5raI5oGv5bm25Zyo6aG16Z2i5riy5p+T44CCXG5cbummluWFiO+8jOiuqeaIkeafpeeciyBgc3JjL2FwaS91c2VyL3VzZXJtZXNzYWdlLmpzYCDmlofku7bnmoTlhoXlrrnvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIzZTlmM2RjMS0wNTc3LTQ0NmYtYThhMS1mNTBiNDIwN2E1NmMiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxTmR2MnI1NDdZcDlidVNaTXdSeHhDMiIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIjxzY3JpcHQgc2V0dXA+XFxuaW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJ1xcbmltcG9ydCB7IEJlbGwgfSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcXG5pbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXFxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAndnVlLXJvdXRlcidcXG5cXG5jb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxcbmNvbnN0IHRva2VuU3RvcmUgPSB1c2VUb2tlblN0b3JlKClcXG5jb25zdCBhY3RpdmVUYWIgPSByZWYoJ21lbnRpb25zJylcXG5cXG4vLyBcXHU2OGMwXFx1NjdlNVxcdTc1MjhcXHU2MjM3XFx1NjYyZlxcdTU0MjZcXHU3NjdiXFx1NWY1NVxcbmNvbnN0IGlzTG9naW4gPSByZWYoISF0b2tlblN0b3JlLnRva2VuKVxcbmlmICghaXNMb2dpbi52YWx1ZSkge1xcbiAgLy8gXFx1NTk4MlxcdTY3OWNcXHU2NzJhXFx1NzY3YlxcdTVmNTVcXHVmZjBjXFx1OTFjZFxcdTViOWFcXHU1NDExXFx1NTIzMFxcdTk5OTZcXHU5ODc1XFxuICByb3V0ZXIucHVzaCgnLycpXFxufVxcblxcbi8vIFxcdTZhMjFcXHU2MmRmXFx1NjU3MFxcdTYzNmUgLSBcXHU1YjllXFx1OTY0NVxcdTk4NzlcXHU3NmVlXFx1NGUyZFxcdTVlOTRcXHU4YmU1XFx1NGVjZUFQSVxcdTgzYjdcXHU1M2Q2XFxuY29uc3QgbWVudGlvbnMgPSByZWYoW1xcbiAge1xcbiAgICBpZDogMSxcXG4gICAgdXNlcm5hbWU6ICdcXHU3NTI4XFx1NjIzN0EnLFxcbiAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcXG4gICAgdGltZTogJzJcXHU1YzBmXFx1NjVmNlxcdTUyNGQnLFxcbiAgICBjb250ZW50OiAnQFxcdTRmNjAgXFx1OGZkOVxcdTRlMmFcXHU4OWM2XFx1OTg5MVxcdTc3MWZcXHU0ZTBkXFx1OTUxOVxcdWZmMDEnLFxcbiAgICBzb3VyY2U6IHtcXG4gICAgICB0aXRsZTogJ1xcdTU5ODJcXHU0ZjU1XFx1NWI2NlxcdTRlNjBcXHU1MjRkXFx1N2FlZlxcdTVmMDBcXHU1M2QxJyxcXG4gICAgICBjb250ZW50OiAnXFx1NTI0ZFxcdTdhZWZcXHU1ZjAwXFx1NTNkMVxcdTY2MmZcXHU0ZTAwXFx1NGUyYVxcdTRlMGRcXHU2NWFkXFx1NWI2NlxcdTRlNjBcXHU3Njg0XFx1OGZjN1xcdTdhMGIuLi4nXFxuICAgIH1cXG4gIH0sXFxuICB7XFxuICAgIGlkOiAyLFxcbiAgICB1c2VybmFtZTogJ1xcdTc1MjhcXHU2MjM3QicsXFxuICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxcbiAgICB0aW1lOiAnXFx1NjYyOFxcdTU5MjknLFxcbiAgICBjb250ZW50OiAnQFxcdTRmNjAgXFx1ODBmZFxcdTUyMDZcXHU0ZWFiXFx1NGUwMFxcdTRlMGJcXHU1YjY2XFx1NGU2MFxcdThkNDRcXHU2NTk5XFx1NTQxN1xcdWZmMWYnLFxcbiAgICBzb3VyY2U6IHtcXG4gICAgICB0aXRsZTogJ1Z1ZS5qc1xcdTViOWVcXHU2MjE4XFx1NjU1OVxcdTdhMGInLFxcbiAgICAgIGNvbnRlbnQ6ICdWdWUuanNcXHU2NjJmXFx1NGUwMFxcdTRlMmFcXHU2ZDQxXFx1ODg0Y1xcdTc2ODRcXHU1MjRkXFx1N2FlZlxcdTY4NDZcXHU2N2I2Li4uJ1xcbiAgICB9XFxuICB9XFxuXSlcXG5cXG5jb25zdCBsaWtlcyA9IHJlZihbXFxuICB7XFxuICAgIGlkOiAxLFxcbiAgICB1c2VybmFtZTogJ1xcdTc1MjhcXHU2MjM3QycsXFxuICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxcbiAgICB0aW1lOiAnM1xcdTVjMGZcXHU2NWY2XFx1NTI0ZCcsXFxuICAgIGNvbnRlbnQ6ICdcXHU4ZDVlXFx1NGU4NlxcdTRmNjBcXHU3Njg0XFx1ODljNlxcdTk4OTEnLFxcbiAgICBzb3VyY2U6IHtcXG4gICAgICB0aXRsZTogJ0phdmFTY3JpcHRcXHU1N2ZhXFx1Nzg0MFxcdTY1NTlcXHU3YTBiJyxcXG4gICAgICBjb250ZW50OiAnSmF2YVNjcmlwdFxcdTY2MmZcXHU3ZjUxXFx1OTg3NVxcdTVmMDBcXHU1M2QxXFx1NzY4NFxcdTU3ZmFcXHU3ODQwLi4uJ1xcbiAgICB9XFxuICB9XFxuXSlcXG5cXG5jb25zdCByZXBsaWVzID0gcmVmKFtcXG4gIHtcXG4gICAgaWQ6IDEsXFxuICAgIHVzZXJuYW1lOiAnXFx1NzUyOFxcdTYyMzdEJyxcXG4gICAgYXZhdGFyOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsXFxuICAgIHRpbWU6ICcxXFx1NTkyOVxcdTUyNGQnLFxcbiAgICBjb250ZW50OiAnXFx1OGZkOVxcdTRlMmFcXHU2NTU5XFx1N2EwYlxcdTk3NWVcXHU1ZTM4XFx1NjcwOVxcdTVlMmVcXHU1MmE5XFx1ZmYwY1xcdThjMjJcXHU4YzIyXFx1NTIwNlxcdTRlYWJcXHVmZjAxJyxcXG4gICAgc291cmNlOiB7XFxuICAgICAgdGl0bGU6ICdDU1NcXHU1ZTAzXFx1NWM0MFxcdTYyODBcXHU1ZGU3JyxcXG4gICAgICBjb250ZW50OiAnQ1NTXFx1NWUwM1xcdTVjNDBcXHU2NjJmXFx1NTI0ZFxcdTdhZWZcXHU1ZjAwXFx1NTNkMVxcdTc2ODRcXHU5MWNkXFx1ODk4MVxcdTkwZThcXHU1MjA2Li4uJ1xcbiAgICB9XFxuICB9LFxcbiAge1xcbiAgICBpZDogMixcXG4gICAgdXNlcm5hbWU6ICdcXHU3NTI4XFx1NjIzN0UnLFxcbiAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcXG4gICAgdGltZTogJzJcXHU1OTI5XFx1NTI0ZCcsXFxuICAgIGNvbnRlbnQ6ICdcXHU2MjExXFx1NjMwOVxcdTcxNjdcXHU2NTU5XFx1N2EwYlxcdTUwNWFcXHU0ZTg2XFx1ZmYwY1xcdTRmNDZcXHU5MDQ3XFx1NTIzMFxcdTRlODZcXHU0ZTAwXFx1NGU5YlxcdTk1ZWVcXHU5ODk4XFx1ZmYwY1xcdTgwZmRcXHU1ZTJlXFx1NjIxMVxcdTc3MGJcXHU3NzBiXFx1NTQxN1xcdWZmMWYnLFxcbiAgICBzb3VyY2U6IHtcXG4gICAgICB0aXRsZTogJ1Z1ZVxcdTdlYzRcXHU0ZWY2XFx1OTAxYVxcdTRmZTEnLFxcbiAgICAgIGNvbnRlbnQ6ICdWdWVcXHU3ZWM0XFx1NGVmNlxcdTRlNGJcXHU5NWY0XFx1NzY4NFxcdTkwMWFcXHU0ZmUxXFx1NjViOVxcdTVmMGZcXHU2NzA5XFx1NTkxYVxcdTc5Y2QuLi4nXFxuICAgIH1cXG4gIH1cXG5dKVxcblxcbmNvbnN0IHN5c3RlbU5vdGljZXMgPSByZWYoW1xcbiAge1xcbiAgICBpZDogMSxcXG4gICAgdGltZTogJzIwMjMtMDQtMTUnLFxcbiAgICBjb250ZW50OiAnXFx1NjBhOFxcdTc2ODRcXHU4ZDI2XFx1NTNmN1xcdTVkZjJcXHU1YjhjXFx1NjIxMFxcdTViOWVcXHU1NDBkXFx1OGJhNFxcdThiYzFcXHVmZjBjXFx1NjExZlxcdThjMjJcXHU2MGE4XFx1NzY4NFxcdTkxNGRcXHU1NDA4XFx1MzAwMidcXG4gIH0sXFxuICB7XFxuICAgIGlkOiAyLFxcbiAgICB0aW1lOiAnMjAyMy0wNC0xMCcsXFxuICAgIGNvbnRlbnQ6ICdcXHU3Y2ZiXFx1N2VkZlxcdTVjMDZcXHU0ZThlNFxcdTY3MDgyMFxcdTY1ZTVcXHU4ZmRiXFx1ODg0Y1xcdTdlZjRcXHU2MmE0XFx1NTM0N1xcdTdlYTdcXHVmZjBjXFx1NWM0YVxcdTY1ZjZcXHU1M2VmXFx1ODBmZFxcdTRmMWFcXHU1ZjcxXFx1NTRjZFxcdTkwZThcXHU1MjA2XFx1NTI5ZlxcdTgwZmRcXHU3Njg0XFx1NGY3ZlxcdTc1MjhcXHUzMDAyJ1xcbiAgfVxcbl0pXCIsIFwibmV3X3N0clwiOiBcIjxzY3JpcHQgc2V0dXA+XFxuaW1wb3J0IHsgcmVmLCBvbk1vdW50ZWQgfSBmcm9tICd2dWUnXFxuaW1wb3J0IHsgQmVsbCB9IGZyb20gJ0BlbGVtZW50LXBsdXMvaWNvbnMtdnVlJ1xcbmltcG9ydCB7IHVzZVRva2VuU3RvcmUgfSBmcm9tICdAL3N0b3Jlcy90b2tlbidcXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICd2dWUtcm91dGVyJ1xcbmltcG9ydCB7IGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2UgfSBmcm9tICdAL2FwaS91c2VyL3VzZXJtZXNzYWdlJ1xcbmltcG9ydCB7IEVsTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtcGx1cydcXG5pbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXFxuXFxuY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKClcXG5jb25zdCB0b2tlblN0b3JlID0gdXNlVG9rZW5TdG9yZSgpXFxuY29uc3QgYWN0aXZlVGFiID0gcmVmKCdsaWtlcycpIC8vIFxcdTllZDhcXHU4YmE0XFx1NjYzZVxcdTc5M2FcXHU3MGI5XFx1OGQ1ZVxcdTZkODhcXHU2MDZmXFx1NjgwN1xcdTdiN2VcXHU5ODc1XFxuXFxuLy8gXFx1NjhjMFxcdTY3ZTVcXHU3NTI4XFx1NjIzN1xcdTY2MmZcXHU1NDI2XFx1NzY3YlxcdTVmNTVcXG5jb25zdCBpc0xvZ2luID0gcmVmKCEhdG9rZW5TdG9yZS50b2tlbilcXG5pZiAoIWlzTG9naW4udmFsdWUpIHtcXG4gIC8vIFxcdTU5ODJcXHU2NzljXFx1NjcyYVxcdTc2N2JcXHU1ZjU1XFx1ZmYwY1xcdTkxY2RcXHU1YjlhXFx1NTQxMVxcdTUyMzBcXHU5OTk2XFx1OTg3NVxcbiAgcm91dGVyLnB1c2goJy8nKVxcbn1cXG5cXG4vLyBcXHU2ZDg4XFx1NjA2ZlxcdTY1NzBcXHU2MzZlXFxuY29uc3QgbWVudGlvbnMgPSByZWYoW10pXFxuY29uc3QgbGlrZXMgPSByZWYoW10pXFxuY29uc3QgcmVwbGllcyA9IHJlZihbXSlcXG5jb25zdCBzeXN0ZW1Ob3RpY2VzID0gcmVmKFtdKVxcblxcbi8vIFxcdTUyYTBcXHU4ZjdkXFx1NzJiNlxcdTYwMDFcXG5jb25zdCBsb2FkaW5nID0gcmVmKGZhbHNlKVxcblxcbi8vIFxcdTY4M2NcXHU1ZjBmXFx1NTMxNlxcdTY1ZTVcXHU2NzFmXFxuY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlU3RyaW5nKSA9PiB7XFxuICBjb25zdCBkYXRlID0gZGF5anMoZGF0ZVN0cmluZylcXG4gIGNvbnN0IG5vdyA9IGRheWpzKClcXG4gIFxcbiAgLy8gXFx1NTk4MlxcdTY3OWNcXHU2NjJmXFx1NGVjYVxcdTU5MjlcXG4gIGlmIChkYXRlLmZvcm1hdCgnWVlZWS1NTS1ERCcpID09PSBub3cuZm9ybWF0KCdZWVlZLU1NLUREJykpIHtcXG4gICAgcmV0dXJuIGRhdGUuZm9ybWF0KCdISDptbScpXFxuICB9XFxuICAvLyBcXHU1OTgyXFx1Njc5Y1xcdTY2MmZcXHU2NjI4XFx1NTkyOVxcbiAgZWxzZSBpZiAoZGF0ZS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PT0gbm93LnN1YnRyYWN0KDEsICdkYXknKS5mb3JtYXQoJ1lZWVktTU0tREQnKSkge1xcbiAgICByZXR1cm4gJ1xcdTY2MjhcXHU1OTI5ICcgKyBkYXRlLmZvcm1hdCgnSEg6bW0nKVxcbiAgfVxcbiAgLy8gXFx1NTk4MlxcdTY3OWNcXHU2NjJmXFx1NGVjYVxcdTVlNzRcXG4gIGVsc2UgaWYgKGRhdGUuZm9ybWF0KCdZWVlZJykgPT09IG5vdy5mb3JtYXQoJ1lZWVknKSkge1xcbiAgICByZXR1cm4gZGF0ZS5mb3JtYXQoJ01NLUREIEhIOm1tJylcXG4gIH1cXG4gIC8vIFxcdTUxNzZcXHU0ZWQ2XFx1NjBjNVxcdTUxYjVcXG4gIGVsc2Uge1xcbiAgICByZXR1cm4gZGF0ZS5mb3JtYXQoJ1lZWVktTU0tREQgSEg6bW0nKVxcbiAgfVxcbn1cXG5cXG4vLyBcXHU4M2I3XFx1NTNkNlxcdTc1MjhcXHU2MjM3XFx1ODljNlxcdTk4OTFcXHU3MGI5XFx1OGQ1ZVxcdTZkODhcXHU2MDZmXFxuY29uc3QgZ2V0VXNlck1lc3NhZ2VzID0gYXN5bmMgKCkgPT4ge1xcbiAgaWYgKCFpc0xvZ2luLnZhbHVlKSByZXR1cm5cXG4gIFxcbiAgbG9hZGluZy52YWx1ZSA9IHRydWVcXG4gIHRyeSB7XFxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2UoKVxcbiAgICBpZiAocmVzLmNvZGUgPT09IDIwMCAmJiByZXMuZGF0YSkge1xcbiAgICAgIC8vIFxcdTU5MDRcXHU3NDA2XFx1NzBiOVxcdThkNWVcXHU2ZDg4XFx1NjA2ZlxcdTY1NzBcXHU2MzZlXFxuICAgICAgbGlrZXMudmFsdWUgPSByZXMuZGF0YS5tYXAoaXRlbSA9PiAoe1xcbiAgICAgICAgaWQ6IGl0ZW0uaWQsXFxuICAgICAgICB1c2VybmFtZTogaXRlbS5uaWNrbmFtZSxcXG4gICAgICAgIGF2YXRhcjogaXRlbS51c2VyUGljLFxcbiAgICAgICAgdGltZTogZm9ybWF0RGF0ZShpdGVtLmxpa2VkQXQpLFxcbiAgICAgICAgY29udGVudDogJ1xcdThkNWVcXHU0ZTg2XFx1NGY2MFxcdTc2ODRcXHU4OWM2XFx1OTg5MScsXFxuICAgICAgICB2aWRlb0lkOiBpdGVtLnZpZGVvSWQsXFxuICAgICAgICBzb3VyY2U6IHtcXG4gICAgICAgICAgdGl0bGU6IGl0ZW0udGl0bGUsXFxuICAgICAgICAgIGNvbnRlbnQ6ICcnLFxcbiAgICAgICAgICBjb3ZlcjogaXRlbS5jb3ZlclxcbiAgICAgICAgfVxcbiAgICAgIH0pKVxcbiAgICB9IGVsc2Uge1xcbiAgICAgIEVsTWVzc2FnZS5lcnJvcignXFx1ODNiN1xcdTUzZDZcXHU2ZDg4XFx1NjA2ZlxcdTU5MzFcXHU4ZDI1XFx1ZmYxYScgKyByZXMubWVzc2FnZSlcXG4gICAgfVxcbiAgfSBjYXRjaCAoZXJyb3IpIHtcXG4gICAgY29uc29sZS5lcnJvcignXFx1ODNiN1xcdTUzZDZcXHU2ZDg4XFx1NjA2ZlxcdTUxZmFcXHU5NTE5XFx1ZmYxYScsIGVycm9yKVxcbiAgICBFbE1lc3NhZ2UuZXJyb3IoJ1xcdTgzYjdcXHU1M2Q2XFx1NmQ4OFxcdTYwNmZcXHU1MWZhXFx1OTUxOVxcdWZmMGNcXHU4YmY3XFx1N2EwZFxcdTU0MGVcXHU5MWNkXFx1OGJkNScpXFxuICB9IGZpbmFsbHkge1xcbiAgICBsb2FkaW5nLnZhbHVlID0gZmFsc2VcXG4gIH1cXG59XFxuXFxuLy8gXFx1OGRmM1xcdThmNmNcXHU1MjMwXFx1ODljNlxcdTk4OTFcXHU4YmU2XFx1NjBjNVxcdTk4NzVcXG5jb25zdCBnb1RvVmlkZW8gPSAodmlkZW9JZCkgPT4ge1xcbiAgcm91dGVyLnB1c2goYC92aWRlby8ke3ZpZGVvSWR9YClcXG59XFxuXFxuLy8gXFx1N2VjNFxcdTRlZjZcXHU2MzAyXFx1OGY3ZFxcdTY1ZjZcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFxub25Nb3VudGVkKCgpID0+IHtcXG4gIGlmIChpc0xvZ2luLnZhbHVlKSB7XFxuICAgIGdldFVzZXJNZXNzYWdlcygpXFxuICB9XFxufSlcXG5cXG4vLyBcXHU2YTIxXFx1NjJkZlxcdTY1NzBcXHU2MzZlIC0gXFx1NTE3NlxcdTRlZDZcXHU3YzdiXFx1NTc4YlxcdTc2ODRcXHU2ZDg4XFx1NjA2ZlxcbmNvbnN0IHN5c3RlbU5vdGljZXMgPSByZWYoW1xcbiAge1xcbiAgICBpZDogMSxcXG4gICAgdGltZTogJzIwMjMtMDQtMTUnLFxcbiAgICBjb250ZW50OiAnXFx1NjBhOFxcdTc2ODRcXHU4ZDI2XFx1NTNmN1xcdTVkZjJcXHU1YjhjXFx1NjIxMFxcdTViOWVcXHU1NDBkXFx1OGJhNFxcdThiYzFcXHVmZjBjXFx1NjExZlxcdThjMjJcXHU2MGE4XFx1NzY4NFxcdTkxNGRcXHU1NDA4XFx1MzAwMidcXG4gIH0sXFxuICB7XFxuICAgIGlkOiAyLFxcbiAgICB0aW1lOiAnMjAyMy0wNC0xMCcsXFxuICAgIGNvbnRlbnQ6ICdcXHU3Y2ZiXFx1N2VkZlxcdTVjMDZcXHU0ZThlNFxcdTY3MDgyMFxcdTY1ZTVcXHU4ZmRiXFx1ODg0Y1xcdTdlZjRcXHU2MmE0XFx1NTM0N1xcdTdlYTdcXHVmZjBjXFx1NWM0YVxcdTY1ZjZcXHU1M2VmXFx1ODBmZFxcdTRmMWFcXHU1ZjcxXFx1NTRjZFxcdTkwZThcXHU1MjA2XFx1NTI5ZlxcdTgwZmRcXHU3Njg0XFx1NGY3ZlxcdTc1MjhcXHUzMDAyJ1xcbiAgfVxcbl0pXCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiAxMTAsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogMTk2fV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLnjrDlnKjvvIzmiJHlsIbkv67mlLnmtojmga/kuK3lv4PpobXpnaLvvIzkvb/nlKggYGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2VgIOaWueazleiOt+WPlueUqOaIt+inhumikeeCuei1nua2iOaBr+W5tua4suafk++8mlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvYXBpL3VzZXIvdXNlcm1lc3NhZ2UuanM6XG4gICAgIDFcdGltcG9ydCByZXF1ZXN0IGZyb20gXCJAL3V0aWxzL3JlcXVlc3RcIjtcbiAgICAgMlx0XG4gICAgIDNcdC8vIOiOt+WPlueUqOaIt+a2iOaBr+WIl+ihqFxuICAgICA0XHRleHBvcnQgY29uc3QgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZSA9ICgpID0+IHtcbiAgICAgNVx0ICAgIHJldHVybiByZXF1ZXN0LmdldChcIi91c2VyL21lc3NhZ2VcIilcbiAgICAgNlx0fVxuVG90YWwgbGluZXMgaW4gZmlsZTogNlxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMUU5NWdqanZyWVJMbzd2UzhhOWdtUEMifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IueOsOWcqO+8jOaIkeWwhuS/ruaUuea2iOaBr+S4reW/g+mhtemdou+8jOS9v+eUqCBgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZWAg5pa55rOV6I635Y+W55So5oi36KeG6aKR54K56LWe5raI5oGv5bm25riy5p+T77yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNzJhMDkxNDktOTE1Ni00MWY3LTg5YWQtMGNiNTM4NTljYWUwIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUJhRFo0ZVZZcmVyQVBvRWJ4RXg2YjMiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCJ9In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLmiJHnnIvliLDmlofku7blhoXlrrnlt7Lnu4/lj5HnlJ/kuoblj5jljJbvvIzorqnmiJHlhYjmn6XnnIvlrozmlbTnmoTmlofku7blhoXlrrnvvIznhLblkI7lho3ov5vooYzkv67mlLnvvJpcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkZhaWxlZCB0byBlZGl0IHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS4gU2VlIGJlbG93IGZvciBkZXRhaWxzLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuTm8gcmVwbGFjZW1lbnQgd2FzIHBlcmZvcm1lZCwgb2xkU3RyIGRpZCBub3QgYXBwZWFyIHZlcmJhdGltIGluIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblRoZSBjb250ZW50IGluIHRoZSBzcGVjaWZpZWQgcmVnaW9uIGlzOlxuICAgMTA2XHRcbiAgIDEwN1x0Y29uc3QgbGlrZXMgPSByZWYoW1xuICAgMTA4XHQgIHtcbiAgIDEwOVx0ICAgIGlkOiAxLFxuICAgMTEwXHQgICAgdXNlcm5hbWU6ICfnlKjmiLdDJyxcbiAgIDExMVx0ICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuICAgMTEyXHQgICAgdGltZTogJzPlsI/ml7bliY0nLFxuICAgMTEzXHQgICAgY29udGVudDogJ+i1nuS6huS9oOeahOinhumikScsXG4gICAxMTRcdCAgICBzb3VyY2U6IHtcbiAgIDExNVx0ICAgICAgdGl0bGU6ICdKYXZhU2NyaXB05Z+656GA5pWZ56iLJyxcbiAgIDExNlx0ICAgICAgY29udGVudDogJ0phdmFTY3JpcHTmmK/nvZHpobXlvIDlj5HnmoTln7rnoYAuLi4nXG4gICAxMTdcdCAgICB9XG4gICAxMThcdCAgfVxuICAgMTE5XHRdKVxuICAgMTIwXHRcbiAgIDEyMVx0Y29uc3QgcmVwbGllcyA9IHJlZihbXG4gICAxMjJcdCAge1xuICAgMTIzXHQgICAgaWQ6IDEsXG4gICAxMjRcdCAgICB1c2VybmFtZTogJ+eUqOaIt0QnLFxuICAgMTI1XHQgICAgYXZhdGFyOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsXG4gICAxMjZcdCAgICB0aW1lOiAnMeWkqeWJjScsXG4gICAxMjdcdCAgICBjb250ZW50OiAn6L+Z5Liq5pWZ56iL6Z2e5bi45pyJ5biu5Yqp77yM6LCi6LCi5YiG5Lqr77yBJyxcbiAgIDEyOFx0ICAgIHNvdXJjZToge1xuICAgMTI5XHQgICAgICB0aXRsZTogJ0NTU+W4g+WxgOaKgOW3pycsXG4gICAxMzBcdCAgICAgIGNvbnRlbnQ6ICdDU1PluIPlsYDmmK/liY3nq6/lvIDlj5HnmoTph43opoHpg6jliIYuLi4nXG4gICAxMzFcdCAgICB9XG4gICAxMzJcdCAgfSxcbiAgIDEzM1x0ICB7XG4gICAxMzRcdCAgICBpZDogMixcbiAgIDEzNVx0ICAgIHVzZXJuYW1lOiAn55So5oi3RScsXG4gICAxMzZcdCAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcbiAgIDEzN1x0ICAgIHRpbWU6ICcy5aSp5YmNJyxcbiAgIDEzOFx0ICAgIGNvbnRlbnQ6ICfmiJHmjInnhafmlZnnqIvlgZrkuobvvIzkvYbpgYfliLDkuobkuIDkupvpl67popjvvIzog73luK7miJHnnIvnnIvlkJfvvJ8nLFxuICAgMTM5XHQgICAgc291cmNlOiB7XG4gICAxNDBcdCAgICAgIHRpdGxlOiAnVnVl57uE5Lu26YCa5L+hJyxcbiAgIDE0MVx0ICAgICAgY29udGVudDogJ1Z1Zee7hOS7tuS5i+mXtOeahOmAmuS/oeaWueW8j+acieWkmuenjS4uLidcbiAgIDE0Mlx0ICAgIH1cbiAgIDE0M1x0ICB9XG4gICAxNDRcdF0pXG4gICAxNDVcdFxuICAgMTQ2XHRjb25zdCBzeXN0ZW1Ob3RpY2VzID0gcmVmKFtcbiAgIDE0N1x0ICB7XG4gICAxNDhcdCAgICBpZDogMSxcbiAgIDE0OVx0ICAgIHRpbWU6ICcyMDIzLTA0LTE1JyxcbiAgIDE1MFx0ICAgIGNvbnRlbnQ6ICfmgqjnmoTotKblj7flt7LlrozmiJDlrp7lkI3orqTor4HvvIzmhJ/osKLmgqjnmoTphY3lkIjjgIInXG4gICAxNTFcdCAgfSxcbiAgIDE1Mlx0ICB7XG4gICAxNTNcdCAgICBpZDogMixcbiAgIDE1NFx0ICAgIHRpbWU6ICcyMDIzLTA0LTEwJyxcbiAgIDE1NVx0ICAgIGNvbnRlbnQ6ICfns7vnu5/lsIbkuo405pyIMjDml6Xov5vooYznu7TmiqTljYfnuqfvvIzlsYrml7blj6/og73kvJrlvbHlk43pg6jliIblip/og73nmoTkvb/nlKjjgIInXG4gICAxNTZcdCAgfVxuICAgMTU3XHRdKVxuICAgMTU4XHRcbiAgIDE1OVx0Ly8g5qC55o2u5b2T5YmN6YCJ5Lit55qE5qCH562+5Yqo5oCB6I635Y+W5raI5oGvXG4gICAxNjBcdGNvbnN0IGN1cnJlbnRNZXNzYWdlcyA9IGNvbXB1dGVkKCgpID0+IHtcbiAgIDE2MVx0ICBzd2l0Y2ggKGFjdGl2ZVRhYi52YWx1ZSkge1xuICAgMTYyXHQgICAgY2FzZSAnbWVudGlvbnMnOlxuICAgMTYzXHQgICAgICByZXR1cm4gbWVudGlvbnMudmFsdWVcbiAgIDE2NFx0ICAgIGNhc2UgJ2xpa2VzJzpcbiAgIDE2NVx0ICAgICAgcmV0dXJuIGxpa2VzLnZhbHVlXG4gICAxNjZcdCAgICBjYXNlICdyZXBsaWVzJzpcbiAgIDE2N1x0ICAgICAgcmV0dXJuIHJlcGxpZXMudmFsdWVcbiAgIDE2OFx0ICAgIGNhc2UgJ3N5c3RlbSc6XG4gICAxNjlcdCAgICAgIHJldHVybiBzeXN0ZW1Ob3RpY2VzLnZhbHVlXG4gICAxNzBcdCAgICBkZWZhdWx0OlxuICAgMTcxXHQgICAgICByZXR1cm4gW11cbiAgIDE3Mlx0ICB9XG4gICAxNzNcdH0pXG4gICAxNzRcdFxuICAgMTc1XHQvLyDoj5zljZXliIfmjaLkuovku7ZcbiAgIDE3Nlx0Y29uc3QgaGFuZGxlTWVudVNlbGVjdCA9IChrZXkpID0+IHtcbiAgIDE3N1x0ICBhY3RpdmVUYWIudmFsdWUgPSBrZXlcbiAgIDE3OFx0fVxuICAgMTc5XHQ8L3NjcmlwdD5cbiAgIDE4MFx0XG4gICAxODFcdDxzdHlsZSBzY29wZWQ+XG4gICAxODJcdC5tZXNzYWdlLWNlbnRlciB7XG4gICAxODNcdCAgZGlzcGxheTogZmxleDtcbiAgIDE4NFx0ICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgIDE4NVx0ICBtYXJnaW46IDgwcHggYXV0byA0MHB4O1xuICAgMTg2XHQgIHBhZGRpbmc6IDAgMjBweDtcbiAgIDE4N1x0fVxuICAgMTg4XHRcbiAgIDE4OVx0Lm1lc3NhZ2Utc2lkZWJhciB7XG4gICAxOTBcdCAgd2lkdGg6IDIwMHB4O1xuICAgMTkxXHQgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAxOTJcdCAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgMTkzXHQgIGJveC1zaGFkb3c6IDAgMnB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgIDE5NFx0ICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAxOTVcdH1cbiAgIDE5Nlx0XG4gICAxOTdcdC5tZXNzYWdlLW1lbnUge1xuICAgMTk4XHQgIGJvcmRlci1yaWdodDogbm9uZTtcbiAgIDE5OVx0fVxuICAgMjAwXHRcblxuRGlmZiBiZXR3ZWVuIG9sZFN0ciBhbmQgdGhlIHNwZWNpZmllZCByZWdpb24gaXM6XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4tLS0gb2xkU3RyXG4rKysgcmVnaW9uQ29udGVudFxuQEAgLTEsNDkgKzEsMyBAQFxuLTxzY3JpcHQgc2V0dXA+XG4taW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJ1xuLWltcG9ydCB7IEJlbGwgfSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcbi1pbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXG4taW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAndnVlLXJvdXRlcidcbi1cbi1jb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuLWNvbnN0IHRva2VuU3RvcmUgPSB1c2VUb2tlblN0b3JlKClcbi1jb25zdCBhY3RpdmVUYWIgPSByZWYoJ21lbnRpb25zJylcbi1cbi0vLyDmo4Dmn6XnlKjmiLfmmK/lkKbnmbvlvZVcbi1jb25zdCBpc0xvZ2luID0gcmVmKCEhdG9rZW5TdG9yZS50b2tlbilcbi1pZiAoIWlzTG9naW4udmFsdWUpIHtcbi0gIC8vIOWmguaenOacqueZu+W9le+8jOmHjeWumuWQkeWIsOmmlumhtVxuLSAgcm91dGVyLnB1c2goJy8nKVxuLX1cbi1cbi0vLyDmqKHmi5/mlbDmja4gLSDlrp7pmYXpobnnm67kuK3lupTor6Xku45BUEnojrflj5Zcbi1jb25zdCBtZW50aW9ucyA9IHJlZihbXG4tICB7XG4tICAgIGlkOiAxLFxuLSAgICB1c2VybmFtZTogJ+eUqOaIt0EnLFxuLSAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcbi0gICAgdGltZTogJzLlsI/ml7bliY0nLFxuLSAgICBjb250ZW50OiAnQOS9oCDov5nkuKrop4bpopHnnJ/kuI3plJnvvIEnLFxuLSAgICBzb3VyY2U6IHtcbi0gICAgICB0aXRsZTogJ+WmguS9leWtpuS5oOWJjeerr+W8gOWPkScsXG4tICAgICAgY29udGVudDogJ+WJjeerr+W8gOWPkeaYr+S4gOS4quS4jeaWreWtpuS5oOeahOi/h+eoiy4uLidcbi0gICAgfVxuLSAgfSxcbi0gIHtcbi0gICAgaWQ6IDIsXG4tICAgIHVzZXJuYW1lOiAn55So5oi3QicsXG4tICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuLSAgICB0aW1lOiAn5pio5aSpJyxcbi0gICAgY29udGVudDogJ0DkvaAg6IO95YiG5Lqr5LiA5LiL5a2m5Lmg6LWE5paZ5ZCX77yfJyxcbi0gICAgc291cmNlOiB7XG4tICAgICAgdGl0bGU6ICdWdWUuanPlrp7miJjmlZnnqIsnLFxuLSAgICAgIGNvbnRlbnQ6ICdWdWUuanPmmK/kuIDkuKrmtYHooYznmoTliY3nq6/moYbmnrYuLi4nXG4tICAgIH1cbi0gIH1cbi1dKVxuLVxuLWNvbnN0IGxpa2VzID0gcmVmKFtcbi0gIHtcbi0gICAgaWQ6IDEsXG4gICAgIHVzZXJuYW1lOiAn55So5oi3QycsXG4gICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuICAgICB0aW1lOiAnM+Wwj+aXtuWJjScsXG5AQCAtOTIsMyArNDYsNDIgQEBcbiAgICAgY29udGVudDogJ+ezu+e7n+WwhuS6jjTmnIgyMOaXpei/m+ihjOe7tOaKpOWNh+e6p++8jOWxiuaXtuWPr+iDveS8muW9seWTjemDqOWIhuWKn+iDveeahOS9v+eUqOOAgidcbiAgIH1cbiBdKVxuK1xuKy8vIOagueaNruW9k+WJjemAieS4reeahOagh+etvuWKqOaAgeiOt+WPlua2iOaBr1xuK2NvbnN0IGN1cnJlbnRNZXNzYWdlcyA9IGNvbXB1dGVkKCgpID0+IHtcbisgIHN3aXRjaCAoYWN0aXZlVGFiLnZhbHVlKSB7XG4rICAgIGNhc2UgJ21lbnRpb25zJzpcbisgICAgICByZXR1cm4gbWVudGlvbnMudmFsdWVcbisgICAgY2FzZSAnbGlrZXMnOlxuKyAgICAgIHJldHVybiBsaWtlcy52YWx1ZVxuKyAgICBjYXNlICdyZXBsaWVzJzpcbisgICAgICByZXR1cm4gcmVwbGllcy52YWx1ZVxuKyAgICBjYXNlICdzeXN0ZW0nOlxuKyAgICAgIHJldHVybiBzeXN0ZW1Ob3RpY2VzLnZhbHVlXG4rICAgIGRlZmF1bHQ6XG4rICAgICAgcmV0dXJuIFtdXG4rICB9XG4rfSlcbitcbisvLyDoj5zljZXliIfmjaLkuovku7Zcbitjb25zdCBoYW5kbGVNZW51U2VsZWN0ID0gKGtleSkgPT4ge1xuKyAgYWN0aXZlVGFiLnZhbHVlID0ga2V5XG4rfVxuKzwvc2NyaXB0PlxuK1xuKzxzdHlsZSBzY29wZWQ+XG4rLm1lc3NhZ2UtY2VudGVyIHtcbisgIGRpc3BsYXk6IGZsZXg7XG4rICBtYXgtd2lkdGg6IDEyMDBweDtcbisgIG1hcmdpbjogODBweCBhdXRvIDQwcHg7XG4rICBwYWRkaW5nOiAwIDIwcHg7XG4rfVxuK1xuKy5tZXNzYWdlLXNpZGViYXIge1xuKyAgd2lkdGg6IDIwMHB4O1xuKyAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbisgIGJvcmRlci1yYWRpdXM6IDhweDtcbisgIGJveC1zaGFkb3c6IDAgMnB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbisgIG1hcmdpbi1yaWdodDogMjBweDtcbit9XG4rXG5cblxuRml4IGZhaWxlZCBzdHJfcmVwbGFjZV9lbnRyaWVzIGFjY29yZGluZ2x5IGFuZCB0cnkgYWdhaW4uXG4iLCJpc19lcnJvciI6dHJ1ZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFOZHYycjU0N1lwOWJ1U1pNd1J4eEMyIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmiJHnnIvliLDmlofku7blhoXlrrnlt7Lnu4/lj5HnlJ/kuoblj5jljJbvvIzorqnmiJHlhYjmn6XnnIvlrozmlbTnmoTmlofku7blhoXlrrnvvIznhLblkI7lho3ov5vooYzkv67mlLnvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiI4MzVlODVkOS0xMjgxLTQ2NTItOTRiOS00NDBjZjU3ZDEzODYiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxUkFKR3Z2dmVSVGh3OEVkUjlRTW4zZyIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIjxzY3JpcHQgc2V0dXA+XFxuaW1wb3J0IHsgcmVmLCBjb21wdXRlZCB9IGZyb20gJ3Z1ZSdcXG5pbXBvcnQgeyBCZWxsIH0gZnJvbSAnQGVsZW1lbnQtcGx1cy9pY29ucy12dWUnXFxuaW1wb3J0IHsgdXNlVG9rZW5TdG9yZSB9IGZyb20gJ0Avc3RvcmVzL3Rva2VuJ1xcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ3Z1ZS1yb3V0ZXInXCIsIFwibmV3X3N0clwiOiBcIjxzY3JpcHQgc2V0dXA+XFxuaW1wb3J0IHsgcmVmLCBjb21wdXRlZCwgb25Nb3VudGVkIH0gZnJvbSAndnVlJ1xcbmltcG9ydCB7IEJlbGwgfSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcXG5pbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXFxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAndnVlLXJvdXRlcidcXG5pbXBvcnQgeyBnZXRVc2VyTWVzc2FnZUxpc3RTZXJ2aWNlIH0gZnJvbSAnQC9hcGkvdXNlci91c2VybWVzc2FnZSdcXG5pbXBvcnQgeyBFbE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXBsdXMnXFxuaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJ1wiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogNjQsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogNjh9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IueOsOWcqOaIkeWwhuS/ruaUuea2iOaBr+S4reW/g+mhtemdou+8jOS9v+eUqCBgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZWAg5pa55rOV6I635Y+W55So5oi36KeG6aKR54K56LWe5raI5oGv5bm25riy5p+T77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZTpcbiAgICAgMVx0PHRlbXBsYXRlPlxuICAgICAyXHQgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWNlbnRlclwiPlxuICAgICAzXHQgICAgPCEtLSDlt6bkvqfoj5zljZUgLS0+XG4gICAgIDRcdCAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1zaWRlYmFyXCI+XG4gICAgIDVcdCAgICAgIDxlbC1tZW51XG4gICAgIDZcdCAgICAgICAgOmRlZmF1bHQtYWN0aXZlPVwiYWN0aXZlVGFiXCJcbiAgICAgN1x0ICAgICAgICBjbGFzcz1cIm1lc3NhZ2UtbWVudVwiXG4gICAgIDhcdCAgICAgICAgQHNlbGVjdD1cImhhbmRsZU1lbnVTZWxlY3RcIlxuICAgICA5XHQgICAgICA+XG4gICAgMTBcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cIm1lbnRpb25zXCI+XG4gICAgMTFcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDEyXHQgICAgICAgICAgICA8c3Bhbj5A5oiR55qEPC9zcGFuPlxuICAgIDEzXHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAxNFx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAxNVx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwibGlrZXNcIj5cbiAgICAxNlx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMTdcdCAgICAgICAgICAgIDxzcGFuPueCuei1njwvc3Bhbj5cbiAgICAxOFx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMTlcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjBcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInJlcGxpZXNcIj5cbiAgICAyMVx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMjJcdCAgICAgICAgICAgIDxzcGFuPuWbnuWkjTwvc3Bhbj5cbiAgICAyM1x0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMjRcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjVcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInN5c3RlbVwiPlxuICAgIDI2XHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAyN1x0ICAgICAgICAgICAgPHNwYW4+57O757uf6YCa55+lPC9zcGFuPlxuICAgIDI4XHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAyOVx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAzMFx0ICAgICAgPC9lbC1tZW51PlxuICAgIDMxXHQgICAgPC9kaXY+XG4gICAgMzJcdFxuICAgIDMzXHQgICAgPCEtLSDlj7PkvqflhoXlrrnljLogLS0+XG4gICAgMzRcdCAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1jb250ZW50LWFyZWFcIj5cbiAgICAzNVx0ICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtaGVhZGVyXCI+XG4gICAgMzZcdCAgICAgICAgPGgyPua2iOaBr+S4reW/gzwvaDI+XG4gICAgMzdcdCAgICAgIDwvZGl2PlxuICAgIDM4XHRcbiAgICAzOVx0ICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtbGlzdFwiIHYtaWY9XCJjdXJyZW50TWVzc2FnZXMubGVuZ3RoID4gMFwiPlxuICAgIDQwXHQgICAgICAgIDxkaXYgdi1mb3I9XCIobWVzc2FnZSwgaW5kZXgpIGluIGN1cnJlbnRNZXNzYWdlc1wiIDprZXk9XCJpbmRleFwiIGNsYXNzPVwibWVzc2FnZS1pdGVtXCI+XG4gICAgNDFcdCAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1hdmF0YXJcIj5cbiAgICA0Mlx0ICAgICAgICAgICAgPGVsLWF2YXRhciA6c2l6ZT1cIjUwXCIgOnNyYz1cIm1lc3NhZ2UuYXZhdGFyXCI+PC9lbC1hdmF0YXI+XG4gICAgNDNcdCAgICAgICAgICA8L2Rpdj5cbiAgICA0NFx0ICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWNvbnRlbnRcIj5cbiAgICA0NVx0ICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtaW5mb1wiPlxuICAgIDQ2XHQgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWVzc2FnZS11c2VybmFtZVwiPnt7IG1lc3NhZ2UudXNlcm5hbWUgfX08L3NwYW4+XG4gICAgNDdcdCAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtZXNzYWdlLXRpbWVcIj57eyBtZXNzYWdlLnRpbWUgfX08L3NwYW4+XG4gICAgNDhcdCAgICAgICAgICAgIDwvZGl2PlxuICAgIDQ5XHQgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS10ZXh0XCI+e3sgbWVzc2FnZS5jb250ZW50IH19PC9kaXY+XG4gICAgNTBcdCAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLXNvdXJjZVwiIHYtaWY9XCJtZXNzYWdlLnNvdXJjZVwiPlxuICAgIDUxXHQgICAgICAgICAgICAgIDxlbC1jYXJkIHNoYWRvdz1cImhvdmVyXCIgY2xhc3M9XCJtZXNzYWdlLXNvdXJjZS1jYXJkXCI+XG4gICAgNTJcdCAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLXRpdGxlXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cbiAgICA1M1x0ICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtY29udGVudFwiPnt7IG1lc3NhZ2Uuc291cmNlLmNvbnRlbnQgfX08L2Rpdj5cbiAgICA1NFx0ICAgICAgICAgICAgICA8L2VsLWNhcmQ+XG4gICAgNTVcdCAgICAgICAgICAgIDwvZGl2PlxuICAgIDU2XHQgICAgICAgICAgPC9kaXY+XG4gICAgNTdcdCAgICAgICAgPC9kaXY+XG4gICAgNThcdCAgICAgIDwvZGl2PlxuICAgIDU5XHQgICAgICA8ZWwtZW1wdHkgdi1lbHNlIGRlc2NyaXB0aW9uPVwi5pqC5peg5raI5oGvXCI+PC9lbC1lbXB0eT5cbiAgICA2MFx0ICAgIDwvZGl2PlxuICAgIDYxXHQgIDwvZGl2PlxuICAgIDYyXHQ8L3RlbXBsYXRlPlxuICAgIDYzXHRcbiAgICA2NFx0PHNjcmlwdCBzZXR1cD5cbiAgICA2NVx0aW1wb3J0IHsgcmVmLCBjb21wdXRlZCB9IGZyb20gJ3Z1ZSdcbiAgICA2Nlx0aW1wb3J0IHsgQmVsbCB9IGZyb20gJ0BlbGVtZW50LXBsdXMvaWNvbnMtdnVlJ1xuICAgIDY3XHRpbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXG4gICAgNjhcdGltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ3Z1ZS1yb3V0ZXInXG4gICAgNjlcdFxuICAgIDcwXHRjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuICAgIDcxXHRjb25zdCB0b2tlblN0b3JlID0gdXNlVG9rZW5TdG9yZSgpXG4gICAgNzJcdGNvbnN0IGFjdGl2ZVRhYiA9IHJlZignbWVudGlvbnMnKVxuICAgIDczXHRcbiAgICA3NFx0Ly8g5qOA5p+l55So5oi35piv5ZCm55m75b2VXG4gICAgNzVcdGNvbnN0IGlzTG9naW4gPSByZWYoISF0b2tlblN0b3JlLnRva2VuKVxuICAgIDc2XHRpZiAoIWlzTG9naW4udmFsdWUpIHtcbiAgICA3N1x0ICAvLyDlpoLmnpzmnKrnmbvlvZXvvIzph43lrprlkJHliLDpppbpobVcbiAgICA3OFx0ICByb3V0ZXIucHVzaCgnLycpXG4gICAgNzlcdH1cbiAgICA4MFx0XG4gICAgODFcdC8vIOaooeaLn+aVsOaNriAtIOWunumZhemhueebruS4reW6lOivpeS7jkFQSeiOt+WPllxuICAgIDgyXHRjb25zdCBtZW50aW9ucyA9IHJlZihbXG4gICAgODNcdCAge1xuICAgIDg0XHQgICAgaWQ6IDEsXG4gICAgODVcdCAgICB1c2VybmFtZTogJ+eUqOaIt0EnLFxuICAgIDg2XHQgICAgYXZhdGFyOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsXG4gICAgODdcdCAgICB0aW1lOiAnMuWwj+aXtuWJjScsXG4gICAgODhcdCAgICBjb250ZW50OiAnQOS9oCDov5nkuKrop4bpopHnnJ/kuI3plJnvvIEnLFxuICAgIDg5XHQgICAgc291cmNlOiB7XG4gICAgOTBcdCAgICAgIHRpdGxlOiAn5aaC5L2V5a2m5Lmg5YmN56uv5byA5Y+RJyxcbiAgICA5MVx0ICAgICAgY29udGVudDogJ+WJjeerr+W8gOWPkeaYr+S4gOS4quS4jeaWreWtpuS5oOeahOi/h+eoiy4uLidcbiAgICA5Mlx0ICAgIH1cbiAgICA5M1x0ICB9LFxuICAgIDk0XHQgIHtcbiAgICA5NVx0ICAgIGlkOiAyLFxuICAgIDk2XHQgICAgdXNlcm5hbWU6ICfnlKjmiLdCJyxcbiAgICA5N1x0ICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuICAgIDk4XHQgICAgdGltZTogJ+aYqOWkqScsXG4gICAgOTlcdCAgICBjb250ZW50OiAnQOS9oCDog73liIbkuqvkuIDkuIvlrabkuaDotYTmlpnlkJfvvJ8nLFxuICAgMTAwXHQgICAgc291cmNlOiB7XG4gICAxMDFcdCAgICAgIHRpdGxlOiAnVnVlLmpz5a6e5oiY5pWZ56iLJyxcbiAgIDEwMlx0ICAgICAgY29udGVudDogJ1Z1ZS5qc+aYr+S4gOS4qua1geihjOeahOWJjeerr+ahhuaeti4uLidcbiAgIDEwM1x0ICAgIH1cbiAgIDEwNFx0ICB9XG4gICAxMDVcdF0pXG4gICAxMDZcdFxuICAgMTA3XHRjb25zdCBsaWtlcyA9IHJlZihbXG4gICAxMDhcdCAge1xuICAgMTA5XHQgICAgaWQ6IDEsXG4gICAxMTBcdCAgICB1c2VybmFtZTogJ+eUqOaIt0MnLFxuICAgMTExXHQgICAgYXZhdGFyOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsXG4gICAxMTJcdCAgICB0aW1lOiAnM+Wwj+aXtuWJjScsXG4gICAxMTNcdCAgICBjb250ZW50OiAn6LWe5LqG5L2g55qE6KeG6aKRJyxcbiAgIDExNFx0ICAgIHNvdXJjZToge1xuICAgMTE1XHQgICAgICB0aXRsZTogJ0phdmFTY3JpcHTln7rnoYDmlZnnqIsnLFxuICAgMTE2XHQgICAgICBjb250ZW50OiAnSmF2YVNjcmlwdOaYr+e9kemhteW8gOWPkeeahOWfuuehgC4uLidcbiAgIDExN1x0ICAgIH1cbiAgIDExOFx0ICB9XG4gICAxMTlcdF0pXG4gICAxMjBcdFxuICAgMTIxXHRjb25zdCByZXBsaWVzID0gcmVmKFtcbiAgIDEyMlx0ICB7XG4gICAxMjNcdCAgICBpZDogMSxcbiAgIDEyNFx0ICAgIHVzZXJuYW1lOiAn55So5oi3RCcsXG4gICAxMjVcdCAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcbiAgIDEyNlx0ICAgIHRpbWU6ICcx5aSp5YmNJyxcbiAgIDEyN1x0ICAgIGNvbnRlbnQ6ICfov5nkuKrmlZnnqIvpnZ7luLjmnInluK7liqnvvIzosKLosKLliIbkuqvvvIEnLFxuICAgMTI4XHQgICAgc291cmNlOiB7XG4gICAxMjlcdCAgICAgIHRpdGxlOiAnQ1NT5biD5bGA5oqA5benJyxcbiAgIDEzMFx0ICAgICAgY29udGVudDogJ0NTU+W4g+WxgOaYr+WJjeerr+W8gOWPkeeahOmHjeimgemDqOWIhi4uLidcbiAgIDEzMVx0ICAgIH1cbiAgIDEzMlx0ICB9LFxuICAgMTMzXHQgIHtcbiAgIDEzNFx0ICAgIGlkOiAyLFxuICAgMTM1XHQgICAgdXNlcm5hbWU6ICfnlKjmiLdFJyxcbiAgIDEzNlx0ICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuICAgMTM3XHQgICAgdGltZTogJzLlpKnliY0nLFxuICAgMTM4XHQgICAgY29udGVudDogJ+aIkeaMieeFp+aVmeeoi+WBmuS6hu+8jOS9humBh+WIsOS6huS4gOS6m+mXrumimO+8jOiDveW4ruaIkeeci+eci+WQl++8nycsXG4gICAxMzlcdCAgICBzb3VyY2U6IHtcbiAgIDE0MFx0ICAgICAgdGl0bGU6ICdWdWXnu4Tku7bpgJrkv6EnLFxuICAgMTQxXHQgICAgICBjb250ZW50OiAnVnVl57uE5Lu25LmL6Ze055qE6YCa5L+h5pa55byP5pyJ5aSa56eNLi4uJ1xuICAgMTQyXHQgICAgfVxuICAgMTQzXHQgIH1cbiAgIDE0NFx0XSlcbiAgIDE0NVx0XG4gICAxNDZcdGNvbnN0IHN5c3RlbU5vdGljZXMgPSByZWYoW1xuICAgMTQ3XHQgIHtcbiAgIDE0OFx0ICAgIGlkOiAxLFxuICAgMTQ5XHQgICAgdGltZTogJzIwMjMtMDQtMTUnLFxuICAgMTUwXHQgICAgY29udGVudDogJ+aCqOeahOi0puWPt+W3suWujOaIkOWunuWQjeiupOivge+8jOaEn+iwouaCqOeahOmFjeWQiOOAgidcbiAgIDE1MVx0ICB9LFxuICAgMTUyXHQgIHtcbiAgIDE1M1x0ICAgIGlkOiAyLFxuICAgMTU0XHQgICAgdGltZTogJzIwMjMtMDQtMTAnLFxuICAgMTU1XHQgICAgY29udGVudDogJ+ezu+e7n+WwhuS6jjTmnIgyMOaXpei/m+ihjOe7tOaKpOWNh+e6p++8jOWxiuaXtuWPr+iDveS8muW9seWTjemDqOWIhuWKn+iDveeahOS9v+eUqOOAgidcbiAgIDE1Nlx0ICB9XG4gICAxNTdcdF0pXG4gICAxNThcdFxuICAgMTU5XHQvLyDmoLnmja7lvZPliY3pgInkuK3nmoTmoIfnrb7liqjmgIHojrflj5bmtojmga9cbiAgIDE2MFx0Y29uc3QgY3VycmVudE1lc3NhZ2VzID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgMTYxXHQgIHN3aXRjaCAoYWN0aXZlVGFiLnZhbHVlKSB7XG4gICAxNjJcdCAgICBjYXNlICdtZW50aW9ucyc6XG4gICAxNjNcdCAgICAgIHJldHVybiBtZW50aW9ucy52YWx1ZVxuICAgMTY0XHQgICAgY2FzZSAnbGlrZXMnOlxuICAgMTY1XHQgICAgICByZXR1cm4gbGlrZXMudmFsdWVcbiAgIDE2Nlx0ICAgIGNhc2UgJ3JlcGxpZXMnOlxuICAgMTY3XHQgICAgICByZXR1cm4gcmVwbGllcy52YWx1ZVxuICAgMTY4XHQgICAgY2FzZSAnc3lzdGVtJzpcbiAgIDE2OVx0ICAgICAgcmV0dXJuIHN5c3RlbU5vdGljZXMudmFsdWVcbiAgIDE3MFx0ICAgIGRlZmF1bHQ6XG4gICAxNzFcdCAgICAgIHJldHVybiBbXVxuICAgMTcyXHQgIH1cbiAgIDE3M1x0fSlcbiAgIDE3NFx0XG4gICAxNzVcdC8vIOiPnOWNleWIh+aNouS6i+S7tlxuICAgMTc2XHRjb25zdCBoYW5kbGVNZW51U2VsZWN0ID0gKGtleSkgPT4ge1xuICAgMTc3XHQgIGFjdGl2ZVRhYi52YWx1ZSA9IGtleVxuICAgMTc4XHR9XG4gICAxNzlcdDwvc2NyaXB0PlxuICAgMTgwXHRcbiAgIDE4MVx0PHN0eWxlIHNjb3BlZD5cbiAgIDE4Mlx0Lm1lc3NhZ2UtY2VudGVyIHtcbiAgIDE4M1x0ICBkaXNwbGF5OiBmbGV4O1xuICAgMTg0XHQgIG1heC13aWR0aDogMTIwMHB4O1xuICAgMTg1XHQgIG1hcmdpbjogODBweCBhdXRvIDQwcHg7XG4gICAxODZcdCAgcGFkZGluZzogMCAyMHB4O1xuICAgMTg3XHR9XG4gICAxODhcdFxuICAgMTg5XHQubWVzc2FnZS1zaWRlYmFyIHtcbiAgIDE5MFx0ICB3aWR0aDogMjAwcHg7XG4gICAxOTFcdCAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgIDE5Mlx0ICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAxOTNcdCAgYm94LXNoYWRvdzogMCAycHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAgMTk0XHQgIG1hcmdpbi1yaWdodDogMjBweDtcbiAgIDE5NVx0fVxuICAgMTk2XHRcbiAgIDE5N1x0Lm1lc3NhZ2UtbWVudSB7XG4gICAxOThcdCAgYm9yZGVyLXJpZ2h0OiBub25lO1xuICAgMTk5XHR9XG4gICAyMDBcdFxuICAgMjAxXHQubWVzc2FnZS1jb250ZW50LWFyZWEge1xuICAgMjAyXHQgIGZsZXg6IDE7XG4gICAyMDNcdCAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgIDIwNFx0ICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAyMDVcdCAgYm94LXNoYWRvdzogMCAycHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAgMjA2XHQgIHBhZGRpbmc6IDIwcHg7XG4gICAyMDdcdH1cbiAgIDIwOFx0XG4gICAyMDlcdC5tZXNzYWdlLWhlYWRlciB7XG4gICAyMTBcdCAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgIDIxMVx0fVxuICAgMjEyXHRcbiAgIDIxM1x0Lm1lc3NhZ2UtaGVhZGVyIGgyIHtcbiAgIDIxNFx0ICBmb250LXNpemU6IDI0cHg7XG4gICAyMTVcdCAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAyMTZcdCAgY29sb3I6ICMxODE5MWM7XG4gICAyMTdcdH1cbiAgIDIxOFx0XG4gICAyMTlcdC5tZXNzYWdlLWxpc3Qge1xuICAgMjIwXHQgIHBhZGRpbmc6IDIwcHggMDtcbiAgIDIyMVx0fVxuICAgMjIyXHRcbiAgIDIyM1x0Lm1lc3NhZ2UtaXRlbSB7XG4gICAyMjRcdCAgZGlzcGxheTogZmxleDtcbiAgIDIyNVx0ICBwYWRkaW5nOiAxNnB4IDA7XG4gICAyMjZcdCAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmMWYyZjM7XG4gICAyMjdcdH1cbiAgIDIyOFx0XG4gICAyMjlcdC5tZXNzYWdlLWl0ZW06bGFzdC1jaGlsZCB7XG4gICAyMzBcdCAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgIDIzMVx0fVxuICAgMjMyXHRcbiAgIDIzM1x0Lm1lc3NhZ2UtYXZhdGFyIHtcbiAgIDIzNFx0ICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gICAyMzVcdCAgZmxleC1zaHJpbms6IDA7XG4gICAyMzZcdH1cbiAgIDIzN1x0XG4gICAyMzhcdC5tZXNzYWdlLWNvbnRlbnQge1xuICAgMjM5XHQgIGZsZXg6IDE7XG4gICAyNDBcdH1cbiAgIDI0MVx0XG4gICAyNDJcdC5tZXNzYWdlLWluZm8ge1xuICAgMjQzXHQgIGRpc3BsYXk6IGZsZXg7XG4gICAyNDRcdCAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgMjQ1XHQgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgIDI0Nlx0fVxuICAgMjQ3XHRcbiAgIDI0OFx0Lm1lc3NhZ2UtdXNlcm5hbWUge1xuICAgMjQ5XHQgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgMjUwXHQgIGNvbG9yOiAjMTgxOTFjO1xuICAgMjUxXHR9XG4gICAyNTJcdFxuICAgMjUzXHQubWVzc2FnZS10aW1lIHtcbiAgIDI1NFx0ICBjb2xvcjogIzk0OTlhMDtcbiAgIDI1NVx0ICBmb250LXNpemU6IDE0cHg7XG4gICAyNTZcdH1cbiAgIDI1N1x0XG4gICAyNThcdC5tZXNzYWdlLXRleHQge1xuICAgMjU5XHQgIG1hcmdpbi1ib3R0b206IDEycHg7XG4gICAyNjBcdCAgY29sb3I6ICMxODE5MWM7XG4gICAyNjFcdCAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgIDI2Mlx0fVxuICAgMjYzXHRcbiAgIDI2NFx0Lm1lc3NhZ2Utc291cmNlIHtcbiAgIDI2NVx0ICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgMjY2XHR9XG4gICAyNjdcdFxuICAgMjY4XHQubWVzc2FnZS1zb3VyY2UtY2FyZCB7XG4gICAyNjlcdCAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjdmODtcbiAgIDI3MFx0ICBib3JkZXI6IG5vbmU7XG4gICAyNzFcdH1cbiAgIDI3Mlx0XG4gICAyNzNcdC5zb3VyY2UtdGl0bGUge1xuICAgMjc0XHQgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgMjc1XHQgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgIDI3Nlx0ICBjb2xvcjogIzE4MTkxYztcbiAgIDI3N1x0fVxuICAgMjc4XHRcbiAgIDI3OVx0LnNvdXJjZS1jb250ZW50IHtcbiAgIDI4MFx0ICBjb2xvcjogIzYxNjY2ZDtcbiAgIDI4MVx0ICBmb250LXNpemU6IDE0cHg7XG4gICAyODJcdCAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgIDI4M1x0ICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgIDI4NFx0ICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgIDI4NVx0ICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gICAyODZcdCAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgIDI4N1x0fVxuICAgMjg4XHRcbiAgIDI4OVx0LnN5c3RlbS1tZXNzYWdlIC5tZXNzYWdlLXVzZXJuYW1lIHtcbiAgIDI5MFx0ICBjb2xvcjogI2ZiNzI5OTtcbiAgIDI5MVx0fVxuICAgMjkyXHRcbiAgIDI5M1x0Lyog5ZON5bqU5byP5qC35byPICovXG4gICAyOTRcdEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAyOTVcdCAgLm1lc3NhZ2UtY2VudGVyIHtcbiAgIDI5Nlx0ICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAyOTdcdCAgfVxuICAgMjk4XHRcbiAgIDI5OVx0ICAubWVzc2FnZS1zaWRlYmFyIHtcbiAgIDMwMFx0ICAgIHdpZHRoOiAxMDAlO1xuICAgMzAxXHQgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgMzAyXHQgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgIDMwM1x0ICB9XG4gICAzMDRcdFxuICAgMzA1XHQgIC5tZXNzYWdlLWNvbnRlbnQtYXJlYSB7XG4gICAzMDZcdCAgICB3aWR0aDogMTAwJTtcbiAgIDMwN1x0ICB9XG4gICAzMDhcdH1cbiAgIDMwOVx0PC9zdHlsZT5cblRvdGFsIGxpbmVzIGluIGZpbGU6IDMwOVxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMUJhRFo0ZVZZcmVyQVBvRWJ4RXg2YjMifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IueOsOWcqOaIkeWwhuS/ruaUuea2iOaBr+S4reW/g+mhtemdou+8jOS9v+eUqCBgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZWAg5pa55rOV6I635Y+W55So5oi36KeG6aKR54K56LWe5raI5oGv5bm25riy5p+T77yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNmJhMzljMjgtN2NlNy00NTRlLTgxOGEtYjlhMTIyNmY1ZDJkIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUM3ZDlxMXVaZVN1M0I5cndQYnV3OUoiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCJjb25zdCBhY3RpdmVUYWIgPSByZWYoJ21lbnRpb25zJylcIiwgXCJuZXdfc3RyXCI6IFwiY29uc3QgYWN0aXZlVGFiID0gcmVmKCdsaWtlcycpIC8vIFxcdTllZDhcXHU4YmE0XFx1NjYzZVxcdTc5M2FcXHU3MGI5XFx1OGQ1ZVxcdTZkODhcXHU2MDZmXFx1NjgwN1xcdTdiN2VcXHU5ODc1XFxuY29uc3QgbG9hZGluZyA9IHJlZihmYWxzZSkgLy8gXFx1NTJhMFxcdThmN2RcXHU3MmI2XFx1NjAwMVwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogNzIsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogNzJ9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAgNjBcdCAgICA8L2Rpdj5cbiAgICA2MVx0ICA8L2Rpdj5cbiAgICA2Mlx0PC90ZW1wbGF0ZT5cbiAgICA2M1x0XG4gICAgNjRcdDxzY3JpcHQgc2V0dXA+XG4gICAgNjVcdGltcG9ydCB7IHJlZiwgY29tcHV0ZWQsIG9uTW91bnRlZCB9IGZyb20gJ3Z1ZSdcbiAgICA2Nlx0aW1wb3J0IHsgQmVsbCB9IGZyb20gJ0BlbGVtZW50LXBsdXMvaWNvbnMtdnVlJ1xuICAgIDY3XHRpbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXG4gICAgNjhcdGltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ3Z1ZS1yb3V0ZXInXG4gICAgNjlcdGltcG9ydCB7IGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2UgfSBmcm9tICdAL2FwaS91c2VyL3VzZXJtZXNzYWdlJ1xuICAgIDcwXHRpbXBvcnQgeyBFbE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXBsdXMnXG4gICAgNzFcdGltcG9ydCBkYXlqcyBmcm9tICdkYXlqcydcbiAgICA3Mlx0XG4gICAgNzNcdGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpXG4gICAgNzRcdGNvbnN0IHRva2VuU3RvcmUgPSB1c2VUb2tlblN0b3JlKClcbiAgICA3NVx0Y29uc3QgYWN0aXZlVGFiID0gcmVmKCdtZW50aW9ucycpXG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFSQUpHdnZ2ZVJUaHc4RWRSOVFNbjNnIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiIiLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMTY0NzFmZDktOWE5NS00OTg2LTg0YzAtOTU5MDAwMzg5Mjc2IiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUVXVGJTOVl2WkFWWXFHOFVLaG1lYTgiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCJjb25zdCBsaWtlcyA9IHJlZihbXFxuICB7XFxuICAgIGlkOiAxLFxcbiAgICB1c2VybmFtZTogJ1xcdTc1MjhcXHU2MjM3QycsXFxuICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxcbiAgICB0aW1lOiAnM1xcdTVjMGZcXHU2NWY2XFx1NTI0ZCcsXFxuICAgIGNvbnRlbnQ6ICdcXHU4ZDVlXFx1NGU4NlxcdTRmNjBcXHU3Njg0XFx1ODljNlxcdTk4OTEnLFxcbiAgICBzb3VyY2U6IHtcXG4gICAgICB0aXRsZTogJ0phdmFTY3JpcHRcXHU1N2ZhXFx1Nzg0MFxcdTY1NTlcXHU3YTBiJyxcXG4gICAgICBjb250ZW50OiAnSmF2YVNjcmlwdFxcdTY2MmZcXHU3ZjUxXFx1OTg3NVxcdTVmMDBcXHU1M2QxXFx1NzY4NFxcdTU3ZmFcXHU3ODQwLi4uJ1xcbiAgICB9XFxuICB9XFxuXSlcIiwgXCJuZXdfc3RyXCI6IFwiY29uc3QgbGlrZXMgPSByZWYoW10pXCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiAxMDcsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogMTE5fV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiIifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDcxXHRpbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXG4gICAgNzJcdFxuICAgIDczXHRjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuICAgIDc0XHRjb25zdCB0b2tlblN0b3JlID0gdXNlVG9rZW5TdG9yZSgpXG4gICAgNzVcdGNvbnN0IGFjdGl2ZVRhYiA9IHJlZignbGlrZXMnKSAvLyDpu5jorqTmmL7npLrngrnotZ7mtojmga/moIfnrb7pobVcbiAgICA3Nlx0Y29uc3QgbG9hZGluZyA9IHJlZihmYWxzZSkgLy8g5Yqg6L2954q25oCBXG4gICAgNzdcdFxuICAgIDc4XHQvLyDmo4Dmn6XnlKjmiLfmmK/lkKbnmbvlvZVcbiAgICA3OVx0Y29uc3QgaXNMb2dpbiA9IHJlZighIXRva2VuU3RvcmUudG9rZW4pXG4gICAgODBcdGlmICghaXNMb2dpbi52YWx1ZSkge1xuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxQzdkOXExdVplU3UzQjlyd1BidXc5SiJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjBhOTAzZTRiLTNiN2QtNGJmMS04NDM0LTM0NTQ0YzMyNDczOCIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDFRc1BUeXhRa0NVWk5hTUhiVGFUZ29HIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiLy8gXFx1ODNjMVxcdTUzNTVcXHU1MjA3XFx1NjM2MlxcdTRlOGJcXHU0ZWY2XFxuY29uc3QgaGFuZGxlTWVudVNlbGVjdCA9IChrZXkpID0+IHtcXG4gIGFjdGl2ZVRhYi52YWx1ZSA9IGtleVxcbn1cIiwgXCJuZXdfc3RyXCI6IFwiLy8gXFx1NjgzY1xcdTVmMGZcXHU1MzE2XFx1NjVlNVxcdTY3MWZcXG5jb25zdCBmb3JtYXREYXRlID0gKGRhdGVTdHJpbmcpID0+IHtcXG4gIGNvbnN0IGRhdGUgPSBkYXlqcyhkYXRlU3RyaW5nKVxcbiAgY29uc3Qgbm93ID0gZGF5anMoKVxcbiAgXFxuICAvLyBcXHU1OTgyXFx1Njc5Y1xcdTY2MmZcXHU0ZWNhXFx1NTkyOVxcbiAgaWYgKGRhdGUuZm9ybWF0KCdZWVlZLU1NLUREJykgPT09IG5vdy5mb3JtYXQoJ1lZWVktTU0tREQnKSkge1xcbiAgICByZXR1cm4gZGF0ZS5mb3JtYXQoJ0hIOm1tJylcXG4gIH1cXG4gIC8vIFxcdTU5ODJcXHU2NzljXFx1NjYyZlxcdTY2MjhcXHU1OTI5XFxuICBlbHNlIGlmIChkYXRlLmZvcm1hdCgnWVlZWS1NTS1ERCcpID09PSBub3cuc3VidHJhY3QoMSwgJ2RheScpLmZvcm1hdCgnWVlZWS1NTS1ERCcpKSB7XFxuICAgIHJldHVybiAnXFx1NjYyOFxcdTU5MjkgJyArIGRhdGUuZm9ybWF0KCdISDptbScpXFxuICB9XFxuICAvLyBcXHU1OTgyXFx1Njc5Y1xcdTY2MmZcXHU0ZWNhXFx1NWU3NFxcbiAgZWxzZSBpZiAoZGF0ZS5mb3JtYXQoJ1lZWVknKSA9PT0gbm93LmZvcm1hdCgnWVlZWScpKSB7XFxuICAgIHJldHVybiBkYXRlLmZvcm1hdCgnTU0tREQgSEg6bW0nKVxcbiAgfVxcbiAgLy8gXFx1NTE3NlxcdTRlZDZcXHU2MGM1XFx1NTFiNVxcbiAgZWxzZSB7XFxuICAgIHJldHVybiBkYXRlLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbScpXFxuICB9XFxufVxcblxcbi8vIFxcdTgzYjdcXHU1M2Q2XFx1NzUyOFxcdTYyMzdcXHU4OWM2XFx1OTg5MVxcdTcwYjlcXHU4ZDVlXFx1NmQ4OFxcdTYwNmZcXG5jb25zdCBnZXRVc2VyTWVzc2FnZXMgPSBhc3luYyAoKSA9PiB7XFxuICBpZiAoIWlzTG9naW4udmFsdWUpIHJldHVyblxcbiAgXFxuICBsb2FkaW5nLnZhbHVlID0gdHJ1ZVxcbiAgdHJ5IHtcXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZSgpXFxuICAgIGlmIChyZXMuY29kZSA9PT0gMjAwICYmIHJlcy5kYXRhKSB7XFxuICAgICAgLy8gXFx1NTkwNFxcdTc0MDZcXHU3MGI5XFx1OGQ1ZVxcdTZkODhcXHU2MDZmXFx1NjU3MFxcdTYzNmVcXG4gICAgICBsaWtlcy52YWx1ZSA9IHJlcy5kYXRhLm1hcChpdGVtID0+ICh7XFxuICAgICAgICBpZDogaXRlbS5pZCxcXG4gICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxcbiAgICAgICAgYXZhdGFyOiBpdGVtLnVzZXJQaWMsXFxuICAgICAgICB0aW1lOiBmb3JtYXREYXRlKGl0ZW0ubGlrZWRBdCksXFxuICAgICAgICBjb250ZW50OiAnXFx1OGQ1ZVxcdTRlODZcXHU0ZjYwXFx1NzY4NFxcdTg5YzZcXHU5ODkxJyxcXG4gICAgICAgIHZpZGVvSWQ6IGl0ZW0udmlkZW9JZCxcXG4gICAgICAgIHNvdXJjZToge1xcbiAgICAgICAgICB0aXRsZTogaXRlbS50aXRsZSxcXG4gICAgICAgICAgY29udGVudDogJycsXFxuICAgICAgICAgIGNvdmVyOiBpdGVtLmNvdmVyXFxuICAgICAgICB9XFxuICAgICAgfSkpXFxuICAgIH0gZWxzZSB7XFxuICAgICAgRWxNZXNzYWdlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFx1NTkzMVxcdThkMjVcXHVmZjFhJyArIHJlcy5tZXNzYWdlKVxcbiAgICB9XFxuICB9IGNhdGNoIChlcnJvcikge1xcbiAgICBjb25zb2xlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFx1NTFmYVxcdTk1MTlcXHVmZjFhJywgZXJyb3IpXFxuICAgIEVsTWVzc2FnZS5lcnJvcignXFx1ODNiN1xcdTUzZDZcXHU2ZDg4XFx1NjA2ZlxcdTUxZmFcXHU5NTE5XFx1ZmYwY1xcdThiZjdcXHU3YTBkXFx1NTQwZVxcdTkxY2RcXHU4YmQ1JylcXG4gIH0gZmluYWxseSB7XFxuICAgIGxvYWRpbmcudmFsdWUgPSBmYWxzZVxcbiAgfVxcbn1cXG5cXG4vLyBcXHU4ZGYzXFx1OGY2Y1xcdTUyMzBcXHU4OWM2XFx1OTg5MVxcdThiZTZcXHU2MGM1XFx1OTg3NVxcbmNvbnN0IGdvVG9WaWRlbyA9ICh2aWRlb0lkKSA9PiB7XFxuICByb3V0ZXIucHVzaChgL3ZpZGVvLyR7dmlkZW9JZH1gKVxcbn1cXG5cXG4vLyBcXHU3ZWM0XFx1NGVmNlxcdTYzMDJcXHU4ZjdkXFx1NjVmNlxcdTgzYjdcXHU1M2Q2XFx1NmQ4OFxcdTYwNmZcXG5vbk1vdW50ZWQoKCkgPT4ge1xcbiAgaWYgKGlzTG9naW4udmFsdWUpIHtcXG4gICAgZ2V0VXNlck1lc3NhZ2VzKClcXG4gIH1cXG59KVxcblxcbi8vIFxcdTgzYzFcXHU1MzU1XFx1NTIwN1xcdTYzNjJcXHU0ZThiXFx1NGVmNlxcbmNvbnN0IGhhbmRsZU1lbnVTZWxlY3QgPSAoa2V5KSA9PiB7XFxuICBhY3RpdmVUYWIudmFsdWUgPSBrZXlcXG59XCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiAxNzYsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogMTc4fV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiIifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTA3XHQgICAgfVxuICAgMTA4XHQgIH1cbiAgIDEwOVx0XSlcbiAgIDExMFx0XG4gICAxMTFcdGNvbnN0IGxpa2VzID0gcmVmKFtdKVxuICAgMTEyXHRcbiAgIDExM1x0Y29uc3QgcmVwbGllcyA9IHJlZihbXG4gICAxMTRcdCAge1xuICAgMTE1XHQgICAgaWQ6IDEsXG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFFV1RiUzlZdlpBVllxRzhVS2htZWE4In19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiIiLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMzA5NTIxYTktOTI4YS00NWFhLTgyMjktOTFkNjMwYTY4YzY5IiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMVJweFBiendwUm5IWDR3NTltd0U2amYiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwidmlld19yYW5nZVwiOiBbMTcwLCAxODBdfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5oiR6ZyA6KaB5p+l55yL5q2j56Gu55qE6KGM5Y+377yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJGYWlsZWQgdG8gZWRpdCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuIFNlZSBiZWxvdyBmb3IgZGV0YWlscy5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcbk5vIHJlcGxhY2VtZW50IHdhcyBwZXJmb3JtZWQsIG9sZFN0ciBkaWQgbm90IGFwcGVhciB2ZXJiYXRpbSBpbiBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5UaGUgY29udGVudCBpbiB0aGUgc3BlY2lmaWVkIHJlZ2lvbiBpczpcbiAgIDE3Mlx0XG4gICAxNzNcdDxzdHlsZSBzY29wZWQ+XG4gICAxNzRcdC5tZXNzYWdlLWNlbnRlciB7XG4gICAxNzVcdCAgZGlzcGxheTogZmxleDtcbiAgIDE3Nlx0ICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgIDE3N1x0ICBtYXJnaW46IDgwcHggYXV0byA0MHB4O1xuICAgMTc4XHQgIHBhZGRpbmc6IDAgMjBweDtcbiAgIDE3OVx0fVxuICAgMTgwXHRcbiAgIDE4MVx0Lm1lc3NhZ2Utc2lkZWJhciB7XG4gICAxODJcdCAgd2lkdGg6IDIwMHB4O1xuXG5EaWZmIGJldHdlZW4gb2xkU3RyIGFuZCB0aGUgc3BlY2lmaWVkIHJlZ2lvbiBpczpcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi0tLSBvbGRTdHJcbisrKyByZWdpb25Db250ZW50XG5AQCAtMSw0ICsxLDMgQEBcbi0vLyDoj4HljZXliIfmjaLkuovku7Zcbi1jb25zdCBoYW5kbGVNZW51U2VsZWN0ID0gKGtleSkgPT4ge1xuLSAgYWN0aXZlVGFiLnZhbHVlID0ga2V5XG4tfVxuKyAgbWF4LXdpZHRoOiAxMjAwcHg7XG4rICBtYXJnaW46IDgwcHggYXV0byA0MHB4O1xuKyAgcGFkZGluZzogMCAyMHB4O1xuXG5cbkZpeCBmYWlsZWQgc3RyX3JlcGxhY2VfZW50cmllcyBhY2NvcmRpbmdseSBhbmQgdHJ5IGFnYWluLlxuIiwiaXNfZXJyb3IiOnRydWUsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxUXNQVHl4UWtDVVpOYU1IYlRhVGdvRyJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5oiR6ZyA6KaB5p+l55yL5q2j56Gu55qE6KGM5Y+377yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiZTIxM2EwYWUtMjY0NC00Mzk5LTgwMzgtYTQ4NTNkYTU2NWMyIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUVwZlh6Zjc1WHhaemJ6QkxYTmhHZGQiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwidmlld19yYW5nZVwiOiBbMTYwLCAxNzBdfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWU6XG4gICAxNzBcdH1cbiAgIDE3MVx0PC9zY3JpcHQ+XG4gICAxNzJcdFxuICAgMTczXHQ8c3R5bGUgc2NvcGVkPlxuICAgMTc0XHQubWVzc2FnZS1jZW50ZXIge1xuICAgMTc1XHQgIGRpc3BsYXk6IGZsZXg7XG4gICAxNzZcdCAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAxNzdcdCAgbWFyZ2luOiA4MHB4IGF1dG8gNDBweDtcbiAgIDE3OFx0ICBwYWRkaW5nOiAwIDIwcHg7XG4gICAxNzlcdH1cbiAgIDE4MFx0XG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiAzMDFcbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFScHhQYnp3cFJuSFg0dzU5bXdFNmpmIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiIiLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiYzBhNzE5NWQtODY5MS00ZmE1LWE3OTAtNjAwYWRjYjEwMGU4IiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMVdyMnpjeXdRVEdVaXdWUnU3OFdBUEQiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIvLyBcXHU4M2MxXFx1NTM1NVxcdTUyMDdcXHU2MzYyXFx1NGU4YlxcdTRlZjZcXG5jb25zdCBoYW5kbGVNZW51U2VsZWN0ID0gKGtleSkgPT4ge1xcbiAgYWN0aXZlVGFiLnZhbHVlID0ga2V5XFxufVwiLCBcIm5ld19zdHJcIjogXCIvLyBcXHU2ODNjXFx1NWYwZlxcdTUzMTZcXHU2NWU1XFx1NjcxZlxcbmNvbnN0IGZvcm1hdERhdGUgPSAoZGF0ZVN0cmluZykgPT4ge1xcbiAgY29uc3QgZGF0ZSA9IGRheWpzKGRhdGVTdHJpbmcpXFxuICBjb25zdCBub3cgPSBkYXlqcygpXFxuICBcXG4gIC8vIFxcdTU5ODJcXHU2NzljXFx1NjYyZlxcdTRlY2FcXHU1OTI5XFxuICBpZiAoZGF0ZS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PT0gbm93LmZvcm1hdCgnWVlZWS1NTS1ERCcpKSB7XFxuICAgIHJldHVybiBkYXRlLmZvcm1hdCgnSEg6bW0nKVxcbiAgfVxcbiAgLy8gXFx1NTk4MlxcdTY3OWNcXHU2NjJmXFx1NjYyOFxcdTU5MjlcXG4gIGVsc2UgaWYgKGRhdGUuZm9ybWF0KCdZWVlZLU1NLUREJykgPT09IG5vdy5zdWJ0cmFjdCgxLCAnZGF5JykuZm9ybWF0KCdZWVlZLU1NLUREJykpIHtcXG4gICAgcmV0dXJuICdcXHU2NjI4XFx1NTkyOSAnICsgZGF0ZS5mb3JtYXQoJ0hIOm1tJylcXG4gIH1cXG4gIC8vIFxcdTU5ODJcXHU2NzljXFx1NjYyZlxcdTRlY2FcXHU1ZTc0XFxuICBlbHNlIGlmIChkYXRlLmZvcm1hdCgnWVlZWScpID09PSBub3cuZm9ybWF0KCdZWVlZJykpIHtcXG4gICAgcmV0dXJuIGRhdGUuZm9ybWF0KCdNTS1ERCBISDptbScpXFxuICB9XFxuICAvLyBcXHU1MTc2XFx1NGVkNlxcdTYwYzVcXHU1MWI1XFxuICBlbHNlIHtcXG4gICAgcmV0dXJuIGRhdGUuZm9ybWF0KCdZWVlZLU1NLUREIEhIOm1tJylcXG4gIH1cXG59XFxuXFxuLy8gXFx1ODNiN1xcdTUzZDZcXHU3NTI4XFx1NjIzN1xcdTg5YzZcXHU5ODkxXFx1NzBiOVxcdThkNWVcXHU2ZDg4XFx1NjA2ZlxcbmNvbnN0IGdldFVzZXJNZXNzYWdlcyA9IGFzeW5jICgpID0+IHtcXG4gIGlmICghaXNMb2dpbi52YWx1ZSkgcmV0dXJuXFxuICBcXG4gIGxvYWRpbmcudmFsdWUgPSB0cnVlXFxuICB0cnkge1xcbiAgICBjb25zdCByZXMgPSBhd2FpdCBnZXRVc2VyTWVzc2FnZUxpc3RTZXJ2aWNlKClcXG4gICAgaWYgKHJlcy5jb2RlID09PSAyMDAgJiYgcmVzLmRhdGEpIHtcXG4gICAgICAvLyBcXHU1OTA0XFx1NzQwNlxcdTcwYjlcXHU4ZDVlXFx1NmQ4OFxcdTYwNmZcXHU2NTcwXFx1NjM2ZVxcbiAgICAgIGxpa2VzLnZhbHVlID0gcmVzLmRhdGEubWFwKGl0ZW0gPT4gKHtcXG4gICAgICAgIGlkOiBpdGVtLmlkLFxcbiAgICAgICAgdXNlcm5hbWU6IGl0ZW0ubmlja25hbWUsXFxuICAgICAgICBhdmF0YXI6IGl0ZW0udXNlclBpYyxcXG4gICAgICAgIHRpbWU6IGZvcm1hdERhdGUoaXRlbS5saWtlZEF0KSxcXG4gICAgICAgIGNvbnRlbnQ6ICdcXHU4ZDVlXFx1NGU4NlxcdTRmNjBcXHU3Njg0XFx1ODljNlxcdTk4OTEnLFxcbiAgICAgICAgdmlkZW9JZDogaXRlbS52aWRlb0lkLFxcbiAgICAgICAgc291cmNlOiB7XFxuICAgICAgICAgIHRpdGxlOiBpdGVtLnRpdGxlLFxcbiAgICAgICAgICBjb250ZW50OiAnJyxcXG4gICAgICAgICAgY292ZXI6IGl0ZW0uY292ZXJcXG4gICAgICAgIH1cXG4gICAgICB9KSlcXG4gICAgfSBlbHNlIHtcXG4gICAgICBFbE1lc3NhZ2UuZXJyb3IoJ1xcdTgzYjdcXHU1M2Q2XFx1NmQ4OFxcdTYwNmZcXHU1OTMxXFx1OGQyNVxcdWZmMWEnICsgcmVzLm1lc3NhZ2UpXFxuICAgIH1cXG4gIH0gY2F0Y2ggKGVycm9yKSB7XFxuICAgIGNvbnNvbGUuZXJyb3IoJ1xcdTgzYjdcXHU1M2Q2XFx1NmQ4OFxcdTYwNmZcXHU1MWZhXFx1OTUxOVxcdWZmMWEnLCBlcnJvcilcXG4gICAgRWxNZXNzYWdlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFx1NTFmYVxcdTk1MTlcXHVmZjBjXFx1OGJmN1xcdTdhMGRcXHU1NDBlXFx1OTFjZFxcdThiZDUnKVxcbiAgfSBmaW5hbGx5IHtcXG4gICAgbG9hZGluZy52YWx1ZSA9IGZhbHNlXFxuICB9XFxufVxcblxcbi8vIFxcdThkZjNcXHU4ZjZjXFx1NTIzMFxcdTg5YzZcXHU5ODkxXFx1OGJlNlxcdTYwYzVcXHU5ODc1XFxuY29uc3QgZ29Ub1ZpZGVvID0gKHZpZGVvSWQpID0+IHtcXG4gIHJvdXRlci5wdXNoKGAvdmlkZW8vJHt2aWRlb0lkfWApXFxufVxcblxcbi8vIFxcdTdlYzRcXHU0ZWY2XFx1NjMwMlxcdThmN2RcXHU2NWY2XFx1ODNiN1xcdTUzZDZcXHU2ZDg4XFx1NjA2Zlxcbm9uTW91bnRlZCgoKSA9PiB7XFxuICBpZiAoaXNMb2dpbi52YWx1ZSkge1xcbiAgICBnZXRVc2VyTWVzc2FnZXMoKVxcbiAgfVxcbn0pXFxuXFxuLy8gXFx1ODNjMVxcdTUzNTVcXHU1MjA3XFx1NjM2MlxcdTRlOGJcXHU0ZWY2XFxuY29uc3QgaGFuZGxlTWVudVNlbGVjdCA9IChrZXkpID0+IHtcXG4gIGFjdGl2ZVRhYi52YWx1ZSA9IGtleVxcbn1cIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDE2NywgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiAxNzB9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IueOsOWcqOaIkeWwhua3u+WKoOiOt+WPlua2iOaBr+eahOWKn+iDve+8mlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWU6XG4gICAxNjBcdCAgICBjYXNlICdzeXN0ZW0nOlxuICAgMTYxXHQgICAgICByZXR1cm4gc3lzdGVtTm90aWNlcy52YWx1ZVxuICAgMTYyXHQgICAgZGVmYXVsdDpcbiAgIDE2M1x0ICAgICAgcmV0dXJuIFtdXG4gICAxNjRcdCAgfVxuICAgMTY1XHR9KVxuICAgMTY2XHRcbiAgIDE2N1x0Ly8g6I+c5Y2V5YiH5o2i5LqL5Lu2XG4gICAxNjhcdGNvbnN0IGhhbmRsZU1lbnVTZWxlY3QgPSAoa2V5KSA9PiB7XG4gICAxNjlcdCAgYWN0aXZlVGFiLnZhbHVlID0ga2V5XG4gICAxNzBcdH1cblRvdGFsIGxpbmVzIGluIGZpbGU6IDMwMVxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMUVwZlh6Zjc1WHhaemJ6QkxYTmhHZGQifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IueOsOWcqOaIkeWwhua3u+WKoOiOt+WPlua2iOaBr+eahOWKn+iDve+8mlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6ImVhZGU1MmRhLTgyYzAtNDc5Ny1hMGRmLWQxYzQyODM5MDFlNCIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDE0QTk3SG5jOUMyM3JHR1J6R3ZGVExDIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiLy8gXFx1ODNkY1xcdTUzNTVcXHU1MjA3XFx1NjM2MlxcdTRlOGJcXHU0ZWY2XFxuY29uc3QgaGFuZGxlTWVudVNlbGVjdCA9IChrZXkpID0+IHtcXG4gIGFjdGl2ZVRhYi52YWx1ZSA9IGtleVxcbn1cIiwgXCJuZXdfc3RyXCI6IFwiLy8gXFx1NjgzY1xcdTVmMGZcXHU1MzE2XFx1NjVlNVxcdTY3MWZcXG5jb25zdCBmb3JtYXREYXRlID0gKGRhdGVTdHJpbmcpID0+IHtcXG4gIGNvbnN0IGRhdGUgPSBkYXlqcyhkYXRlU3RyaW5nKVxcbiAgY29uc3Qgbm93ID0gZGF5anMoKVxcbiAgXFxuICAvLyBcXHU1OTgyXFx1Njc5Y1xcdTY2MmZcXHU0ZWNhXFx1NTkyOVxcbiAgaWYgKGRhdGUuZm9ybWF0KCdZWVlZLU1NLUREJykgPT09IG5vdy5mb3JtYXQoJ1lZWVktTU0tREQnKSkge1xcbiAgICByZXR1cm4gZGF0ZS5mb3JtYXQoJ0hIOm1tJylcXG4gIH1cXG4gIC8vIFxcdTU5ODJcXHU2NzljXFx1NjYyZlxcdTY2MjhcXHU1OTI5XFxuICBlbHNlIGlmIChkYXRlLmZvcm1hdCgnWVlZWS1NTS1ERCcpID09PSBub3cuc3VidHJhY3QoMSwgJ2RheScpLmZvcm1hdCgnWVlZWS1NTS1ERCcpKSB7XFxuICAgIHJldHVybiAnXFx1NjYyOFxcdTU5MjkgJyArIGRhdGUuZm9ybWF0KCdISDptbScpXFxuICB9XFxuICAvLyBcXHU1OTgyXFx1Njc5Y1xcdTY2MmZcXHU0ZWNhXFx1NWU3NFxcbiAgZWxzZSBpZiAoZGF0ZS5mb3JtYXQoJ1lZWVknKSA9PT0gbm93LmZvcm1hdCgnWVlZWScpKSB7XFxuICAgIHJldHVybiBkYXRlLmZvcm1hdCgnTU0tREQgSEg6bW0nKVxcbiAgfVxcbiAgLy8gXFx1NTE3NlxcdTRlZDZcXHU2MGM1XFx1NTFiNVxcbiAgZWxzZSB7XFxuICAgIHJldHVybiBkYXRlLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbScpXFxuICB9XFxufVxcblxcbi8vIFxcdTgzYjdcXHU1M2Q2XFx1NzUyOFxcdTYyMzdcXHU4OWM2XFx1OTg5MVxcdTcwYjlcXHU4ZDVlXFx1NmQ4OFxcdTYwNmZcXG5jb25zdCBnZXRVc2VyTWVzc2FnZXMgPSBhc3luYyAoKSA9PiB7XFxuICBpZiAoIWlzTG9naW4udmFsdWUpIHJldHVyblxcbiAgXFxuICBsb2FkaW5nLnZhbHVlID0gdHJ1ZVxcbiAgdHJ5IHtcXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZSgpXFxuICAgIGlmIChyZXMuY29kZSA9PT0gMjAwICYmIHJlcy5kYXRhKSB7XFxuICAgICAgLy8gXFx1NTkwNFxcdTc0MDZcXHU3MGI5XFx1OGQ1ZVxcdTZkODhcXHU2MDZmXFx1NjU3MFxcdTYzNmVcXG4gICAgICBsaWtlcy52YWx1ZSA9IHJlcy5kYXRhLm1hcChpdGVtID0+ICh7XFxuICAgICAgICBpZDogaXRlbS5pZCxcXG4gICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxcbiAgICAgICAgYXZhdGFyOiBpdGVtLnVzZXJQaWMsXFxuICAgICAgICB0aW1lOiBmb3JtYXREYXRlKGl0ZW0ubGlrZWRBdCksXFxuICAgICAgICBjb250ZW50OiAnXFx1OGQ1ZVxcdTRlODZcXHU0ZjYwXFx1NzY4NFxcdTg5YzZcXHU5ODkxJyxcXG4gICAgICAgIHZpZGVvSWQ6IGl0ZW0udmlkZW9JZCxcXG4gICAgICAgIHNvdXJjZToge1xcbiAgICAgICAgICB0aXRsZTogaXRlbS50aXRsZSxcXG4gICAgICAgICAgY29udGVudDogJycsXFxuICAgICAgICAgIGNvdmVyOiBpdGVtLmNvdmVyXFxuICAgICAgICB9XFxuICAgICAgfSkpXFxuICAgIH0gZWxzZSB7XFxuICAgICAgRWxNZXNzYWdlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFx1NTkzMVxcdThkMjVcXHVmZjFhJyArIHJlcy5tZXNzYWdlKVxcbiAgICB9XFxuICB9IGNhdGNoIChlcnJvcikge1xcbiAgICBjb25zb2xlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFx1NTFmYVxcdTk1MTlcXHVmZjFhJywgZXJyb3IpXFxuICAgIEVsTWVzc2FnZS5lcnJvcignXFx1ODNiN1xcdTUzZDZcXHU2ZDg4XFx1NjA2ZlxcdTUxZmFcXHU5NTE5XFx1ZmYwY1xcdThiZjdcXHU3YTBkXFx1NTQwZVxcdTkxY2RcXHU4YmQ1JylcXG4gIH0gZmluYWxseSB7XFxuICAgIGxvYWRpbmcudmFsdWUgPSBmYWxzZVxcbiAgfVxcbn1cXG5cXG4vLyBcXHU4ZGYzXFx1OGY2Y1xcdTUyMzBcXHU4OWM2XFx1OTg5MVxcdThiZTZcXHU2MGM1XFx1OTg3NVxcbmNvbnN0IGdvVG9WaWRlbyA9ICh2aWRlb0lkKSA9PiB7XFxuICByb3V0ZXIucHVzaChgL3ZpZGVvLyR7dmlkZW9JZH1gKVxcbn1cXG5cXG4vLyBcXHU3ZWM0XFx1NGVmNlxcdTYzMDJcXHU4ZjdkXFx1NjVmNlxcdTgzYjdcXHU1M2Q2XFx1NmQ4OFxcdTYwNmZcXG5vbk1vdW50ZWQoKCkgPT4ge1xcbiAgaWYgKGlzTG9naW4udmFsdWUpIHtcXG4gICAgZ2V0VXNlck1lc3NhZ2VzKClcXG4gIH1cXG59KVxcblxcbi8vIFxcdTgzZGNcXHU1MzU1XFx1NTIwN1xcdTYzNjJcXHU0ZThiXFx1NGVmNlxcbmNvbnN0IGhhbmRsZU1lbnVTZWxlY3QgPSAoa2V5KSA9PiB7XFxuICBhY3RpdmVUYWIudmFsdWUgPSBrZXlcXG59XCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiAxNjcsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogMTcwfV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLmiJHnnIvliLDkuobpl67popjvvIzorqnmiJHkv67mraPvvJpcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkZhaWxlZCB0byBlZGl0IHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS4gU2VlIGJlbG93IGZvciBkZXRhaWxzLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuTm8gcmVwbGFjZW1lbnQgd2FzIHBlcmZvcm1lZCwgb2xkU3RyIGRpZCBub3QgYXBwZWFyIHZlcmJhdGltIGluIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblRoZSBjb250ZW50IGluIHRoZSBzcGVjaWZpZWQgcmVnaW9uIGlzOlxuICAgMTYzXHQgICAgICByZXR1cm4gW11cbiAgIDE2NFx0ICB9XG4gICAxNjVcdH0pXG4gICAxNjZcdFxuICAgMTY3XHQvLyDoj5zljZXliIfmjaLkuovku7ZcbiAgIDE2OFx0Y29uc3QgaGFuZGxlTWVudVNlbGVjdCA9IChrZXkpID0+IHtcbiAgIDE2OVx0ICBhY3RpdmVUYWIudmFsdWUgPSBrZXlcbiAgIDE3MFx0fVxuICAgMTcxXHQ8L3NjcmlwdD5cbiAgIDE3Mlx0XG4gICAxNzNcdDxzdHlsZSBzY29wZWQ+XG4gICAxNzRcdC5tZXNzYWdlLWNlbnRlciB7XG5cbkRpZmYgYmV0d2VlbiBvbGRTdHIgYW5kIHRoZSBzcGVjaWZpZWQgcmVnaW9uIGlzOlxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLS0tIG9sZFN0clxuKysrIHJlZ2lvbkNvbnRlbnRcbkBAIC0xLDQgKzEsNCBAQFxuLS8vIOiPgeWNleWIh+aNouS6i+S7tlxuKy8vIOiPnOWNleWIh+aNouS6i+S7tlxuIGNvbnN0IGhhbmRsZU1lbnVTZWxlY3QgPSAoa2V5KSA9PiB7XG4gICBhY3RpdmVUYWIudmFsdWUgPSBrZXlcbiB9XG5cblxuRml4IGZhaWxlZCBzdHJfcmVwbGFjZV9lbnRyaWVzIGFjY29yZGluZ2x5IGFuZCB0cnkgYWdhaW4uXG4iLCJpc19lcnJvciI6dHJ1ZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFXcjJ6Y3l3UVRHVWl3VlJ1NzhXQVBEIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmiJHnnIvliLDkuobpl67popjvvIzorqnmiJHkv67mraPvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJhNzNmNWE2NS0wNzdkLTQ0YTYtOGJjZS02NTlkY2U1ZWFlMDYiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxRG5yR3lDd0VoRnY5cEVtcXdXZ2Y1SyIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIiAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2Utc291cmNlXFxcIiB2LWlmPVxcXCJtZXNzYWdlLnNvdXJjZVxcXCI+XFxuICAgICAgICAgICAgICA8ZWwtY2FyZCBzaGFkb3c9XFxcImhvdmVyXFxcIiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2UtY2FyZFxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS10aXRsZVxcXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic291cmNlLWNvbnRlbnRcXFwiPnt7IG1lc3NhZ2Uuc291cmNlLmNvbnRlbnQgfX08L2Rpdj5cXG4gICAgICAgICAgICAgIDwvZWwtY2FyZD5cXG4gICAgICAgICAgICA8L2Rpdj5cIiwgXCJuZXdfc3RyXCI6IFwiICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2VcXFwiIHYtaWY9XFxcIm1lc3NhZ2Uuc291cmNlXFxcIiBAY2xpY2s9XFxcIm1lc3NhZ2UudmlkZW9JZCAmJiBnb1RvVmlkZW8obWVzc2FnZS52aWRlb0lkKVxcXCI+XFxuICAgICAgICAgICAgICA8ZWwtY2FyZCBzaGFkb3c9XFxcImhvdmVyXFxcIiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2UtY2FyZFxcXCIgOmNsYXNzPVxcXCJ7ICdjbGlja2FibGUnOiBtZXNzYWdlLnZpZGVvSWQgfVxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1jb250ZW50LXdyYXBwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1pbWFnZVxcXCIgdi1pZj1cXFwibWVzc2FnZS5zb3VyY2UuY292ZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGltZyA6c3JjPVxcXCJtZXNzYWdlLnNvdXJjZS5jb3ZlclxcXCIgYWx0PVxcXCJcXHU4OWM2XFx1OTg5MVxcdTVjMDFcXHU5NzYyXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS10ZXh0XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS10aXRsZVxcXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1jb250ZW50XFxcIiB2LWlmPVxcXCJtZXNzYWdlLnNvdXJjZS5jb250ZW50XFxcIj57eyBtZXNzYWdlLnNvdXJjZS5jb250ZW50IH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgPC9lbC1jYXJkPlxcbiAgICAgICAgICAgIDwvZGl2PlwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogNTAsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogNTV9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IueOsOWcqOaIkeS7rOmcgOimgeS/ruaUuea2iOaBr+mhueeahOaooeadv++8jOS7peS+v+iDveWkn+eCueWHu+i3s+i9rOWIsOinhumikeivpuaDhemhte+8jOW5tuaYvuekuuinhumikeWwgemdou+8mlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDE2M1x0ICAgICAgcmV0dXJuIFtdXG4gICAxNjRcdCAgfVxuICAgMTY1XHR9KVxuICAgMTY2XHRcbiAgIDE2N1x0Ly8g5qC85byP5YyW5pel5pyfXG4gICAxNjhcdGNvbnN0IGZvcm1hdERhdGUgPSAoZGF0ZVN0cmluZykgPT4ge1xuICAgMTY5XHQgIGNvbnN0IGRhdGUgPSBkYXlqcyhkYXRlU3RyaW5nKVxuICAgMTcwXHQgIGNvbnN0IG5vdyA9IGRheWpzKClcbiAgIDE3MVx0XG4gICAxNzJcdCAgLy8g5aaC5p6c5piv5LuK5aSpXG4gICAxNzNcdCAgaWYgKGRhdGUuZm9ybWF0KCdZWVlZLU1NLUREJykgPT09IG5vdy5mb3JtYXQoJ1lZWVktTU0tREQnKSkge1xuICAgMTc0XHQgICAgcmV0dXJuIGRhdGUuZm9ybWF0KCdISDptbScpXG4gICAxNzVcdCAgfVxuICAgMTc2XHQgIC8vIOWmguaenOaYr+aYqOWkqVxuICAgMTc3XHQgIGVsc2UgaWYgKGRhdGUuZm9ybWF0KCdZWVlZLU1NLUREJykgPT09IG5vdy5zdWJ0cmFjdCgxLCAnZGF5JykuZm9ybWF0KCdZWVlZLU1NLUREJykpIHtcbiAgIDE3OFx0ICAgIHJldHVybiAn5pio5aSpICcgKyBkYXRlLmZvcm1hdCgnSEg6bW0nKVxuICAgMTc5XHQgIH1cbiAgIDE4MFx0ICAvLyDlpoLmnpzmmK/ku4rlubRcbiAgIDE4MVx0ICBlbHNlIGlmIChkYXRlLmZvcm1hdCgnWVlZWScpID09PSBub3cuZm9ybWF0KCdZWVlZJykpIHtcbiAgIDE4Mlx0ICAgIHJldHVybiBkYXRlLmZvcm1hdCgnTU0tREQgSEg6bW0nKVxuICAgMTgzXHQgIH1cbiAgIDE4NFx0ICAvLyDlhbbku5bmg4XlhrVcbiAgIDE4NVx0ICBlbHNlIHtcbiAgIDE4Nlx0ICAgIHJldHVybiBkYXRlLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbScpXG4gICAxODdcdCAgfVxuICAgMTg4XHR9XG4gICAxODlcdFxuICAgMTkwXHQvLyDojrflj5bnlKjmiLfop4bpopHngrnotZ7mtojmga9cbiAgIDE5MVx0Y29uc3QgZ2V0VXNlck1lc3NhZ2VzID0gYXN5bmMgKCkgPT4ge1xuICAgMTkyXHQgIGlmICghaXNMb2dpbi52YWx1ZSkgcmV0dXJuXG4gICAxOTNcdFxuICAgMTk0XHQgIGxvYWRpbmcudmFsdWUgPSB0cnVlXG4gICAxOTVcdCAgdHJ5IHtcbiAgIDE5Nlx0ICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2UoKVxuICAgMTk3XHQgICAgaWYgKHJlcy5jb2RlID09PSAyMDAgJiYgcmVzLmRhdGEpIHtcbiAgIDE5OFx0ICAgICAgLy8g5aSE55CG54K56LWe5raI5oGv5pWw5o2uXG4gICAxOTlcdCAgICAgIGxpa2VzLnZhbHVlID0gcmVzLmRhdGEubWFwKGl0ZW0gPT4gKHtcbiAgIDIwMFx0ICAgICAgICBpZDogaXRlbS5pZCxcbiAgIDIwMVx0ICAgICAgICB1c2VybmFtZTogaXRlbS5uaWNrbmFtZSxcbiAgIDIwMlx0ICAgICAgICBhdmF0YXI6IGl0ZW0udXNlclBpYyxcbiAgIDIwM1x0ICAgICAgICB0aW1lOiBmb3JtYXREYXRlKGl0ZW0ubGlrZWRBdCksXG4gICAyMDRcdCAgICAgICAgY29udGVudDogJ+i1nuS6huS9oOeahOinhumikScsXG4gICAyMDVcdCAgICAgICAgdmlkZW9JZDogaXRlbS52aWRlb0lkLFxuICAgMjA2XHQgICAgICAgIHNvdXJjZToge1xuICAgMjA3XHQgICAgICAgICAgdGl0bGU6IGl0ZW0udGl0bGUsXG4gICAyMDhcdCAgICAgICAgICBjb250ZW50OiAnJyxcbiAgIDIwOVx0ICAgICAgICAgIGNvdmVyOiBpdGVtLmNvdmVyXG4gICAyMTBcdCAgICAgICAgfVxuICAgMjExXHQgICAgICB9KSlcbiAgIDIxMlx0ICAgIH0gZWxzZSB7XG4gICAyMTNcdCAgICAgIEVsTWVzc2FnZS5lcnJvcign6I635Y+W5raI5oGv5aSx6LSl77yaJyArIHJlcy5tZXNzYWdlKVxuICAgMjE0XHQgICAgfVxuICAgMjE1XHQgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAyMTZcdCAgICBjb25zb2xlLmVycm9yKCfojrflj5bmtojmga/lh7rplJnvvJonLCBlcnJvcilcbiAgIDIxN1x0ICAgIEVsTWVzc2FnZS5lcnJvcign6I635Y+W5raI5oGv5Ye66ZSZ77yM6K+356iN5ZCO6YeN6K+VJylcbiAgIDIxOFx0ICB9IGZpbmFsbHkge1xuICAgMjE5XHQgICAgbG9hZGluZy52YWx1ZSA9IGZhbHNlXG4gICAyMjBcdCAgfVxuICAgMjIxXHR9XG4gICAyMjJcdFxuICAgMjIzXHQvLyDot7PovazliLDop4bpopHor6bmg4XpobVcbiAgIDIyNFx0Y29uc3QgZ29Ub1ZpZGVvID0gKHZpZGVvSWQpID0+IHtcbiAgIDIyNVx0ICByb3V0ZXIucHVzaChgL3ZpZGVvLyR7dmlkZW9JZH1gKVxuICAgMjI2XHR9XG4gICAyMjdcdFxuICAgMjI4XHQvLyDnu4Tku7bmjILovb3ml7bojrflj5bmtojmga9cbiAgIDIyOVx0b25Nb3VudGVkKCgpID0+IHtcbiAgIDIzMFx0ICBpZiAoaXNMb2dpbi52YWx1ZSkge1xuICAgMjMxXHQgICAgZ2V0VXNlck1lc3NhZ2VzKClcbiAgIDIzMlx0ICB9XG4gICAyMzNcdH0pXG4gICAyMzRcdFxuICAgMjM1XHQvLyDoj5zljZXliIfmjaLkuovku7ZcbiAgIDIzNlx0Y29uc3QgaGFuZGxlTWVudVNlbGVjdCA9IChrZXkpID0+IHtcbiAgIDIzN1x0ICBhY3RpdmVUYWIudmFsdWUgPSBrZXlcbiAgIDIzOFx0fVxuICAgMjM5XHQ8L3NjcmlwdD5cbiAgIDI0MFx0XG4gICAyNDFcdDxzdHlsZSBzY29wZWQ+XG4gICAyNDJcdC5tZXNzYWdlLWNlbnRlciB7XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDE0QTk3SG5jOUMyM3JHR1J6R3ZGVExDIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLnjrDlnKjmiJHku6zpnIDopoHkv67mlLnmtojmga/pobnnmoTmqKHmnb/vvIzku6Xkvr/og73lpJ/ngrnlh7vot7PovazliLDop4bpopHor6bmg4XpobXvvIzlubbmmL7npLrop4bpopHlsIHpnaLvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiI2OTA4MjQxOC0xYTdkLTQyNmEtODY2YS0xYjUzMGIxZmFhZGMiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxVng5Z28zTHdLQllFb1ZtZnZxSHFKdSIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIiAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtbGlzdFxcXCIgdi1pZj1cXFwiY3VycmVudE1lc3NhZ2VzLmxlbmd0aCA+IDBcXFwiPlwiLCBcIm5ld19zdHJcIjogXCIgICAgICA8ZWwtbG9hZGluZyA6dmlzaWJsZT1cXFwibG9hZGluZ1xcXCIgZnVsbHNjcmVlbiAvPlxcbiAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtbGlzdFxcXCIgdi1pZj1cXFwiY3VycmVudE1lc3NhZ2VzLmxlbmd0aCA+IDBcXFwiPlwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMzksIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogMzl9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuacgOWQju+8jOaIkeS7rOmcgOimgea3u+WKoOWKoOi9veeKtuaAgeWSjOabtOaWsOagt+W8j++8mlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICA0Nlx0ICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1lc3NhZ2UtdXNlcm5hbWVcIj57eyBtZXNzYWdlLnVzZXJuYW1lIH19PC9zcGFuPlxuICAgIDQ3XHQgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWVzc2FnZS10aW1lXCI+e3sgbWVzc2FnZS50aW1lIH19PC9zcGFuPlxuICAgIDQ4XHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA0OVx0ICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtdGV4dFwiPnt7IG1lc3NhZ2UuY29udGVudCB9fTwvZGl2PlxuICAgIDUwXHQgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1zb3VyY2VcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2VcIiBAY2xpY2s9XCJtZXNzYWdlLnZpZGVvSWQgJiYgZ29Ub1ZpZGVvKG1lc3NhZ2UudmlkZW9JZClcIj5cbiAgICA1MVx0ICAgICAgICAgICAgICA8ZWwtY2FyZCBzaGFkb3c9XCJob3ZlclwiIGNsYXNzPVwibWVzc2FnZS1zb3VyY2UtY2FyZFwiIDpjbGFzcz1cInsgJ2NsaWNrYWJsZSc6IG1lc3NhZ2UudmlkZW9JZCB9XCI+XG4gICAgNTJcdCAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWNvbnRlbnQtd3JhcHBlclwiPlxuICAgIDUzXHQgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWltYWdlXCIgdi1pZj1cIm1lc3NhZ2Uuc291cmNlLmNvdmVyXCI+XG4gICAgNTRcdCAgICAgICAgICAgICAgICAgICAgPGltZyA6c3JjPVwibWVzc2FnZS5zb3VyY2UuY292ZXJcIiBhbHQ9XCLop4bpopHlsIHpnaJcIiAvPlxuICAgIDU1XHQgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA1Nlx0ICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS10ZXh0XCI+XG4gICAgNTdcdCAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS10aXRsZVwiPnt7IG1lc3NhZ2Uuc291cmNlLnRpdGxlIH19PC9kaXY+XG4gICAgNThcdCAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS1jb250ZW50XCIgdi1pZj1cIm1lc3NhZ2Uuc291cmNlLmNvbnRlbnRcIj57eyBtZXNzYWdlLnNvdXJjZS5jb250ZW50IH19PC9kaXY+XG4gICAgNTlcdCAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgIDYwXHQgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgNjFcdCAgICAgICAgICAgICAgPC9lbC1jYXJkPlxuICAgIDYyXHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA2M1x0ICAgICAgICAgIDwvZGl2PlxuICAgIDY0XHQgICAgICAgIDwvZGl2PlxuICAgIDY1XHQgICAgICA8L2Rpdj5cbiAgICA2Nlx0ICAgICAgPGVsLWVtcHR5IHYtZWxzZSBkZXNjcmlwdGlvbj1cIuaaguaXoOa2iOaBr1wiPjwvZWwtZW1wdHk+XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFEbnJHeUN3RWhGdjlwRW1xd1dnZjVLIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmnIDlkI7vvIzmiJHku6zpnIDopoHmt7vliqDliqDovb3nirbmgIHlkozmm7TmlrDmoLflvI/vvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJjYjFmYWI5OC1lM2EyLTRmNzItYjJjMC0wNWVmYTc4MTcyN2EiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxVzZ6am9BeGZoWnZBMUpCejlRN05qVyIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIi5zb3VyY2UtY29udGVudCB7XFxuICBjb2xvcjogIzYxNjY2ZDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXG59XCIsIFwibmV3X3N0clwiOiBcIi5zb3VyY2UtY29udGVudCB7XFxuICBjb2xvcjogIzYxNjY2ZDtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXG59XFxuXFxuLnNvdXJjZS1jb250ZW50LXdyYXBwZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5zb3VyY2UtaW1hZ2Uge1xcbiAgd2lkdGg6IDEyMHB4O1xcbiAgaGVpZ2h0OiA3MHB4O1xcbiAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xcbiAgZmxleC1zaHJpbms6IDA7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbn1cXG5cXG4uc291cmNlLWltYWdlIGltZyB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIG9iamVjdC1maXQ6IGNvdmVyO1xcbn1cXG5cXG4uc291cmNlLXRleHQge1xcbiAgZmxleDogMTtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5jbGlja2FibGUge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcXG59XFxuXFxuLmNsaWNrYWJsZTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMWYyO1xcbn1cIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDI3OSwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiAyODd9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAgMzVcdCAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWhlYWRlclwiPlxuICAgIDM2XHQgICAgICAgIDxoMj7mtojmga/kuK3lv4M8L2gyPlxuICAgIDM3XHQgICAgICA8L2Rpdj5cbiAgICAzOFx0XG4gICAgMzlcdCAgICAgIDxlbC1sb2FkaW5nIDp2aXNpYmxlPVwibG9hZGluZ1wiIGZ1bGxzY3JlZW4gLz5cbiAgICA0MFx0ICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtbGlzdFwiIHYtaWY9XCJjdXJyZW50TWVzc2FnZXMubGVuZ3RoID4gMFwiPlxuICAgIDQxXHQgICAgICAgIDxkaXYgdi1mb3I9XCIobWVzc2FnZSwgaW5kZXgpIGluIGN1cnJlbnRNZXNzYWdlc1wiIDprZXk9XCJpbmRleFwiIGNsYXNzPVwibWVzc2FnZS1pdGVtXCI+XG4gICAgNDJcdCAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1hdmF0YXJcIj5cbiAgICA0M1x0ICAgICAgICAgICAgPGVsLWF2YXRhciA6c2l6ZT1cIjUwXCIgOnNyYz1cIm1lc3NhZ2UuYXZhdGFyXCI+PC9lbC1hdmF0YXI+XG4gICAgNDRcdCAgICAgICAgICA8L2Rpdj5cblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMVZ4OWdvM0x3S0JZRW9WbWZ2cUhxSnUifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJiZDEyNTcxZS1kZGQ4LTRlYmEtOTIwZC05OTczYjZiNzFiYzAiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLmiJHlt7Lnu4/lrozmiJDkuobmtojmga/kuK3lv4PpobXpnaLnmoTkv67mlLnvvIznjrDlnKjlroPlj6/ku6Xku44gQVBJIOiOt+WPlueUqOaIt+inhumikeeCuei1nua2iOaBr+W5tuWcqOmhtemdouS4iua4suafk+OAguS7peS4i+aYr+aIkeaJgOWBmueahOS/ruaUue+8mlxuXG4xLiDlr7zlhaXkuoblv4XopoHnmoTkvp3otZbvvJpcbiAgIC0gYGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2VgIOS7jiBgQC9hcGkvdXNlci91c2VybWVzc2FnZWBcbiAgIC0gYEVsTWVzc2FnZWAg5LuOIGBlbGVtZW50LXBsdXNgXG4gICAtIGBkYXlqc2Ag55So5LqO5pel5pyf5qC85byP5YyWXG4gICAtIGBvbk1vdW50ZWRgIOS7jiBWdWUg5Lit5a+85YWlXG5cbjIuIOa3u+WKoOS6huaVsOaNruWKoOi9veWKn+iDve+8mlxuICAgLSDorr7nva7pu5jorqTmmL7npLrngrnotZ7mtojmga/moIfnrb7pobVcbiAgIC0g5re75Yqg5LqG5Yqg6L2954q25oCB5o6n5Yi2XG4gICAtIOWcqOe7hOS7tuaMgui9veaXtuiHquWKqOiOt+WPlua2iOaBr+aVsOaNrlxuXG4zLiDlrp7njrDkuobml6XmnJ/moLzlvI/ljJblip/og73vvJpcbiAgIC0g5LuK5aSp55qE5raI5oGv5pi+56S65Li6IFwiSEg6bW1cIlxuICAgLSDmmKjlpKnnmoTmtojmga/mmL7npLrkuLogXCLmmKjlpKkgSEg6bW1cIlxuICAgLSDku4rlubTnmoTmtojmga/mmL7npLrkuLogXCJNTS1ERCBISDptbVwiXG4gICAtIOWFtuS7luaXtumXtOaYvuekuuS4uiBcIllZWVktTU0tREQgSEg6bW1cIlxuXG40LiDmt7vliqDkuobop4bpopHot7Povazlip/og73vvJpcbiAgIC0g54K55Ye75raI5oGv5rqQ5Y2h54mH5Y+v5Lul6Lez6L2s5Yiw5a+55bqU55qE6KeG6aKR6K+m5oOF6aG1XG4gICAtIOaYvuekuuinhumikeWwgemdouWbvueJh1xuXG41LiDkvJjljJbkuoYgVUkg5pi+56S677yaXG4gICAtIOa3u+WKoOS6huWKoOi9veeKtuaAgeaMh+ekuuWZqFxuICAgLSDmlLnov5vkuobmtojmga/mupDljaHniYfnmoTmoLflvI/vvIzmt7vliqDkuoblsIHpnaLlm77niYfmmL7npLpcbiAgIC0g5re75Yqg5LqG6byg5qCH5oKs5YGc5pWI5p6cXG5cbueOsOWcqO+8jOW9k+eUqOaIt+eCueWHu+WvvOiIquagj+S4reeahOa2iOaBr+Wbvuagh+i/m+WFpea2iOaBr+S4reW/g+mhtemdouaXtu+8jOezu+e7n+S8muiHquWKqOiOt+WPluW5tuaYvuekuueUqOaIt+eahOinhumikeeCuei1nua2iOaBr+OAgueUqOaIt+WPr+S7peeCueWHu+a2iOaBr+S4reeahOinhumikeWNoeeJh+i3s+i9rOWIsOWvueW6lOeahOinhumikeivpuaDhemhteOAglxuXG7ov5nkuKrlrp7njrDlrozlhajnrKblkIjmgqjnmoTopoHmsYLvvIzkvb/nlKjkuoYgYGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2VgIOaWueazleiOt+WPlueUqOaIt+inhumikeeCuei1nua2iOaBr++8jOW5tuaMieeFp+aCqOaPkOS+m+eahOaVsOaNruagvOW8j+i/m+ihjOS6huWkhOeQhuWSjOa4suafk+OAglxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDM0M1x0ICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAzNDRcdCAgY29sb3I6ICMxODE5MWM7XG4gICAzNDVcdH1cbiAgIDM0Nlx0XG4gICAzNDdcdC5zb3VyY2UtY29udGVudCB7XG4gICAzNDhcdCAgY29sb3I6ICM2MTY2NmQ7XG4gICAzNDlcdCAgZm9udC1zaXplOiAxNHB4O1xuICAgMzUwXHQgIG92ZXJmbG93OiBoaWRkZW47XG4gICAzNTFcdCAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAzNTJcdCAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAzNTNcdCAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAgMzU0XHQgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAzNTVcdH1cbiAgIDM1Nlx0XG4gICAzNTdcdC5zb3VyY2UtY29udGVudC13cmFwcGVyIHtcbiAgIDM1OFx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMzU5XHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAzNjBcdH1cbiAgIDM2MVx0XG4gICAzNjJcdC5zb3VyY2UtaW1hZ2Uge1xuICAgMzYzXHQgIHdpZHRoOiAxMjBweDtcbiAgIDM2NFx0ICBoZWlnaHQ6IDcwcHg7XG4gICAzNjVcdCAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xuICAgMzY2XHQgIGZsZXgtc2hyaW5rOiAwO1xuICAgMzY3XHQgIG92ZXJmbG93OiBoaWRkZW47XG4gICAzNjhcdCAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgMzY5XHR9XG4gICAzNzBcdFxuICAgMzcxXHQuc291cmNlLWltYWdlIGltZyB7XG4gICAzNzJcdCAgd2lkdGg6IDEwMCU7XG4gICAzNzNcdCAgaGVpZ2h0OiAxMDAlO1xuICAgMzc0XHQgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgMzc1XHR9XG4gICAzNzZcdFxuICAgMzc3XHQuc291cmNlLXRleHQge1xuICAgMzc4XHQgIGZsZXg6IDE7XG4gICAzNzlcdCAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgIDM4MFx0fVxuICAgMzgxXHRcbiAgIDM4Mlx0LmNsaWNrYWJsZSB7XG4gICAzODNcdCAgY3Vyc29yOiBwb2ludGVyO1xuICAgMzg0XHQgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAzODVcdH1cbiAgIDM4Nlx0XG4gICAzODdcdC5jbGlja2FibGU6aG92ZXIge1xuICAgMzg4XHQgIGJhY2tncm91bmQtY29sb3I6ICNmMGYxZjI7XG4gICAzODlcdH1cbiAgIDM5MFx0XG4gICAzOTFcdC5zeXN0ZW0tbWVzc2FnZSAubWVzc2FnZS11c2VybmFtZSB7XG4gICAzOTJcdCAgY29sb3I6ICNmYjcyOTk7XG4gICAzOTNcdH1cblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMVc2empvQXhmaFp2QTFKQno5UTdOalcifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IuaIkeW3sue7j+WujOaIkOS6hua2iOaBr+S4reW/g+mhtemdoueahOS/ruaUue+8jOeOsOWcqOWug+WPr+S7peS7jiBBUEkg6I635Y+W55So5oi36KeG6aKR54K56LWe5raI5oGv5bm25Zyo6aG16Z2i5LiK5riy5p+T44CC5Lul5LiL5piv5oiR5omA5YGa55qE5L+u5pS577yaXG5cbjEuIOWvvOWFpeS6huW/heimgeeahOS+nei1lu+8mlxuICAgLSBgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZWAg5LuOIGBAL2FwaS91c2VyL3VzZXJtZXNzYWdlYFxuICAgLSBgRWxNZXNzYWdlYCDku44gYGVsZW1lbnQtcGx1c2BcbiAgIC0gYGRheWpzYCDnlKjkuo7ml6XmnJ/moLzlvI/ljJZcbiAgIC0gYG9uTW91bnRlZGAg5LuOIFZ1ZSDkuK3lr7zlhaVcblxuMi4g5re75Yqg5LqG5pWw5o2u5Yqg6L295Yqf6IO977yaXG4gICAtIOiuvue9rum7mOiupOaYvuekuueCuei1nua2iOaBr+agh+etvumhtVxuICAgLSDmt7vliqDkuobliqDovb3nirbmgIHmjqfliLZcbiAgIC0g5Zyo57uE5Lu25oyC6L295pe26Ieq5Yqo6I635Y+W5raI5oGv5pWw5o2uXG5cbjMuIOWunueOsOS6huaXpeacn+agvOW8j+WMluWKn+iDve+8mlxuICAgLSDku4rlpKnnmoTmtojmga/mmL7npLrkuLogXCJISDptbVwiXG4gICAtIOaYqOWkqeeahOa2iOaBr+aYvuekuuS4uiBcIuaYqOWkqSBISDptbVwiXG4gICAtIOS7iuW5tOeahOa2iOaBr+aYvuekuuS4uiBcIk1NLUREIEhIOm1tXCJcbiAgIC0g5YW25LuW5pe26Ze05pi+56S65Li6IFwiWVlZWS1NTS1ERCBISDptbVwiXG5cbjQuIOa3u+WKoOS6huinhumikei3s+i9rOWKn+iDve+8mlxuICAgLSDngrnlh7vmtojmga/mupDljaHniYflj6/ku6Xot7PovazliLDlr7nlupTnmoTop4bpopHor6bmg4XpobVcbiAgIC0g5pi+56S66KeG6aKR5bCB6Z2i5Zu+54mHXG5cbjUuIOS8mOWMluS6hiBVSSDmmL7npLrvvJpcbiAgIC0g5re75Yqg5LqG5Yqg6L2954q25oCB5oyH56S65ZmoXG4gICAtIOaUuei/m+S6hua2iOaBr+a6kOWNoeeJh+eahOagt+W8j++8jOa3u+WKoOS6huWwgemdouWbvueJh+aYvuekulxuICAgLSDmt7vliqDkuobpvKDmoIfmgqzlgZzmlYjmnpxcblxu546w5Zyo77yM5b2T55So5oi354K55Ye75a+86Iiq5qCP5Lit55qE5raI5oGv5Zu+5qCH6L+b5YWl5raI5oGv5Lit5b+D6aG16Z2i5pe277yM57O757uf5Lya6Ieq5Yqo6I635Y+W5bm25pi+56S655So5oi355qE6KeG6aKR54K56LWe5raI5oGv44CC55So5oi35Y+v5Lul54K55Ye75raI5oGv5Lit55qE6KeG6aKR5Y2h54mH6Lez6L2s5Yiw5a+55bqU55qE6KeG6aKR6K+m5oOF6aG144CCXG5cbui/meS4quWunueOsOWujOWFqOespuWQiOaCqOeahOimgeaxgu+8jOS9v+eUqOS6hiBgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZWAg5pa55rOV6I635Y+W55So5oi36KeG6aKR54K56LWe5raI5oGv77yM5bm25oyJ54Wn5oKo5o+Q5L6b55qE5pWw5o2u5qC85byP6L+b6KGM5LqG5aSE55CG5ZKM5riy5p+T44CCXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InJlcXVlc3RfaWQiOiJjNzZjMmJjMS02ZWNhLTQ5MTEtYWRlYi1kY2Y2OWM5OWUyMDciLCJ1dWlkIjoiYTY4NDUxYzMtNjVjYy00YzBmLTkyY2MtZmMyZGExZmRhZjFhIiwiY2hhdEl0ZW1UeXBlIjoiYWdlbnRpYy1jaGVja3BvaW50LWRlbGltaXRlciIsInN0YXR1cyI6InN1Y2Nlc3MiLCJmcm9tVGltZXN0YW1wIjoxNzQ0ODU0NDYzMzA5LCJ0b1RpbWVzdGFtcCI6MTc0NDg2MDQxMjAxOSwic2Vlbl9zdGF0ZSI6InNlZW4ifSx7InJlcXVlc3RfaWQiOiI4ODRkYmRjNS01OWQ1LTQzMTQtYTI2NS03ZDg2Njg1YmY4MzMiLCJzdGF0dXMiOiJjYW5jZWxsZWQiLCJjaGF0SXRlbVR5cGUiOiJhZ2VudGljLXR1cm4tZGVsaW1pdGVyIn0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjlhOWQ0N2FkLTlhYjktNGE4My1iNDE3LTNmODI5Y2YyZmJkNyIsInJlcXVlc3RfbWVzc2FnZSI6IumHjeaWsOmAgumFjea2iOaBr+S4reW/g+aVsOaNrue7k+aehO+8jOeOsOWcqGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2Xlk43lupTnmoTmlbDmja7mmK/ov5nmoLfnmoTvvJp7XHJcbiAgICBcImNvZGVcIjogMjAwLFxyXG4gICAgXCJtZXNzYWdlXCI6IFwi5pON5L2c5oiQ5YqfXCIsXHJcbiAgICBcImRhdGFcIjogW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJ2aWRlb0xpa2VcIjogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIyLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMyOjEwXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMjEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg5LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTdUMTE6MzI6MDRcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEyMyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xN1QxMTozMjoyNlwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NSxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMxOjU5XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg2LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkZHdhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRlb3MvaW1hZ2UvMjAyNS8wNC8wOC84NWMxNjgzZC00ZDk2LTQ2ZTUtYjBkYy02NjdkMjIzNGNhMjAucG5nXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1N1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTEwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6NTBcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDExOCxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE2VDE2OjEzOjQ5XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1NFwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTE3LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NSxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTZUMTU6Mzk6MzdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEwNyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogODQsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi6JKC5rOVXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkYWRhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRlb3MvaW1hZ2UvMjAyNS8wNC8wOC85MzkyYWQwMC1hZGEyLTQwYzEtYWFhZC1iMDZhMjJkZmI4M2EuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDoyOVwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTA2LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkyLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLokoLms5VcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjIyXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMDgsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6MzJcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBcInVzZXJDaGF0TWVzc2FnZUR0b1wiOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxNjYsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiMTExXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJzZW5kVGltZVwiOiBcIjIwMjUtMDQtMTdUMTA6MDc6NDhcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDE2NyxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCIxMTFcIixcclxuICAgICAgICAgICAgICAgICAgICBcInNlbmRUaW1lXCI6IFwiMjAyNS0wNC0xN1QxMDowNzo1MFwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTY5LFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImVxMmUycWVxZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic2VuZFRpbWVcIjogXCIyMDI1LTA0LTE3VDExOjUzOjM1XCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH1cclxuICAgIF1cclxufSAgIHZpZGVvTGlrZeaVsOaNrue7hOS4reaYr+eCuei1nueahOa2iOaBr++8jHVzZXJDaGF0TWVzc2FnZUR0b+aVsOe7hOS4reaYr+iBiuWkqeS/oeaBr+eahOaVsOaNriIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiLph43mlrDpgILphY3mtojmga/kuK3lv4PmlbDmja7nu5PmnoTvvIznjrDlnKhnZXRVc2VyTWVzc2FnZUxpc3RTZXJ2aWNl5ZON5bqU55qE5pWw5o2u5piv6L+Z5qC355qE77yae1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgXCJjb2RlXCI6IDIwMCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgIFwibWVzc2FnZVwiOiBcIuaTjeS9nOaIkOWKn1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgXCJkYXRhXCI6IFtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidmlkZW9MaWtlXCI6IFtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEyMixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogODcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xN1QxMTozMjoxMFwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4OSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMyOjA0XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMjMsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTdUMTE6MzI6MjZcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEyMCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTUsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xN1QxMTozMTo1OVwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTEyLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcImRhZGR3YVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vbG9jYWxob3N0OjgwODAvdmlkZW9zL2ltYWdlLzIwMjUvMDQvMDgvODVjMTY4M2QtNGQ5Ni00NmU1LWIwZGMtNjY3ZDIyMzRjYTIwLnBuZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6NTdcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDExMCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjUwXCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTgsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNlQxNjoxMzo0OVwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTExLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6NTRcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDExNyxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTUsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE2VDE1OjM5OjM3XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMDcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg0LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcImRhZGFkYVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vbG9jYWxob3N0OjgwODAvdmlkZW9zL2ltYWdlLzIwMjUvMDQvMDgvOTM5MmFkMDAtYWRhMi00MGMxLWFhYWQtYjA2YTIyZGZiODNhLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6MjlcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEwNixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogODcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi6JKC5rOVXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDoyMlwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTA4LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkyLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLokoLms5VcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjMyXCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH1cciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ1c2VyQ2hhdE1lc3NhZ2VEdG9cIjogW1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTY2LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjExMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwic2VuZFRpbWVcIjogXCIyMDI1LTA0LTE3VDEwOjA3OjQ4XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxNjcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiMTExXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJzZW5kVGltZVwiOiBcIjIwMjUtMDQtMTdUMTA6MDc6NTBcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDE2OSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJlcTJlMnFlcWVcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInNlbmRUaW1lXCI6IFwiMjAyNS0wNC0xN1QxMTo1MzozNVwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIF1cciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICB9XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICBdXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6In0gICB2aWRlb0xpa2XmlbDmja7nu4TkuK3mmK/ngrnotZ7nmoTmtojmga/vvIx1c2VyQ2hhdE1lc3NhZ2VEdG/mlbDnu4TkuK3mmK/ogYrlpKnkv6Hmga/nmoTmlbDmja4ifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDE5bTFEWVVaMVdGYWV4WG55Y3VjUzJmIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiLy8gXFx1ODNiN1xcdTUzZDZcXHU3NTI4XFx1NjIzN1xcdTg5YzZcXHU5ODkxXFx1NzBiOVxcdThkNWVcXHU2ZDg4XFx1NjA2ZlxcbmNvbnN0IGdldFVzZXJNZXNzYWdlcyA9IGFzeW5jICgpID0+IHtcXG4gIGlmICghaXNMb2dpbi52YWx1ZSkgcmV0dXJuXFxuICBcXG4gIGxvYWRpbmcudmFsdWUgPSB0cnVlXFxuICB0cnkge1xcbiAgICBjb25zdCByZXMgPSBhd2FpdCBnZXRVc2VyTWVzc2FnZUxpc3RTZXJ2aWNlKClcXG4gICAgaWYgKHJlcy5jb2RlID09PSAyMDAgJiYgcmVzLmRhdGEpIHtcXG4gICAgICAvLyBcXHU1OTA0XFx1NzQwNlxcdTcwYjlcXHU4ZDVlXFx1NmQ4OFxcdTYwNmZcXHU2NTcwXFx1NjM2ZVxcbiAgICAgIGxpa2VzLnZhbHVlID0gcmVzLmRhdGEubWFwKGl0ZW0gPT4gKHtcXG4gICAgICAgIGlkOiBpdGVtLmlkLFxcbiAgICAgICAgdXNlcm5hbWU6IGl0ZW0ubmlja25hbWUsXFxuICAgICAgICBhdmF0YXI6IGl0ZW0udXNlclBpYyxcXG4gICAgICAgIHRpbWU6IGZvcm1hdERhdGUoaXRlbS5saWtlZEF0KSxcXG4gICAgICAgIGNvbnRlbnQ6ICdcXHU4ZDVlXFx1NGU4NlxcdTRmNjBcXHU3Njg0XFx1ODljNlxcdTk4OTEnLFxcbiAgICAgICAgdmlkZW9JZDogaXRlbS52aWRlb0lkLFxcbiAgICAgICAgc291cmNlOiB7XFxuICAgICAgICAgIHRpdGxlOiBpdGVtLnRpdGxlLFxcbiAgICAgICAgICBjb250ZW50OiAnJyxcXG4gICAgICAgICAgY292ZXI6IGl0ZW0uY292ZXJcXG4gICAgICAgIH1cXG4gICAgICB9KSlcXG4gICAgfSBlbHNlIHtcXG4gICAgICBFbE1lc3NhZ2UuZXJyb3IoJ1xcdTgzYjdcXHU1M2Q2XFx1NmQ4OFxcdTYwNmZcXHU1OTMxXFx1OGQyNVxcdWZmMWEnICsgcmVzLm1lc3NhZ2UpXFxuICAgIH1cXG4gIH0gY2F0Y2ggKGVycm9yKSB7XFxuICAgIGNvbnNvbGUuZXJyb3IoJ1xcdTgzYjdcXHU1M2Q2XFx1NmQ4OFxcdTYwNmZcXHU1MWZhXFx1OTUxOVxcdWZmMWEnLCBlcnJvcilcXG4gICAgRWxNZXNzYWdlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFx1NTFmYVxcdTk1MTlcXHVmZjBjXFx1OGJmN1xcdTdhMGRcXHU1NDBlXFx1OTFjZFxcdThiZDUnKVxcbiAgfSBmaW5hbGx5IHtcXG4gICAgbG9hZGluZy52YWx1ZSA9IGZhbHNlXFxuICB9XFxufVwiLCBcIm5ld19zdHJcIjogXCIvLyBcXHU4M2I3XFx1NTNkNlxcdTc1MjhcXHU2MjM3XFx1NmQ4OFxcdTYwNmZcXG5jb25zdCBnZXRVc2VyTWVzc2FnZXMgPSBhc3luYyAoKSA9PiB7XFxuICBpZiAoIWlzTG9naW4udmFsdWUpIHJldHVyblxcbiAgXFxuICBsb2FkaW5nLnZhbHVlID0gdHJ1ZVxcbiAgdHJ5IHtcXG4gICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZSgpXFxuICAgIGlmIChyZXMuY29kZSA9PT0gMjAwICYmIHJlcy5kYXRhICYmIHJlcy5kYXRhLmxlbmd0aCA+IDApIHtcXG4gICAgICBjb25zdCBtZXNzYWdlRGF0YSA9IHJlcy5kYXRhWzBdIC8vIFxcdTgzYjdcXHU1M2Q2XFx1N2IyY1xcdTRlMDBcXHU0ZTJhXFx1NjU3MFxcdTYzNmVcXHU1YmY5XFx1OGM2MVxcbiAgICAgIFxcbiAgICAgIC8vIFxcdTU5MDRcXHU3NDA2XFx1NzBiOVxcdThkNWVcXHU2ZDg4XFx1NjA2ZlxcdTY1NzBcXHU2MzZlXFxuICAgICAgaWYgKG1lc3NhZ2VEYXRhLnZpZGVvTGlrZSAmJiBtZXNzYWdlRGF0YS52aWRlb0xpa2UubGVuZ3RoID4gMCkge1xcbiAgICAgICAgbGlrZXMudmFsdWUgPSBtZXNzYWdlRGF0YS52aWRlb0xpa2UubWFwKGl0ZW0gPT4gKHtcXG4gICAgICAgICAgaWQ6IGl0ZW0uaWQsXFxuICAgICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxcbiAgICAgICAgICBhdmF0YXI6IGl0ZW0udXNlclBpYyxcXG4gICAgICAgICAgdGltZTogZm9ybWF0RGF0ZShpdGVtLmxpa2VkQXQpLFxcbiAgICAgICAgICBjb250ZW50OiAnXFx1OGQ1ZVxcdTRlODZcXHU0ZjYwXFx1NzY4NFxcdTg5YzZcXHU5ODkxJyxcXG4gICAgICAgICAgdmlkZW9JZDogaXRlbS52aWRlb0lkLFxcbiAgICAgICAgICBzb3VyY2U6IHtcXG4gICAgICAgICAgICB0aXRsZTogaXRlbS50aXRsZSxcXG4gICAgICAgICAgICBjb250ZW50OiAnJyxcXG4gICAgICAgICAgICBjb3ZlcjogaXRlbS5jb3ZlclxcbiAgICAgICAgICB9XFxuICAgICAgICB9KSlcXG4gICAgICB9XFxuICAgICAgXFxuICAgICAgLy8gXFx1NTkwNFxcdTc0MDZcXHU4MDRhXFx1NTkyOVxcdTZkODhcXHU2MDZmXFx1NjU3MFxcdTYzNmVcXG4gICAgICBpZiAobWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvICYmIG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0by5sZW5ndGggPiAwKSB7XFxuICAgICAgICByZXBsaWVzLnZhbHVlID0gbWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvLm1hcChpdGVtID0+ICh7XFxuICAgICAgICAgIGlkOiBpdGVtLmlkLFxcbiAgICAgICAgICB1c2VybmFtZTogaXRlbS5uaWNrbmFtZSxcXG4gICAgICAgICAgYXZhdGFyOiBpdGVtLnVzZXJQaWMsXFxuICAgICAgICAgIHRpbWU6IGZvcm1hdERhdGUoaXRlbS5zZW5kVGltZSksXFxuICAgICAgICAgIGNvbnRlbnQ6IGl0ZW0uY29udGVudCxcXG4gICAgICAgICAgaXNDaGF0OiB0cnVlXFxuICAgICAgICB9KSlcXG4gICAgICB9XFxuICAgIH0gZWxzZSB7XFxuICAgICAgRWxNZXNzYWdlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFx1NTkzMVxcdThkMjVcXHVmZjFhJyArIHJlcy5tZXNzYWdlKVxcbiAgICB9XFxuICB9IGNhdGNoIChlcnJvcikge1xcbiAgICBjb25zb2xlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFx1NTFmYVxcdTk1MTlcXHVmZjFhJywgZXJyb3IpXFxuICAgIEVsTWVzc2FnZS5lcnJvcignXFx1ODNiN1xcdTUzZDZcXHU2ZDg4XFx1NjA2ZlxcdTUxZmFcXHU5NTE5XFx1ZmYwY1xcdThiZjdcXHU3YTBkXFx1NTQwZVxcdTkxY2RcXHU4YmQ1JylcXG4gIH0gZmluYWxseSB7XFxuICAgIGxvYWRpbmcudmFsdWUgPSBmYWxzZVxcbiAgfVxcbn1cIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDE5MCwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiAyMjF9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuaIkeWwhuW4ruaCqOmHjeaWsOmAgumFjea2iOaBr+S4reW/g+mhtemdou+8jOS7peWMuemFjeaWsOeahOaVsOaNrue7k+aehOOAgueOsOWcqCBgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZWAg6L+U5Zue55qE5pWw5o2u5YyF5ZCr5Lik5Liq5pWw57uE77yaYHZpZGVvTGlrZWDvvIjngrnotZ7mtojmga/vvInlkowgYHVzZXJDaGF0TWVzc2FnZUR0b2DvvIjogYrlpKnmtojmga/vvInjgIJcblxu6K6p5oiR5L+u5pS55raI5oGv5Lit5b+D6aG16Z2i5p2l5aSE55CG6L+Z5Liq5paw55qE5pWw5o2u57uT5p6E77yaXG5cbiMjIOiuoeWIklxuMS4g5L+u5pS5IGBnZXRVc2VyTWVzc2FnZXNgIOWHveaVsO+8jOWkhOeQhuaWsOeahOaVsOaNrue7k+aehFxuMi4g5re75Yqg6IGK5aSp5raI5oGv55qE5aSE55CG6YC76L6RXG4zLiDmm7TmlrDpobXpnaLmmL7npLrvvIzljLrliIbkuI3lkIznsbvlnovnmoTmtojmga9cblxu6K6p5oiR5byA5aeL5L+u5pS577yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjowLCJ0ZXh0X25vZGUiOnsiY29udGVudCI6IumHjeaWsOmAgumFjea2iOaBr+S4reW/g+aVsOaNrue7k+aehO+8jOeOsOWcqGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2Xlk43lupTnmoTmlbDmja7mmK/ov5nmoLfnmoTvvJp7XHJcbiAgICBcImNvZGVcIjogMjAwLFxyXG4gICAgXCJtZXNzYWdlXCI6IFwi5pON5L2c5oiQ5YqfXCIsXHJcbiAgICBcImRhdGFcIjogW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJ2aWRlb0xpa2VcIjogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIyLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMyOjEwXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMjEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg5LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTdUMTE6MzI6MDRcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEyMyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xN1QxMTozMjoyNlwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NSxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMxOjU5XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg2LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkZHdhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRlb3MvaW1hZ2UvMjAyNS8wNC8wOC84NWMxNjgzZC00ZDk2LTQ2ZTUtYjBkYy02NjdkMjIzNGNhMjAucG5nXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1N1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTEwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6NTBcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDExOCxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE2VDE2OjEzOjQ5XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1NFwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTE3LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NSxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTZUMTU6Mzk6MzdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEwNyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogODQsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi6JKC5rOVXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkYWRhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRlb3MvaW1hZ2UvMjAyNS8wNC8wOC85MzkyYWQwMC1hZGEyLTQwYzEtYWFhZC1iMDZhMjJkZmI4M2EuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDoyOVwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTA2LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkyLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLokoLms5VcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjIyXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMDgsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6MzJcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBcInVzZXJDaGF0TWVzc2FnZUR0b1wiOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxNjYsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiMTExXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJzZW5kVGltZVwiOiBcIjIwMjUtMDQtMTdUMTA6MDc6NDhcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDE2NyxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCIxMTFcIixcclxuICAgICAgICAgICAgICAgICAgICBcInNlbmRUaW1lXCI6IFwiMjAyNS0wNC0xN1QxMDowNzo1MFwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTY5LFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImVxMmUycWVxZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic2VuZFRpbWVcIjogXCIyMDI1LTA0LTE3VDExOjUzOjM1XCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH1cclxuICAgIF1cclxufSAgIHZpZGVvTGlrZeaVsOaNrue7hOS4reaYr+eCuei1nueahOa2iOaBr++8jHVzZXJDaGF0TWVzc2FnZUR0b+aVsOe7hOS4reaYr+iBiuWkqeS/oeaBr+eahOaVsOaNriJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5oiR5bCG5biu5oKo6YeN5paw6YCC6YWN5raI5oGv5Lit5b+D6aG16Z2i77yM5Lul5Yy56YWN5paw55qE5pWw5o2u57uT5p6E44CC546w5ZyoIGBnZXRVc2VyTWVzc2FnZUxpc3RTZXJ2aWNlYCDov5Tlm57nmoTmlbDmja7ljIXlkKvkuKTkuKrmlbDnu4TvvJpgdmlkZW9MaWtlYO+8iOeCuei1nua2iOaBr++8ieWSjCBgdXNlckNoYXRNZXNzYWdlRHRvYO+8iOiBiuWkqea2iOaBr++8ieOAglxuXG7orqnmiJHkv67mlLnmtojmga/kuK3lv4PpobXpnaLmnaXlpITnkIbov5nkuKrmlrDnmoTmlbDmja7nu5PmnoTvvJpcblxuIyMg6K6h5YiSXG4xLiDkv67mlLkgYGdldFVzZXJNZXNzYWdlc2Ag5Ye95pWw77yM5aSE55CG5paw55qE5pWw5o2u57uT5p6EXG4yLiDmt7vliqDogYrlpKnmtojmga/nmoTlpITnkIbpgLvovpFcbjMuIOabtOaWsOmhtemdouaYvuekuu+8jOWMuuWIhuS4jeWQjOexu+Wei+eahOa2iOaBr1xuXG7orqnmiJHlvIDlp4vkv67mlLnvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJkMWZkZDBkNS0zYjNkLTQ3ZjEtOTcwMi1iZTAyZmY2NTM1YjYiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxQ3o3OG4xNjZmWmFydW9UNWltalBKTCIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIiAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtdGV4dFxcXCI+e3sgbWVzc2FnZS5jb250ZW50IH19PC9kaXY+XFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2VcXFwiIHYtaWY9XFxcIm1lc3NhZ2Uuc291cmNlXFxcIiBAY2xpY2s9XFxcIm1lc3NhZ2UudmlkZW9JZCAmJiBnb1RvVmlkZW8obWVzc2FnZS52aWRlb0lkKVxcXCI+XFxuICAgICAgICAgICAgICA8ZWwtY2FyZCBzaGFkb3c9XFxcImhvdmVyXFxcIiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2UtY2FyZFxcXCIgOmNsYXNzPVxcXCJ7ICdjbGlja2FibGUnOiBtZXNzYWdlLnZpZGVvSWQgfVxcXCI+XFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1jb250ZW50LXdyYXBwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1pbWFnZVxcXCIgdi1pZj1cXFwibWVzc2FnZS5zb3VyY2UuY292ZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGltZyA6c3JjPVxcXCJtZXNzYWdlLnNvdXJjZS5jb3ZlclxcXCIgYWx0PVxcXCJcXHU4OWM2XFx1OTg5MVxcdTVjMDFcXHU5NzYyXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS10ZXh0XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS10aXRsZVxcXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1jb250ZW50XFxcIiB2LWlmPVxcXCJtZXNzYWdlLnNvdXJjZS5jb250ZW50XFxcIj57eyBtZXNzYWdlLnNvdXJjZS5jb250ZW50IH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgPC9lbC1jYXJkPlxcbiAgICAgICAgICAgIDwvZGl2PlwiLCBcIm5ld19zdHJcIjogXCIgICAgICAgICAgICA8IS0tIFxcdTgwNGFcXHU1OTI5XFx1NmQ4OFxcdTYwNmZcXHU2NjNlXFx1NzkzYSAtLT5cXG4gICAgICAgICAgICA8ZGl2IHYtaWY9XFxcIm1lc3NhZ2UuaXNDaGF0XFxcIiBjbGFzcz1cXFwibWVzc2FnZS10ZXh0IGNoYXQtbWVzc2FnZVxcXCI+XFxuICAgICAgICAgICAgICB7eyBtZXNzYWdlLmNvbnRlbnQgfX1cXG4gICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICBcXG4gICAgICAgICAgICA8IS0tIFxcdTcwYjlcXHU4ZDVlXFx1NmQ4OFxcdTYwNmZcXHU2NjNlXFx1NzkzYSAtLT5cXG4gICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPlxcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS10ZXh0XFxcIj57eyBtZXNzYWdlLmNvbnRlbnQgfX08L2Rpdj5cXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2Utc291cmNlXFxcIiB2LWlmPVxcXCJtZXNzYWdlLnNvdXJjZVxcXCIgQGNsaWNrPVxcXCJtZXNzYWdlLnZpZGVvSWQgJiYgZ29Ub1ZpZGVvKG1lc3NhZ2UudmlkZW9JZClcXFwiPlxcbiAgICAgICAgICAgICAgICA8ZWwtY2FyZCBzaGFkb3c9XFxcImhvdmVyXFxcIiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2UtY2FyZFxcXCIgOmNsYXNzPVxcXCJ7ICdjbGlja2FibGUnOiBtZXNzYWdlLnZpZGVvSWQgfVxcXCI+XFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic291cmNlLWNvbnRlbnQtd3JhcHBlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzb3VyY2UtaW1hZ2VcXFwiIHYtaWY9XFxcIm1lc3NhZ2Uuc291cmNlLmNvdmVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgPGltZyA6c3JjPVxcXCJtZXNzYWdlLnNvdXJjZS5jb3ZlclxcXCIgYWx0PVxcXCJcXHU4OWM2XFx1OTg5MVxcdTVjMDFcXHU5NzYyXFxcIiAvPlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzb3VyY2UtdGV4dFxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS10aXRsZVxcXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic291cmNlLWNvbnRlbnRcXFwiIHYtaWY9XFxcIm1lc3NhZ2Uuc291cmNlLmNvbnRlbnRcXFwiPnt7IG1lc3NhZ2Uuc291cmNlLmNvbnRlbnQgfX08L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICA8L2VsLWNhcmQ+XFxuICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICA8L3RlbXBsYXRlPlwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogNDksIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogNjJ9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IueOsOWcqOaIkeS7rOmcgOimgeS/ruaUuea2iOaBr+mhueeahOaooeadv++8jOS7peS+v+iDveWkn+ato+ehruaYvuekuuiBiuWkqea2iOaBr+WSjOeCuei1nua2iOaBr++8mlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDE5M1x0ICAgIHJldHVybiBkYXRlLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbScpXG4gICAxOTRcdCAgfVxuICAgMTk1XHR9XG4gICAxOTZcdFxuICAgMTk3XHQvLyDojrflj5bnlKjmiLfmtojmga9cbiAgIDE5OFx0Y29uc3QgZ2V0VXNlck1lc3NhZ2VzID0gYXN5bmMgKCkgPT4ge1xuICAgMTk5XHQgIGlmICghaXNMb2dpbi52YWx1ZSkgcmV0dXJuXG4gICAyMDBcdFxuICAgMjAxXHQgIGxvYWRpbmcudmFsdWUgPSB0cnVlXG4gICAyMDJcdCAgdHJ5IHtcbiAgIDIwM1x0ICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2UoKVxuICAgMjA0XHQgICAgaWYgKHJlcy5jb2RlID09PSAyMDAgJiYgcmVzLmRhdGEgJiYgcmVzLmRhdGEubGVuZ3RoID4gMCkge1xuICAgMjA1XHQgICAgICBjb25zdCBtZXNzYWdlRGF0YSA9IHJlcy5kYXRhWzBdIC8vIOiOt+WPluesrOS4gOS4quaVsOaNruWvueixoVxuICAgMjA2XHRcbiAgIDIwN1x0ICAgICAgLy8g5aSE55CG54K56LWe5raI5oGv5pWw5o2uXG4gICAyMDhcdCAgICAgIGlmIChtZXNzYWdlRGF0YS52aWRlb0xpa2UgJiYgbWVzc2FnZURhdGEudmlkZW9MaWtlLmxlbmd0aCA+IDApIHtcbiAgIDIwOVx0ICAgICAgICBsaWtlcy52YWx1ZSA9IG1lc3NhZ2VEYXRhLnZpZGVvTGlrZS5tYXAoaXRlbSA9PiAoe1xuICAgMjEwXHQgICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAyMTFcdCAgICAgICAgICB1c2VybmFtZTogaXRlbS5uaWNrbmFtZSxcbiAgIDIxMlx0ICAgICAgICAgIGF2YXRhcjogaXRlbS51c2VyUGljLFxuICAgMjEzXHQgICAgICAgICAgdGltZTogZm9ybWF0RGF0ZShpdGVtLmxpa2VkQXQpLFxuICAgMjE0XHQgICAgICAgICAgY29udGVudDogJ+i1nuS6huS9oOeahOinhumikScsXG4gICAyMTVcdCAgICAgICAgICB2aWRlb0lkOiBpdGVtLnZpZGVvSWQsXG4gICAyMTZcdCAgICAgICAgICBzb3VyY2U6IHtcbiAgIDIxN1x0ICAgICAgICAgICAgdGl0bGU6IGl0ZW0udGl0bGUsXG4gICAyMThcdCAgICAgICAgICAgIGNvbnRlbnQ6ICcnLFxuICAgMjE5XHQgICAgICAgICAgICBjb3ZlcjogaXRlbS5jb3ZlclxuICAgMjIwXHQgICAgICAgICAgfVxuICAgMjIxXHQgICAgICAgIH0pKVxuICAgMjIyXHQgICAgICB9XG4gICAyMjNcdFxuICAgMjI0XHQgICAgICAvLyDlpITnkIbogYrlpKnmtojmga/mlbDmja5cbiAgIDIyNVx0ICAgICAgaWYgKG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0byAmJiBtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8ubGVuZ3RoID4gMCkge1xuICAgMjI2XHQgICAgICAgIHJlcGxpZXMudmFsdWUgPSBtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8ubWFwKGl0ZW0gPT4gKHtcbiAgIDIyN1x0ICAgICAgICAgIGlkOiBpdGVtLmlkLFxuICAgMjI4XHQgICAgICAgICAgdXNlcm5hbWU6IGl0ZW0ubmlja25hbWUsXG4gICAyMjlcdCAgICAgICAgICBhdmF0YXI6IGl0ZW0udXNlclBpYyxcbiAgIDIzMFx0ICAgICAgICAgIHRpbWU6IGZvcm1hdERhdGUoaXRlbS5zZW5kVGltZSksXG4gICAyMzFcdCAgICAgICAgICBjb250ZW50OiBpdGVtLmNvbnRlbnQsXG4gICAyMzJcdCAgICAgICAgICBpc0NoYXQ6IHRydWVcbiAgIDIzM1x0ICAgICAgICB9KSlcbiAgIDIzNFx0ICAgICAgfVxuICAgMjM1XHQgICAgfSBlbHNlIHtcbiAgIDIzNlx0ICAgICAgRWxNZXNzYWdlLmVycm9yKCfojrflj5bmtojmga/lpLHotKXvvJonICsgcmVzLm1lc3NhZ2UpXG4gICAyMzdcdCAgICB9XG4gICAyMzhcdCAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgIDIzOVx0ICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPlua2iOaBr+WHuumUme+8micsIGVycm9yKVxuICAgMjQwXHQgICAgRWxNZXNzYWdlLmVycm9yKCfojrflj5bmtojmga/lh7rplJnvvIzor7fnqI3lkI7ph43or5UnKVxuICAgMjQxXHQgIH0gZmluYWxseSB7XG4gICAyNDJcdCAgICBsb2FkaW5nLnZhbHVlID0gZmFsc2VcbiAgIDI0M1x0ICB9XG4gICAyNDRcdH1cbiAgIDI0NVx0XG4gICAyNDZcdC8vIOi3s+i9rOWIsOinhumikeivpuaDhemhtVxuICAgMjQ3XHRjb25zdCBnb1RvVmlkZW8gPSAodmlkZW9JZCkgPT4ge1xuICAgMjQ4XHQgIHJvdXRlci5wdXNoKGAvdmlkZW8vJHt2aWRlb0lkfWApXG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDE5bTFEWVVaMVdGYWV4WG55Y3VjUzJmIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLnjrDlnKjmiJHku6zpnIDopoHkv67mlLnmtojmga/pobnnmoTmqKHmnb/vvIzku6Xkvr/og73lpJ/mraPnoa7mmL7npLrogYrlpKnmtojmga/lkozngrnotZ7mtojmga/vvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIyZWQ1YWRjNy01OTYzLTRhZGQtODM0Ny1kM2U4MzI2MjAxNDEiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxOWdtY2Z2b1ZqZ0haTExoYmZrYzNSaiIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIiAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cXFwibWVudGlvbnNcXFwiPlxcbiAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxcbiAgICAgICAgICAgIDxzcGFuPkBcXHU2MjExXFx1NzY4NDwvc3Bhbj5cXG4gICAgICAgICAgPC90ZW1wbGF0ZT5cXG4gICAgICAgIDwvZWwtbWVudS1pdGVtPlxcbiAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cXFwibGlrZXNcXFwiPlxcbiAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxcbiAgICAgICAgICAgIDxzcGFuPlxcdTcwYjlcXHU4ZDVlPC9zcGFuPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJyZXBsaWVzXFxcIj5cXG4gICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cXG4gICAgICAgICAgICA8c3Bhbj5cXHU1NmRlXFx1NTkwZDwvc3Bhbj5cXG4gICAgICAgICAgPC90ZW1wbGF0ZT5cXG4gICAgICAgIDwvZWwtbWVudS1pdGVtPlxcbiAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cXFwic3lzdGVtXFxcIj5cXG4gICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cXG4gICAgICAgICAgICA8c3Bhbj5cXHU3Y2ZiXFx1N2VkZlxcdTkwMWFcXHU3N2U1PC9zcGFuPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XCIsIFwibmV3X3N0clwiOiBcIiAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cXFwibGlrZXNcXFwiPlxcbiAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxcbiAgICAgICAgICAgIDxzcGFuPlxcdTcwYjlcXHU4ZDVlXFx1NmQ4OFxcdTYwNmY8L3NwYW4+XFxuICAgICAgICAgICAgPGVsLWJhZGdlIHYtaWY9XFxcImxpa2VzLmxlbmd0aCA+IDBcXFwiIDp2YWx1ZT1cXFwibGlrZXMubGVuZ3RoXFxcIiBjbGFzcz1cXFwibWVzc2FnZS1iYWRnZVxcXCIgLz5cXG4gICAgICAgICAgPC90ZW1wbGF0ZT5cXG4gICAgICAgIDwvZWwtbWVudS1pdGVtPlxcbiAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cXFwicmVwbGllc1xcXCI+XFxuICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XFxuICAgICAgICAgICAgPHNwYW4+XFx1ODA0YVxcdTU5MjlcXHU2ZDg4XFx1NjA2Zjwvc3Bhbj5cXG4gICAgICAgICAgICA8ZWwtYmFkZ2Ugdi1pZj1cXFwicmVwbGllcy5sZW5ndGggPiAwXFxcIiA6dmFsdWU9XFxcInJlcGxpZXMubGVuZ3RoXFxcIiBjbGFzcz1cXFwibWVzc2FnZS1iYWRnZVxcXCIgLz5cXG4gICAgICAgICAgPC90ZW1wbGF0ZT5cXG4gICAgICAgIDwvZWwtbWVudS1pdGVtPlxcbiAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cXFwic3lzdGVtXFxcIj5cXG4gICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cXG4gICAgICAgICAgICA8c3Bhbj5cXHU3Y2ZiXFx1N2VkZlxcdTkwMWFcXHU3N2U1PC9zcGFuPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiAxMCwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiAyOX1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi546w5Zyo5oiR5Lus6ZyA6KaB5re75Yqg6IGK5aSp5raI5oGv55qE5qC35byP77yM5bm25pu05paw6I+c5Y2V6aG555qE5qCH562+77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDQ2XHQgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1pbmZvXCI+XG4gICAgNDdcdCAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtZXNzYWdlLXVzZXJuYW1lXCI+e3sgbWVzc2FnZS51c2VybmFtZSB9fTwvc3Bhbj5cbiAgICA0OFx0ICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1lc3NhZ2UtdGltZVwiPnt7IG1lc3NhZ2UudGltZSB9fTwvc3Bhbj5cbiAgICA0OVx0ICAgICAgICAgICAgPC9kaXY+XG4gICAgNTBcdCAgICAgICAgICAgIDwhLS0g6IGK5aSp5raI5oGv5pi+56S6IC0tPlxuICAgIDUxXHQgICAgICAgICAgICA8ZGl2IHYtaWY9XCJtZXNzYWdlLmlzQ2hhdFwiIGNsYXNzPVwibWVzc2FnZS10ZXh0IGNoYXQtbWVzc2FnZVwiPlxuICAgIDUyXHQgICAgICAgICAgICAgIHt7IG1lc3NhZ2UuY29udGVudCB9fVxuICAgIDUzXHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA1NFx0XG4gICAgNTVcdCAgICAgICAgICAgIDwhLS0g54K56LWe5raI5oGv5pi+56S6IC0tPlxuICAgIDU2XHQgICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPlxuICAgIDU3XHQgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLXRleHRcIj57eyBtZXNzYWdlLmNvbnRlbnQgfX08L2Rpdj5cbiAgICA1OFx0ICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1zb3VyY2VcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2VcIiBAY2xpY2s9XCJtZXNzYWdlLnZpZGVvSWQgJiYgZ29Ub1ZpZGVvKG1lc3NhZ2UudmlkZW9JZClcIj5cbiAgICA1OVx0ICAgICAgICAgICAgICAgIDxlbC1jYXJkIHNoYWRvdz1cImhvdmVyXCIgY2xhc3M9XCJtZXNzYWdlLXNvdXJjZS1jYXJkXCIgOmNsYXNzPVwieyAnY2xpY2thYmxlJzogbWVzc2FnZS52aWRlb0lkIH1cIj5cbiAgICA2MFx0ICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS1jb250ZW50LXdyYXBwZXJcIj5cbiAgICA2MVx0ICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWltYWdlXCIgdi1pZj1cIm1lc3NhZ2Uuc291cmNlLmNvdmVyXCI+XG4gICAgNjJcdCAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCJtZXNzYWdlLnNvdXJjZS5jb3ZlclwiIGFsdD1cIuinhumikeWwgemdolwiIC8+XG4gICAgNjNcdCAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgNjRcdCAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS10ZXh0XCI+XG4gICAgNjVcdCAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLXRpdGxlXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cbiAgICA2Nlx0ICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtY29udGVudFwiIHYtaWY9XCJtZXNzYWdlLnNvdXJjZS5jb250ZW50XCI+e3sgbWVzc2FnZS5zb3VyY2UuY29udGVudCB9fTwvZGl2PlxuICAgIDY3XHQgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgIDY4XHQgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA2OVx0ICAgICAgICAgICAgICAgIDwvZWwtY2FyZD5cbiAgICA3MFx0ICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA3MVx0ICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICA3Mlx0ICAgICAgICAgIDwvZGl2PlxuICAgIDczXHQgICAgICAgIDwvZGl2PlxuICAgIDc0XHQgICAgICA8L2Rpdj5cbiAgICA3NVx0ICAgICAgPGVsLWVtcHR5IHYtZWxzZSBkZXNjcmlwdGlvbj1cIuaaguaXoOa2iOaBr1wiPjwvZWwtZW1wdHk+XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFDejc4bjE2NmZaYXJ1b1Q1aW1qUEpMIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLnjrDlnKjmiJHku6zpnIDopoHmt7vliqDogYrlpKnmtojmga/nmoTmoLflvI/vvIzlubbmm7TmlrDoj5zljZXpobnnmoTmoIfnrb7vvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiI4MTQwODcwZC1kMGU0LTQ2ZTctODE1YS01NmEyN2JhOTM4YjYiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxVkpvMml1THlyM3lVTFpYUDZTS0FRYyIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwidmlld1wiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJ2aWV3X3JhbmdlXCI6IFs1LCAzMF19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLmiJHnnIvliLDmlofku7blhoXlrrnlt7Lnu4/mnInmiYDlj5jljJbvvIzorqnmiJHph43mlrDmn6XnnIvlvZPliY3nmoToj5zljZXpobnlhoXlrrnvvJpcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkZhaWxlZCB0byBlZGl0IHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS4gU2VlIGJlbG93IGZvciBkZXRhaWxzLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuTm8gcmVwbGFjZW1lbnQgd2FzIHBlcmZvcm1lZCwgb2xkU3RyIGRpZCBub3QgYXBwZWFyIHZlcmJhdGltIGluIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblRoZSBjb250ZW50IGluIHRoZSBzcGVjaWZpZWQgcmVnaW9uIGlzOlxuICAgICA2XHQgICAgICAgIDpkZWZhdWx0LWFjdGl2ZT1cImFjdGl2ZVRhYlwiXG4gICAgIDdcdCAgICAgICAgY2xhc3M9XCJtZXNzYWdlLW1lbnVcIlxuICAgICA4XHQgICAgICAgIEBzZWxlY3Q9XCJoYW5kbGVNZW51U2VsZWN0XCJcbiAgICAgOVx0ICAgICAgPlxuICAgIDEwXHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJtZW50aW9uc1wiPlxuICAgIDExXHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAxMlx0ICAgICAgICAgICAgPHNwYW4+6IGK5aSp5raI5oGvPC9zcGFuPlxuICAgIDEzXHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAxNFx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAxNVx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwibGlrZXNcIj5cbiAgICAxNlx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMTdcdCAgICAgICAgICAgIDxzcGFuPueCuei1njwvc3Bhbj5cbiAgICAxOFx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMTlcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjBcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInJlcGxpZXNcIj5cbiAgICAyMVx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMjJcdCAgICAgICAgICAgIDxzcGFuPuWbnuWkjTwvc3Bhbj5cbiAgICAyM1x0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMjRcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjVcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInN5c3RlbVwiPlxuICAgIDI2XHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAyN1x0ICAgICAgICAgICAgPHNwYW4+57O757uf6YCa55+lPC9zcGFuPlxuICAgIDI4XHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAyOVx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAzMFx0ICAgICAgPC9lbC1tZW51PlxuICAgIDMxXHQgICAgPC9kaXY+XG4gICAgMzJcdFxuICAgIDMzXHQgICAgPCEtLSDlj7PkvqflhoXlrrnljLogLS0+XG5cbkRpZmYgYmV0d2VlbiBvbGRTdHIgYW5kIHRoZSBzcGVjaWZpZWQgcmVnaW9uIGlzOlxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLS0tIG9sZFN0clxuKysrIHJlZ2lvbkNvbnRlbnRcbkBAIC0xLDYgKzEsNiBAQFxuICAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cIm1lbnRpb25zXCI+XG4gICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4tICAgICAgICAgICAgPHNwYW4+QOaIkeeahDwvc3Bhbj5cbisgICAgICAgICAgICA8c3Bhbj7ogYrlpKnmtojmga88L3NwYW4+XG4gICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJsaWtlc1wiPlxuXG5cbkZpeCBmYWlsZWQgc3RyX3JlcGxhY2VfZW50cmllcyBhY2NvcmRpbmdseSBhbmQgdHJ5IGFnYWluLlxuIiwiaXNfZXJyb3IiOnRydWUsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxOWdtY2Z2b1ZqZ0haTExoYmZrYzNSaiJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5oiR55yL5Yiw5paH5Lu25YaF5a655bey57uP5pyJ5omA5Y+Y5YyW77yM6K6p5oiR6YeN5paw5p+l55yL5b2T5YmN55qE6I+c5Y2V6aG55YaF5a6577yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiOTVjMmMzMjQtZmI2Yy00OTA3LWJmY2MtZTBhZWFjMzRkYWZhIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMTVmdFpzTlRMWE5pblBvem9ENnZKZk0iLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XFxcIm1lbnRpb25zXFxcIj5cXG4gICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cXG4gICAgICAgICAgICA8c3Bhbj5cXHU4MDRhXFx1NTkyOVxcdTZkODhcXHU2MDZmPC9zcGFuPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJsaWtlc1xcXCI+XFxuICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XFxuICAgICAgICAgICAgPHNwYW4+XFx1NzBiOVxcdThkNWU8L3NwYW4+XFxuICAgICAgICAgIDwvdGVtcGxhdGU+XFxuICAgICAgICA8L2VsLW1lbnUtaXRlbT5cXG4gICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XFxcInJlcGxpZXNcXFwiPlxcbiAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxcbiAgICAgICAgICAgIDxzcGFuPlxcdTU2ZGVcXHU1OTBkPC9zcGFuPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJzeXN0ZW1cXFwiPlxcbiAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxcbiAgICAgICAgICAgIDxzcGFuPlxcdTdjZmJcXHU3ZWRmXFx1OTAxYVxcdTc3ZTU8L3NwYW4+XFxuICAgICAgICAgIDwvdGVtcGxhdGU+XFxuICAgICAgICA8L2VsLW1lbnUtaXRlbT5cIiwgXCJuZXdfc3RyXCI6IFwiICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJsaWtlc1xcXCI+XFxuICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XFxuICAgICAgICAgICAgPHNwYW4+XFx1NzBiOVxcdThkNWVcXHU2ZDg4XFx1NjA2Zjwvc3Bhbj5cXG4gICAgICAgICAgICA8ZWwtYmFkZ2Ugdi1pZj1cXFwibGlrZXMubGVuZ3RoID4gMFxcXCIgOnZhbHVlPVxcXCJsaWtlcy5sZW5ndGhcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLWJhZGdlXFxcIiAvPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJyZXBsaWVzXFxcIj5cXG4gICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cXG4gICAgICAgICAgICA8c3Bhbj5cXHU4MDRhXFx1NTkyOVxcdTZkODhcXHU2MDZmPC9zcGFuPlxcbiAgICAgICAgICAgIDxlbC1iYWRnZSB2LWlmPVxcXCJyZXBsaWVzLmxlbmd0aCA+IDBcXFwiIDp2YWx1ZT1cXFwicmVwbGllcy5sZW5ndGhcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLWJhZGdlXFxcIiAvPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJzeXN0ZW1cXFwiPlxcbiAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxcbiAgICAgICAgICAgIDxzcGFuPlxcdTdjZmJcXHU3ZWRmXFx1OTAxYVxcdTc3ZTU8L3NwYW4+XFxuICAgICAgICAgIDwvdGVtcGxhdGU+XFxuICAgICAgICA8L2VsLW1lbnUtaXRlbT5cIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDEwLCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDI5fV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLnjrDlnKjmiJHlsIbmm7TmlrDoj5zljZXpobnvvJpcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlOlxuICAgICA1XHQgICAgICA8ZWwtbWVudVxuICAgICA2XHQgICAgICAgIDpkZWZhdWx0LWFjdGl2ZT1cImFjdGl2ZVRhYlwiXG4gICAgIDdcdCAgICAgICAgY2xhc3M9XCJtZXNzYWdlLW1lbnVcIlxuICAgICA4XHQgICAgICAgIEBzZWxlY3Q9XCJoYW5kbGVNZW51U2VsZWN0XCJcbiAgICAgOVx0ICAgICAgPlxuICAgIDEwXHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJtZW50aW9uc1wiPlxuICAgIDExXHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAxMlx0ICAgICAgICAgICAgPHNwYW4+6IGK5aSp5raI5oGvPC9zcGFuPlxuICAgIDEzXHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAxNFx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAxNVx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwibGlrZXNcIj5cbiAgICAxNlx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMTdcdCAgICAgICAgICAgIDxzcGFuPueCuei1njwvc3Bhbj5cbiAgICAxOFx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMTlcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjBcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInJlcGxpZXNcIj5cbiAgICAyMVx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMjJcdCAgICAgICAgICAgIDxzcGFuPuWbnuWkjTwvc3Bhbj5cbiAgICAyM1x0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMjRcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjVcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInN5c3RlbVwiPlxuICAgIDI2XHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAyN1x0ICAgICAgICAgICAgPHNwYW4+57O757uf6YCa55+lPC9zcGFuPlxuICAgIDI4XHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAyOVx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAzMFx0ICAgICAgPC9lbC1tZW51PlxuVG90YWwgbGluZXMgaW4gZmlsZTogNDM0XG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxVkpvMml1THlyM3lVTFpYUDZTS0FRYyJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi546w5Zyo5oiR5bCG5pu05paw6I+c5Y2V6aG577yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiOWUwY2IwMDYtYjEzNi00OGUxLWE4MjEtMjhiMjA0OWQ1MTA5IiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMTE3ZFNTdkFyaG1NYW5NY0s3NnVCeGsiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIvLyBcXHU2ODM5XFx1NjM2ZVxcdTVmNTNcXHU1MjRkXFx1OTAwOVxcdTRlMmRcXHU3Njg0XFx1NjgwN1xcdTdiN2VcXHU1MmE4XFx1NjAwMVxcdTgzYjdcXHU1M2Q2XFx1NmQ4OFxcdTYwNmZcXG5jb25zdCBjdXJyZW50TWVzc2FnZXMgPSBjb21wdXRlZCgoKSA9PiB7XFxuICBzd2l0Y2ggKGFjdGl2ZVRhYi52YWx1ZSkge1xcbiAgICBjYXNlICdtZW50aW9ucyc6XFxuICAgICAgcmV0dXJuIG1lbnRpb25zLnZhbHVlXFxuICAgIGNhc2UgJ2xpa2VzJzpcXG4gICAgICByZXR1cm4gbGlrZXMudmFsdWVcXG4gICAgY2FzZSAncmVwbGllcyc6XFxuICAgICAgcmV0dXJuIHJlcGxpZXMudmFsdWVcXG4gICAgY2FzZSAnc3lzdGVtJzpcXG4gICAgICByZXR1cm4gc3lzdGVtTm90aWNlcy52YWx1ZVxcbiAgICBkZWZhdWx0OlxcbiAgICAgIHJldHVybiBbXVxcbiAgfVxcbn0pXCIsIFwibmV3X3N0clwiOiBcIi8vIFxcdTY4MzlcXHU2MzZlXFx1NWY1M1xcdTUyNGRcXHU5MDA5XFx1NGUyZFxcdTc2ODRcXHU2ODA3XFx1N2I3ZVxcdTUyYThcXHU2MDAxXFx1ODNiN1xcdTUzZDZcXHU2ZDg4XFx1NjA2ZlxcbmNvbnN0IGN1cnJlbnRNZXNzYWdlcyA9IGNvbXB1dGVkKCgpID0+IHtcXG4gIHN3aXRjaCAoYWN0aXZlVGFiLnZhbHVlKSB7XFxuICAgIGNhc2UgJ2xpa2VzJzpcXG4gICAgICByZXR1cm4gbGlrZXMudmFsdWVcXG4gICAgY2FzZSAncmVwbGllcyc6XFxuICAgICAgcmV0dXJuIHJlcGxpZXMudmFsdWVcXG4gICAgY2FzZSAnc3lzdGVtJzpcXG4gICAgICByZXR1cm4gc3lzdGVtTm90aWNlcy52YWx1ZVxcbiAgICBkZWZhdWx0OlxcbiAgICAgIHJldHVybiBbXVxcbiAgfVxcbn0pXCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiAxNTksIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogMTczfV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLmnIDlkI7vvIzmiJHku6zpnIDopoHmt7vliqDogYrlpKnmtojmga/nmoTmoLflvI/vvIzlubbmm7TmlrAgYGN1cnJlbnRNZXNzYWdlc2Ag6K6h566X5bGe5oCn77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgICA2XHQgICAgICAgIDpkZWZhdWx0LWFjdGl2ZT1cImFjdGl2ZVRhYlwiXG4gICAgIDdcdCAgICAgICAgY2xhc3M9XCJtZXNzYWdlLW1lbnVcIlxuICAgICA4XHQgICAgICAgIEBzZWxlY3Q9XCJoYW5kbGVNZW51U2VsZWN0XCJcbiAgICAgOVx0ICAgICAgPlxuICAgIDEwXHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJsaWtlc1wiPlxuICAgIDExXHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAxMlx0ICAgICAgICAgICAgPHNwYW4+54K56LWe5raI5oGvPC9zcGFuPlxuICAgIDEzXHQgICAgICAgICAgICA8ZWwtYmFkZ2Ugdi1pZj1cImxpa2VzLmxlbmd0aCA+IDBcIiA6dmFsdWU9XCJsaWtlcy5sZW5ndGhcIiBjbGFzcz1cIm1lc3NhZ2UtYmFkZ2VcIiAvPlxuICAgIDE0XHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAxNVx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAxNlx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwicmVwbGllc1wiPlxuICAgIDE3XHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAxOFx0ICAgICAgICAgICAgPHNwYW4+6IGK5aSp5raI5oGvPC9zcGFuPlxuICAgIDE5XHQgICAgICAgICAgICA8ZWwtYmFkZ2Ugdi1pZj1cInJlcGxpZXMubGVuZ3RoID4gMFwiIDp2YWx1ZT1cInJlcGxpZXMubGVuZ3RoXCIgY2xhc3M9XCJtZXNzYWdlLWJhZGdlXCIgLz5cbiAgICAyMFx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMjFcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjJcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInN5c3RlbVwiPlxuICAgIDIzXHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAyNFx0ICAgICAgICAgICAgPHNwYW4+57O757uf6YCa55+lPC9zcGFuPlxuICAgIDI1XHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAyNlx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAyN1x0ICAgICAgPC9lbC1tZW51PlxuICAgIDI4XHQgICAgPC9kaXY+XG4gICAgMjlcdFxuICAgIDMwXHQgICAgPCEtLSDlj7PkvqflhoXlrrnljLogLS0+XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDE1ZnRac05UTFhOaW5Qb3pvRDZ2SmZNIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmnIDlkI7vvIzmiJHku6zpnIDopoHmt7vliqDogYrlpKnmtojmga/nmoTmoLflvI/vvIzlubbmm7TmlrAgYGN1cnJlbnRNZXNzYWdlc2Ag6K6h566X5bGe5oCn77yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiOTllMWY5OGMtNTUzNi00OWQ0LWE2MjQtMjE4MmQ1NzdlY2VmIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMTZSWG9kcDlja2p2ZUZVQXNnd0dqZ04iLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIuY2xpY2thYmxlOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGYxZjI7XFxufVwiLCBcIm5ld19zdHJcIjogXCIuY2xpY2thYmxlOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGYxZjI7XFxufVxcblxcbi5jaGF0LW1lc3NhZ2Uge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjdmODtcXG4gIHBhZGRpbmc6IDEycHggMTZweDtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxuICBsaW5lLWhlaWdodDogMS42O1xcbn1cXG5cXG4ubWVzc2FnZS1iYWRnZSA6ZGVlcCguZWwtYmFkZ2VfX2NvbnRlbnQpIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmYjcyOTk7XFxuICBib3JkZXI6IG5vbmU7XFxufVwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMzg3LCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDM4OX1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDE1OVx0ICAgIGNvbnRlbnQ6ICfns7vnu5/lsIbkuo405pyIMjDml6Xov5vooYznu7TmiqTljYfnuqfvvIzlsYrml7blj6/og73kvJrlvbHlk43pg6jliIblip/og73nmoTkvb/nlKjjgIInXG4gICAxNjBcdCAgfVxuICAgMTYxXHRdKVxuICAgMTYyXHRcbiAgIDE2M1x0Ly8g5qC55o2u5b2T5YmN6YCJ5Lit55qE5qCH562+5Yqo5oCB6I635Y+W5raI5oGvXG4gICAxNjRcdGNvbnN0IGN1cnJlbnRNZXNzYWdlcyA9IGNvbXB1dGVkKCgpID0+IHtcbiAgIDE2NVx0ICBzd2l0Y2ggKGFjdGl2ZVRhYi52YWx1ZSkge1xuICAgMTY2XHQgICAgY2FzZSAnbGlrZXMnOlxuICAgMTY3XHQgICAgICByZXR1cm4gbGlrZXMudmFsdWVcbiAgIDE2OFx0ICAgIGNhc2UgJ3JlcGxpZXMnOlxuICAgMTY5XHQgICAgICByZXR1cm4gcmVwbGllcy52YWx1ZVxuICAgMTcwXHQgICAgY2FzZSAnc3lzdGVtJzpcbiAgIDE3MVx0ICAgICAgcmV0dXJuIHN5c3RlbU5vdGljZXMudmFsdWVcbiAgIDE3Mlx0ICAgIGRlZmF1bHQ6XG4gICAxNzNcdCAgICAgIHJldHVybiBbXVxuICAgMTc0XHQgIH1cbiAgIDE3NVx0fSlcbiAgIDE3Nlx0XG4gICAxNzdcdC8vIOagvOW8j+WMluaXpeacn1xuICAgMTc4XHRjb25zdCBmb3JtYXREYXRlID0gKGRhdGVTdHJpbmcpID0+IHtcbiAgIDE3OVx0ICBjb25zdCBkYXRlID0gZGF5anMoZGF0ZVN0cmluZylcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMTE3ZFNTdkFyaG1NYW5NY0s3NnVCeGsifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiI2ZjM2NzM3NS0xMzgxLTRiMTAtOWQ5ZC1lOTdkMzcxMTg5NGMiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxNDd3TkpYQmU4OFl3VDlmSFRwVGcyNSIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcImNvbnN0IG1lbnRpb25zID0gcmVmKFtcXG4gIHtcXG4gICAgaWQ6IDEsXFxuICAgIHVzZXJuYW1lOiAnXFx1NzUyOFxcdTYyMzdBJyxcXG4gICAgYXZhdGFyOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsXFxuICAgIHRpbWU6ICcyXFx1NWMwZlxcdTY1ZjZcXHU1MjRkJyxcXG4gICAgY29udGVudDogJ0BcXHU0ZjYwIFxcdThmZDlcXHU0ZTJhXFx1ODljNlxcdTk4OTFcXHU3NzFmXFx1NGUwZFxcdTk1MTlcXHVmZjAxJyxcXG4gICAgc291cmNlOiB7XFxuICAgICAgdGl0bGU6ICdcXHU1OTgyXFx1NGY1NVxcdTViNjZcXHU0ZTYwXFx1NTI0ZFxcdTdhZWZcXHU1ZjAwXFx1NTNkMScsXFxuICAgICAgY29udGVudDogJ1xcdTUyNGRcXHU3YWVmXFx1NWYwMFxcdTUzZDFcXHU2NjJmXFx1NGUwMFxcdTRlMmFcXHU0ZTBkXFx1NjVhZFxcdTViNjZcXHU0ZTYwXFx1NzY4NFxcdThmYzdcXHU3YTBiLi4uJ1xcbiAgICB9XFxuICB9LFxcbiAge1xcbiAgICBpZDogMixcXG4gICAgdXNlcm5hbWU6ICdcXHU3NTI4XFx1NjIzN0InLFxcbiAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcXG4gICAgdGltZTogJ1xcdTY2MjhcXHU1OTI5JyxcXG4gICAgY29udGVudDogJ0BcXHU0ZjYwIFxcdTgwZmRcXHU1MjA2XFx1NGVhYlxcdTRlMDBcXHU0ZTBiXFx1NWI2NlxcdTRlNjBcXHU4ZDQ0XFx1NjU5OVxcdTU0MTdcXHVmZjFmJyxcXG4gICAgc291cmNlOiB7XFxuICAgICAgdGl0bGU6ICdWdWUuanNcXHU1YjllXFx1NjIxOFxcdTY1NTlcXHU3YTBiJyxcXG4gICAgICBjb250ZW50OiAnVnVlLmpzXFx1NjYyZlxcdTRlMDBcXHU0ZTJhXFx1NmQ0MVxcdTg4NGNcXHU3Njg0XFx1NTI0ZFxcdTdhZWZcXHU2ODQ2XFx1NjdiNi4uLidcXG4gICAgfVxcbiAgfVxcbl0pXCIsIFwibmV3X3N0clwiOiBcIi8vIFxcdTc5ZmJcXHU5NjY0XFx1NGUwZFxcdTk3MDBcXHU4OTgxXFx1NzY4NG1lbnRpb25zXFx1NjU3MFxcdTdlYzRcIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDgyLCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDEwNX1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDQwMVx0ICBjdXJzb3I6IHBvaW50ZXI7XG4gICA0MDJcdCAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgIDQwM1x0fVxuICAgNDA0XHRcbiAgIDQwNVx0LmNsaWNrYWJsZTpob3ZlciB7XG4gICA0MDZcdCAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjFmMjtcbiAgIDQwN1x0fVxuICAgNDA4XHRcbiAgIDQwOVx0LmNoYXQtbWVzc2FnZSB7XG4gICA0MTBcdCAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjdmODtcbiAgIDQxMVx0ICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gICA0MTJcdCAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgNDEzXHQgIG1hcmdpbi1ib3R0b206IDA7XG4gICA0MTRcdCAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgIDQxNVx0fVxuICAgNDE2XHRcbiAgIDQxN1x0Lm1lc3NhZ2UtYmFkZ2UgOmRlZXAoLmVsLWJhZGdlX19jb250ZW50KSB7XG4gICA0MThcdCAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNzI5OTtcbiAgIDQxOVx0ICBib3JkZXI6IG5vbmU7XG4gICA0MjBcdH1cbiAgIDQyMVx0XG4gICA0MjJcdC5zeXN0ZW0tbWVzc2FnZSAubWVzc2FnZS11c2VybmFtZSB7XG4gICA0MjNcdCAgY29sb3I6ICNmYjcyOTk7XG4gICA0MjRcdH1cblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMTZSWG9kcDlja2p2ZUZVQXNnd0dqZ04ifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJlZjI0MTY0My1lMzdiLTQ0MGYtODI4OS0zMjY3ODRmYzlhY2IiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxMTViVjhxU1NBYTQ5TEJHVW1Rd3dWUCIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcImNvbnN0IHJlcGxpZXMgPSByZWYoW1xcbiAge1xcbiAgICBpZDogMSxcXG4gICAgdXNlcm5hbWU6ICdcXHU3NTI4XFx1NjIzN0QnLFxcbiAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcXG4gICAgdGltZTogJzFcXHU1OTI5XFx1NTI0ZCcsXFxuICAgIGNvbnRlbnQ6ICdcXHU4ZmQ5XFx1NGUyYVxcdTY1NTlcXHU3YTBiXFx1OTc1ZVxcdTVlMzhcXHU2NzA5XFx1NWUyZVxcdTUyYTlcXHVmZjBjXFx1OGMyMlxcdThjMjJcXHU1MjA2XFx1NGVhYlxcdWZmMDEnLFxcbiAgICBzb3VyY2U6IHtcXG4gICAgICB0aXRsZTogJ0NTU1xcdTVlMDNcXHU1YzQwXFx1NjI4MFxcdTVkZTcnLFxcbiAgICAgIGNvbnRlbnQ6ICdDU1NcXHU1ZTAzXFx1NWM0MFxcdTY2MmZcXHU1MjRkXFx1N2FlZlxcdTVmMDBcXHU1M2QxXFx1NzY4NFxcdTkxY2RcXHU4OTgxXFx1OTBlOFxcdTUyMDYuLi4nXFxuICAgIH1cXG4gIH0sXFxuICB7XFxuICAgIGlkOiAyLFxcbiAgICB1c2VybmFtZTogJ1xcdTc1MjhcXHU2MjM3RScsXFxuICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxcbiAgICB0aW1lOiAnMlxcdTU5MjlcXHU1MjRkJyxcXG4gICAgY29udGVudDogJ1xcdTYyMTFcXHU2MzA5XFx1NzE2N1xcdTY1NTlcXHU3YTBiXFx1NTA1YVxcdTRlODZcXHVmZjBjXFx1NGY0NlxcdTkwNDdcXHU1MjMwXFx1NGU4NlxcdTRlMDBcXHU0ZTliXFx1OTVlZVxcdTk4OThcXHVmZjBjXFx1ODBmZFxcdTVlMmVcXHU2MjExXFx1NzcwYlxcdTc3MGJcXHU1NDE3XFx1ZmYxZicsXFxuICAgIHNvdXJjZToge1xcbiAgICAgIHRpdGxlOiAnVnVlXFx1N2VjNFxcdTRlZjZcXHU5MDFhXFx1NGZlMScsXFxuICAgICAgY29udGVudDogJ1Z1ZVxcdTdlYzRcXHU0ZWY2XFx1NGU0YlxcdTk1ZjRcXHU3Njg0XFx1OTAxYVxcdTRmZTFcXHU2NWI5XFx1NWYwZlxcdTY3MDlcXHU1OTFhXFx1NzljZC4uLidcXG4gICAgfVxcbiAgfVxcbl0pXCIsIFwibmV3X3N0clwiOiBcImNvbnN0IHJlcGxpZXMgPSByZWYoW10pXCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiAxMjEsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogMTQ0fV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiIifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDk0XHQgIHJvdXRlci5wdXNoKCcvJylcbiAgICA5NVx0fVxuICAgIDk2XHRcbiAgICA5N1x0Ly8g5qih5ouf5pWw5o2uIC0g5a6e6ZmF6aG555uu5Lit5bqU6K+l5LuOQVBJ6I635Y+WXG4gICAgOThcdC8vIOenu+mZpOS4jemcgOimgeeahG1lbnRpb25z5pWw57uEXG4gICAgOTlcdFxuICAgMTAwXHRjb25zdCBsaWtlcyA9IHJlZihbXSlcbiAgIDEwMVx0XG4gICAxMDJcdGNvbnN0IHJlcGxpZXMgPSByZWYoW1xuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxNDd3TkpYQmU4OFl3VDlmSFRwVGcyNSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjViZDQxNjNiLThlYmMtNDhkMC04MjQwLWNjYjM4Yjg5NmQ2ZSIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDFLNkE1ams3dVoxMm1zaDh0dmg1bXRiIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiLy8gXFx1NzlmYlxcdTk2NjRcXHU0ZTBkXFx1OTcwMFxcdTg5ODFcXHU3Njg0bWVudGlvbnNcXHU2NTcwXFx1N2VjNFwiLCBcIm5ld19zdHJcIjogXCIvLyBcXHU1MjFkXFx1NTljYlxcdTUzMTZcXHU2ZDg4XFx1NjA2ZlxcdTY1NzBcXHU3ZWM0XCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiA5OCwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiA5OH1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICA5OFx0Ly8g56e76Zmk5LiN6ZyA6KaB55qEbWVudGlvbnPmlbDnu4RcbiAgICA5OVx0XG4gICAxMDBcdGNvbnN0IGxpa2VzID0gcmVmKFtdKVxuICAgMTAxXHRcbiAgIDEwMlx0Y29uc3QgcmVwbGllcyA9IHJlZihbXSlcbiAgIDEwM1x0XG4gICAxMDRcdGNvbnN0IHN5c3RlbU5vdGljZXMgPSByZWYoW1xuICAgMTA1XHQgIHtcbiAgIDEwNlx0ICAgIGlkOiAxLFxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxMTViVjhxU1NBYTQ5TEJHVW1Rd3dWUCJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjU5MDA5NDRiLTlhZWYtNDcxMC1iMTdiLTY4MzJlYTY1MGI1MSIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDFEcDRpMVlrQzZ1bUgxdHVwcDhvVExwIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiLy8gXFx1OGRmM1xcdThmNmNcXHU1MjMwXFx1ODA0YVxcdTU5MjlcXHU5ODc1XFx1OTc2MlxcbmNvbnN0IGdvVG9DaGF0ID0gKHVzZXJJZCkgPT4ge1xcbiAgcm91dGVyLnB1c2goYC9jaGF0P3VzZXJJZD0ke3VzZXJJZH1gKVxcbn1cIiwgXCJuZXdfc3RyXCI6IFwiLy8gXFx1OGRmM1xcdThmNmNcXHU1MjMwXFx1ODA0YVxcdTU5MjlcXHU5ODc1XFx1OTc2MlxcbmNvbnN0IGdvVG9DaGF0ID0gKCkgPT4ge1xcbiAgcm91dGVyLnB1c2goJy9jaGF0JylcXG59XCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiAyNTQsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogMjU3fV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiIifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDk0XHQgIHJvdXRlci5wdXNoKCcvJylcbiAgICA5NVx0fVxuICAgIDk2XHRcbiAgICA5N1x0Ly8g5qih5ouf5pWw5o2uIC0g5a6e6ZmF6aG555uu5Lit5bqU6K+l5LuOQVBJ6I635Y+WXG4gICAgOThcdC8vIOWIneWni+WMlua2iOaBr+aVsOe7hFxuICAgIDk5XHRcbiAgIDEwMFx0Y29uc3QgbGlrZXMgPSByZWYoW10pXG4gICAxMDFcdFxuICAgMTAyXHRjb25zdCByZXBsaWVzID0gcmVmKFtdKVxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxSzZBNWprN3VaMTJtc2g4dHZoNW10YiJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjIyNmE2ZTY5LTkzNjMtNDc3Ni1iNjJmLWRkNGQzNjI5MmM3NyIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDE2TDJoQXBNa2dwcnZtaGN5RVZYd1dIIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiLy8gXFx1OGRmM1xcdThmNmNcXHU1MjMwXFx1ODljNlxcdTk4OTFcXHU4YmU2XFx1NjBjNVxcdTk4NzVcXG5jb25zdCBnb1RvVmlkZW8gPSAodmlkZW9JZCkgPT4ge1xcbiAgcm91dGVyLnB1c2goYC92aWRlby8ke3ZpZGVvSWR9YClcXG59XCIsIFwibmV3X3N0clwiOiBcIi8vIFxcdThkZjNcXHU4ZjZjXFx1NTIzMFxcdTg5YzZcXHU5ODkxXFx1OGJlNlxcdTYwYzVcXHU5ODc1XFxuY29uc3QgZ29Ub1ZpZGVvID0gKHZpZGVvSWQpID0+IHtcXG4gIHJvdXRlci5wdXNoKGAvdmlkZW8vJHt2aWRlb0lkfWApXFxufVxcblxcbi8vIFxcdThkZjNcXHU4ZjZjXFx1NTIzMFxcdTgwNGFcXHU1OTI5XFx1OTg3NVxcdTk3NjJcXG5jb25zdCBnb1RvQ2hhdCA9ICgpID0+IHtcXG4gIHJvdXRlci5wdXNoKCcvY2hhdCcpXFxufVwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMjQ2LCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDI0OH1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5oiR55yL5Yiw6L+Z5Liq5Ye95pWw5LiN5a2Y5Zyo77yM6K6p5oiR5re75Yqg5LiA5Liq6Lez6L2s5Yiw6IGK5aSp6aG16Z2i55qE5Ye95pWw77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJGYWlsZWQgdG8gZWRpdCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuIFNlZSBiZWxvdyBmb3IgZGV0YWlscy5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcbk5vIHJlcGxhY2VtZW50IHdhcyBwZXJmb3JtZWQsIG9sZFN0ciBkaWQgbm90IGFwcGVhciB2ZXJiYXRpbSBpbiBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5UaGUgY29udGVudCBpbiB0aGUgc3BlY2lmaWVkIHJlZ2lvbiBpczpcbiAgIDI1MFx0ICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICAgMjUxXHR9XG4gICAyNTJcdFxuICAgMjUzXHQubWVzc2FnZS1oZWFkZXIgaDIge1xuICAgMjU0XHQgIGZvbnQtc2l6ZTogMjRweDtcbiAgIDI1NVx0ICBmb250LXdlaWdodDogYm9sZDtcbiAgIDI1Nlx0ICBjb2xvcjogIzE4MTkxYztcbiAgIDI1N1x0fVxuICAgMjU4XHRcbiAgIDI1OVx0Lm1lc3NhZ2UtbGlzdCB7XG4gICAyNjBcdCAgcGFkZGluZzogMjBweCAwO1xuICAgMjYxXHR9XG5cbkRpZmYgYmV0d2VlbiBvbGRTdHIgYW5kIHRoZSBzcGVjaWZpZWQgcmVnaW9uIGlzOlxuPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLS0tIG9sZFN0clxuKysrIHJlZ2lvbkNvbnRlbnRcbkBAIC0xLDQgKzEsNCBAQFxuLS8vIOi3s+i9rOWIsOiBiuWkqemhtemdolxuLWNvbnN0IGdvVG9DaGF0ID0gKHVzZXJJZCkgPT4ge1xuLSAgcm91dGVyLnB1c2goYC9jaGF0P3VzZXJJZD0ke3VzZXJJZH1gKVxuKyAgZm9udC1zaXplOiAyNHB4O1xuKyAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4rICBjb2xvcjogIzE4MTkxYztcbiB9XG5cblxuRml4IGZhaWxlZCBzdHJfcmVwbGFjZV9lbnRyaWVzIGFjY29yZGluZ2x5IGFuZCB0cnkgYWdhaW4uXG4iLCJpc19lcnJvciI6dHJ1ZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFEcDRpMVlrQzZ1bUgxdHVwcDhvVExwIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmiJHnnIvliLDov5nkuKrlh73mlbDkuI3lrZjlnKjvvIzorqnmiJHmt7vliqDkuIDkuKrot7PovazliLDogYrlpKnpobXpnaLnmoTlh73mlbDvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJmYzNlOTJiYi00MWM0LTRmMWYtODNiNC0zMzk3ODE1YmY1NTQiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxNjQxcVI4a0hHVmdETnBMRjcyV1NGdSIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIiAgICAgICAgICAgIDxkaXYgdi1pZj1cXFwibWVzc2FnZS5pc0NoYXRcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLXRleHQgY2hhdC1tZXNzYWdlXFxcIj5cXG4gICAgICAgICAgICAgIHt7IG1lc3NhZ2UuY29udGVudCB9fVxcbiAgICAgICAgICAgIDwvZGl2PlwiLCBcIm5ld19zdHJcIjogXCIgICAgICAgICAgICA8ZGl2IHYtaWY9XFxcIm1lc3NhZ2UuaXNDaGF0XFxcIiBjbGFzcz1cXFwibWVzc2FnZS10ZXh0IGNoYXQtbWVzc2FnZVxcXCIgQGNsaWNrPVxcXCJnb1RvQ2hhdCgpXFxcIiA6Y2xhc3M9XFxcInsgJ2NsaWNrYWJsZSc6IG1lc3NhZ2UuaXNDaGF0IH1cXFwiPlxcbiAgICAgICAgICAgICAge3sgbWVzc2FnZS5jb250ZW50IH19XFxuICAgICAgICAgICAgPC9kaXY+XCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiA1MSwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiA1M31dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5pyA5ZCO77yM6K6p5oiR5Lus5re75Yqg5LiA5Liq54K55Ye76IGK5aSp5raI5oGv6Lez6L2s5Yiw6IGK5aSp6aG16Z2i55qE5Yqf6IO977yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTk5XHQgICAgbG9hZGluZy52YWx1ZSA9IGZhbHNlXG4gICAyMDBcdCAgfVxuICAgMjAxXHR9XG4gICAyMDJcdFxuICAgMjAzXHQvLyDot7PovazliLDop4bpopHor6bmg4XpobVcbiAgIDIwNFx0Y29uc3QgZ29Ub1ZpZGVvID0gKHZpZGVvSWQpID0+IHtcbiAgIDIwNVx0ICByb3V0ZXIucHVzaChgL3ZpZGVvLyR7dmlkZW9JZH1gKVxuICAgMjA2XHR9XG4gICAyMDdcdFxuICAgMjA4XHQvLyDot7PovazliLDogYrlpKnpobXpnaJcbiAgIDIwOVx0Y29uc3QgZ29Ub0NoYXQgPSAoKSA9PiB7XG4gICAyMTBcdCAgcm91dGVyLnB1c2goJy9jaGF0JylcbiAgIDIxMVx0fVxuICAgMjEyXHRcbiAgIDIxM1x0Ly8g57uE5Lu25oyC6L295pe26I635Y+W5raI5oGvXG4gICAyMTRcdG9uTW91bnRlZCgoKSA9PiB7XG4gICAyMTVcdCAgaWYgKGlzTG9naW4udmFsdWUpIHtcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMTZMMmhBcE1rZ3Bydm1oY3lFVlh3V0gifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IuacgOWQju+8jOiuqeaIkeS7rOa3u+WKoOS4gOS4queCueWHu+iBiuWkqea2iOaBr+i3s+i9rOWIsOiBiuWkqemhtemdoueahOWKn+iDve+8mlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjAwNzlkMGRjLThmMWQtNDBhYi1hMDllLTllZWQ5ZDQ5NTA3YyIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuaIkeW3sue7j+WujOaIkOS6hua2iOaBr+S4reW/g+mhtemdoueahOmHjeaWsOmAgumFje+8jOS7peWMuemFjeaWsOeahOaVsOaNrue7k+aehOOAguS7peS4i+aYr+aIkeaJgOWBmueahOS/ruaUue+8mlxuXG4jIyMgMS4g5pu05paw5pWw5o2u5aSE55CG6YC76L6RXG4tIOS/ruaUueS6hiBgZ2V0VXNlck1lc3NhZ2VzYCDlh73mlbDvvIzkvb/lhbbog73lpJ/lpITnkIbmlrDnmoTmlbDmja7nu5PmnoRcbi0g546w5Zyo5a6D5Y+v5Lul5ZCM5pe25aSE55CG6KeG6aKR54K56LWe5raI5oGv77yIYHZpZGVvTGlrZWDvvInlkozogYrlpKnmtojmga/vvIhgdXNlckNoYXRNZXNzYWdlRHRvYO+8iVxuLSDkuLrogYrlpKnmtojmga/mt7vliqDkuoYgYGlzQ2hhdGAg5qCH6K6w77yM5Lul5L6/5Zyo55WM6Z2i5LiK5Yy65YiG5LiN5ZCM57G75Z6L55qE5raI5oGvXG5cbiMjIyAyLiDmm7TmlrDoj5zljZXpoblcbi0g56e76Zmk5LqG5LiN5YaN6ZyA6KaB55qEIFwiQOaIkeeahFwiIOiPnOWNlemhuVxuLSDlsIYgXCLlm57lpI1cIiDoj5zljZXpobnmlLnkuLogXCLogYrlpKnmtojmga9cIlxuLSDmt7vliqDkuobmtojmga/mlbDph4/lvr3nq6DvvIzmmL7npLrmr4/np43nsbvlnovnmoTmtojmga/mlbDph49cblxuIyMjIDMuIOabtOaWsOa2iOaBr+aYvuekulxuLSDkuLrogYrlpKnmtojmga/mt7vliqDkuobnibnmrornmoTmoLflvI/vvIzkvb/lhbbnnIvotbfmnaXlg4/ogYrlpKnmsJTms6Fcbi0g5Li654K56LWe5raI5oGv5L+d55WZ5LqG5Y6f5pyJ55qE5Y2h54mH5byP5biD5bGA77yM5pi+56S66KeG6aKR5bCB6Z2i5ZKM5qCH6aKYXG4tIOa3u+WKoOS6hueCueWHu+iBiuWkqea2iOaBr+i3s+i9rOWIsOiBiuWkqemhtemdoueahOWKn+iDvVxuLSDkv53nlZnkuobngrnlh7vop4bpopHljaHniYfot7PovazliLDop4bpopHor6bmg4XpobXnmoTlip/og71cblxuIyMjIDQuIOS8mOWMluagt+W8j1xuLSDmt7vliqDkuobogYrlpKnmtojmga/nmoTmsJTms6HmoLflvI9cbi0g5re75Yqg5LqG5b6956ug5qC35byP77yM5L2/55So5LqG5Li76aKY6ImyXG4tIOa3u+WKoOS6huWPr+eCueWHu+WFg+e0oOeahOaCrOWBnOaViOaenFxuXG4jIyMgNS4g5YW25LuW5pS56L+bXG4tIOa3u+WKoOS6huWKoOi9veeKtuaAgeaMh+ekuuWZqFxuLSDpu5jorqTmmL7npLrngrnotZ7mtojmga/moIfnrb7pobVcbi0g56e76Zmk5LqG5LiN5YaN6ZyA6KaB55qE5qih5ouf5pWw5o2uXG5cbueOsOWcqO+8jOa2iOaBr+S4reW/g+mhtemdouWPr+S7peato+ehruWkhOeQhuWSjOaYvuekuuaWsOeahOaVsOaNrue7k+aehO+8jOWMheaLrOinhumikeeCuei1nua2iOaBr+WSjOiBiuWkqea2iOaBr+OAgueUqOaIt+WPr+S7pemAmui/h+eCueWHu+ebuOW6lOeahOa2iOaBr+i3s+i9rOWIsOinhumikeivpuaDhemhteaIluiBiuWkqemhtemdouOAglxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICA0NFx0ICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1lc3NhZ2UtdXNlcm5hbWVcIj57eyBtZXNzYWdlLnVzZXJuYW1lIH19PC9zcGFuPlxuICAgIDQ1XHQgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWVzc2FnZS10aW1lXCI+e3sgbWVzc2FnZS50aW1lIH19PC9zcGFuPlxuICAgIDQ2XHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA0N1x0ICAgICAgICAgICAgPCEtLSDogYrlpKnmtojmga/mmL7npLogLS0+XG4gICAgNDhcdCAgICAgICAgICAgIDxkaXYgdi1pZj1cIm1lc3NhZ2UuaXNDaGF0XCIgY2xhc3M9XCJtZXNzYWdlLXRleHQgY2hhdC1tZXNzYWdlXCIgQGNsaWNrPVwiZ29Ub0NoYXQoKVwiIDpjbGFzcz1cInsgJ2NsaWNrYWJsZSc6IG1lc3NhZ2UuaXNDaGF0IH1cIj5cbiAgICA0OVx0ICAgICAgICAgICAgICB7eyBtZXNzYWdlLmNvbnRlbnQgfX1cbiAgICA1MFx0ICAgICAgICAgICAgPC9kaXY+XG4gICAgNTFcdFxuICAgIDUyXHQgICAgICAgICAgICA8IS0tIOeCuei1nua2iOaBr+aYvuekuiAtLT5cbiAgICA1M1x0ICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZT5cbiAgICA1NFx0ICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS10ZXh0XCI+e3sgbWVzc2FnZS5jb250ZW50IH19PC9kaXY+XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDE2NDFxUjhrSEdWZ0ROcExGNzJXU0Z1In19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmiJHlt7Lnu4/lrozmiJDkuobmtojmga/kuK3lv4PpobXpnaLnmoTph43mlrDpgILphY3vvIzku6XljLnphY3mlrDnmoTmlbDmja7nu5PmnoTjgILku6XkuIvmmK/miJHmiYDlgZrnmoTkv67mlLnvvJpcblxuIyMjIDEuIOabtOaWsOaVsOaNruWkhOeQhumAu+i+kVxuLSDkv67mlLnkuoYgYGdldFVzZXJNZXNzYWdlc2Ag5Ye95pWw77yM5L2/5YW26IO95aSf5aSE55CG5paw55qE5pWw5o2u57uT5p6EXG4tIOeOsOWcqOWug+WPr+S7peWQjOaXtuWkhOeQhuinhumikeeCuei1nua2iOaBr++8iGB2aWRlb0xpa2Vg77yJ5ZKM6IGK5aSp5raI5oGv77yIYHVzZXJDaGF0TWVzc2FnZUR0b2DvvIlcbi0g5Li66IGK5aSp5raI5oGv5re75Yqg5LqGIGBpc0NoYXRgIOagh+iusO+8jOS7peS+v+WcqOeVjOmdouS4iuWMuuWIhuS4jeWQjOexu+Wei+eahOa2iOaBr1xuXG4jIyMgMi4g5pu05paw6I+c5Y2V6aG5XG4tIOenu+mZpOS6huS4jeWGjemcgOimgeeahCBcIkDmiJHnmoRcIiDoj5zljZXpoblcbi0g5bCGIFwi5Zue5aSNXCIg6I+c5Y2V6aG55pS55Li6IFwi6IGK5aSp5raI5oGvXCJcbi0g5re75Yqg5LqG5raI5oGv5pWw6YeP5b6956ug77yM5pi+56S65q+P56eN57G75Z6L55qE5raI5oGv5pWw6YePXG5cbiMjIyAzLiDmm7TmlrDmtojmga/mmL7npLpcbi0g5Li66IGK5aSp5raI5oGv5re75Yqg5LqG54m55q6K55qE5qC35byP77yM5L2/5YW255yL6LW35p2l5YOP6IGK5aSp5rCU5rOhXG4tIOS4uueCuei1nua2iOaBr+S/neeVmeS6huWOn+acieeahOWNoeeJh+W8j+W4g+WxgO+8jOaYvuekuuinhumikeWwgemdouWSjOagh+mimFxuLSDmt7vliqDkuobngrnlh7vogYrlpKnmtojmga/ot7PovazliLDogYrlpKnpobXpnaLnmoTlip/og71cbi0g5L+d55WZ5LqG54K55Ye76KeG6aKR5Y2h54mH6Lez6L2s5Yiw6KeG6aKR6K+m5oOF6aG155qE5Yqf6IO9XG5cbiMjIyA0LiDkvJjljJbmoLflvI9cbi0g5re75Yqg5LqG6IGK5aSp5raI5oGv55qE5rCU5rOh5qC35byPXG4tIOa3u+WKoOS6huW+veeroOagt+W8j++8jOS9v+eUqOS6huS4u+mimOiJslxuLSDmt7vliqDkuoblj6/ngrnlh7vlhYPntKDnmoTmgqzlgZzmlYjmnpxcblxuIyMjIDUuIOWFtuS7luaUuei/m1xuLSDmt7vliqDkuobliqDovb3nirbmgIHmjIfnpLrlmahcbi0g6buY6K6k5pi+56S654K56LWe5raI5oGv5qCH562+6aG1XG4tIOenu+mZpOS6huS4jeWGjemcgOimgeeahOaooeaLn+aVsOaNrlxuXG7njrDlnKjvvIzmtojmga/kuK3lv4PpobXpnaLlj6/ku6XmraPnoa7lpITnkIblkozmmL7npLrmlrDnmoTmlbDmja7nu5PmnoTvvIzljIXmi6zop4bpopHngrnotZ7mtojmga/lkozogYrlpKnmtojmga/jgILnlKjmiLflj6/ku6XpgJrov4fngrnlh7vnm7jlupTnmoTmtojmga/ot7PovazliLDop4bpopHor6bmg4XpobXmiJbogYrlpKnpobXpnaLjgIJcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsicmVxdWVzdF9pZCI6ImI2ZTE3NTBlLTRiMWEtNDU1Mi04ZWE4LTViOGY1MmJhYzI1MCIsInV1aWQiOiJmZDk5NmM4NC1jZTk3LTRmOTktODhlMC1iZGM3NWMxNDEwZGEiLCJjaGF0SXRlbVR5cGUiOiJhZ2VudGljLWNoZWNrcG9pbnQtZGVsaW1pdGVyIiwic3RhdHVzIjoic3VjY2VzcyIsImZyb21UaW1lc3RhbXAiOjE3NDQ4NjA0MTIwMTksInRvVGltZXN0YW1wIjoxNzQ0ODcwMzAzMzY5LCJzZWVuX3N0YXRlIjoic2VlbiJ9LHsicmVxdWVzdF9pZCI6IjBjYTQxZGFlLTQxZTMtNDRmNi05NmQ3LTUyZDIxMjQ4YWNmZCIsInN0YXR1cyI6ImNhbmNlbGxlZCIsImNoYXRJdGVtVHlwZSI6ImFnZW50aWMtdHVybi1kZWxpbWl0ZXIifSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMDA4ZTUxYzQtNjkxZi00MDAwLTg0MzItNDA5NGYyYTNhOGQ3IiwicmVxdWVzdF9tZXNzYWdlIjoi546w5Zyo6I635Y+W5L+h5oGv5pWw5o2u5Lit55qEdXNlckNoYXRNZXNzYWdlRHRv5pWw57uE5ZCM5re75Yqg5LqG5LiA5LiqdXNlcm5hbWXlrZfmrrXvvIzot7Povaznp4Hkv6HpobXpnaLml7bpnIDopoHov5vooYzpgILphY0iLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoi546w5Zyo6I635Y+W5L+h5oGv5pWw5o2u5Lit55qEdXNlckNoYXRNZXNzYWdlRHRv5pWw57uE5ZCM5re75Yqg5LqG5LiA5LiqdXNlcm5hbWXlrZfmrrXvvIzot7Povaznp4Hkv6HpobXpnaLml7bpnIDopoHov5vooYzpgILphY0ifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDFHRXpycHh6QVlQUm1XTGhDa3VWWnFxIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiICAgICAgLy8gXFx1NTkwNFxcdTc0MDZcXHU4MDRhXFx1NTkyOVxcdTZkODhcXHU2MDZmXFx1NjU3MFxcdTYzNmVcXG4gICAgICBpZiAobWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvICYmIG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0by5sZW5ndGggPiAwKSB7XFxuICAgICAgICByZXBsaWVzLnZhbHVlID0gbWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvLm1hcChpdGVtID0+ICh7XFxuICAgICAgICAgIGlkOiBpdGVtLmlkLFxcbiAgICAgICAgICB1c2VybmFtZTogaXRlbS5uaWNrbmFtZSxcXG4gICAgICAgICAgYXZhdGFyOiBpdGVtLnVzZXJQaWMsXFxuICAgICAgICAgIHRpbWU6IGZvcm1hdERhdGUoaXRlbS5zZW5kVGltZSksXFxuICAgICAgICAgIGNvbnRlbnQ6IGl0ZW0uY29udGVudCxcXG4gICAgICAgICAgaXNDaGF0OiB0cnVlXFxuICAgICAgICB9KSlcIiwgXCJuZXdfc3RyXCI6IFwiICAgICAgLy8gXFx1NTkwNFxcdTc0MDZcXHU4MDRhXFx1NTkyOVxcdTZkODhcXHU2MDZmXFx1NjU3MFxcdTYzNmVcXG4gICAgICBpZiAobWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvICYmIG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0by5sZW5ndGggPiAwKSB7XFxuICAgICAgICByZXBsaWVzLnZhbHVlID0gbWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvLm1hcChpdGVtID0+ICh7XFxuICAgICAgICAgIGlkOiBpdGVtLmlkLFxcbiAgICAgICAgICB1c2VybmFtZTogaXRlbS5uaWNrbmFtZSxcXG4gICAgICAgICAgY2hhdFVzZXJuYW1lOiBpdGVtLnVzZXJuYW1lLCAvLyBcXHU0ZmRkXFx1NWI1OFxcdTc1MjhcXHU2MjM3XFx1NTQwZFxcdTRlZTVcXHU0ZmJmXFx1OGRmM1xcdThmNmNcXHU1MjMwXFx1ODA0YVxcdTU5MjlcXHU5ODc1XFx1OTc2MlxcbiAgICAgICAgICBhdmF0YXI6IGl0ZW0udXNlclBpYyxcXG4gICAgICAgICAgdGltZTogZm9ybWF0RGF0ZShpdGVtLnNlbmRUaW1lKSxcXG4gICAgICAgICAgY29udGVudDogaXRlbS5jb250ZW50LFxcbiAgICAgICAgICBpc0NoYXQ6IHRydWVcXG4gICAgICAgIH0pKVwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMjI0LCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDIzM31dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5oiR5bCG5L+u5pS55raI5oGv5Lit5b+D6aG16Z2i77yM5Lul6YCC6YWNIGB1c2VyQ2hhdE1lc3NhZ2VEdG9gIOaVsOe7hOS4reaWsOWinueahCBgdXNlcm5hbWVgIOWtl+aute+8jOW5tuWcqOi3s+i9rOWIsOengeS/oemhtemdouaXtuS8oOmAkui/meS4queUqOaIt+WQjeWPguaVsOOAglxuXG7orqnmiJHku6zov5vooYzku6XkuIvkv67mlLnvvJpcblxuMS4g5pu05pawIGBnZXRVc2VyTWVzc2FnZXNgIOWHveaVsO+8jOS/neWtmOiBiuWkqea2iOaBr+S4reeahCBgdXNlcm5hbWVgIOWtl+autVxuMi4g5L+u5pS5IGBnb1RvQ2hhdGAg5Ye95pWw77yM5L2/5YW25o6l5pS255So5oi35ZCN5Y+C5pWw5bm25Lyg6YCS57uZ6IGK5aSp6aG16Z2iXG4zLiDmm7TmlrDogYrlpKnmtojmga/ngrnlh7vkuovku7bvvIzkvKDpgJLnlKjmiLflkI3lj4LmlbBcblxu6K6p5oiR5byA5aeL5L+u5pS577yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjowLCJ0ZXh0X25vZGUiOnsiY29udGVudCI6IueOsOWcqOiOt+WPluS/oeaBr+aVsOaNruS4reeahHVzZXJDaGF0TWVzc2FnZUR0b+aVsOe7hOWQjOa3u+WKoOS6huS4gOS4qnVzZXJuYW1l5a2X5q6177yM6Lez6L2s56eB5L+h6aG16Z2i5pe26ZyA6KaB6L+b6KGM6YCC6YWNIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmiJHlsIbkv67mlLnmtojmga/kuK3lv4PpobXpnaLvvIzku6XpgILphY0gYHVzZXJDaGF0TWVzc2FnZUR0b2Ag5pWw57uE5Lit5paw5aKe55qEIGB1c2VybmFtZWAg5a2X5q6177yM5bm25Zyo6Lez6L2s5Yiw56eB5L+h6aG16Z2i5pe25Lyg6YCS6L+Z5Liq55So5oi35ZCN5Y+C5pWw44CCXG5cbuiuqeaIkeS7rOi/m+ihjOS7peS4i+S/ruaUue+8mlxuXG4xLiDmm7TmlrAgYGdldFVzZXJNZXNzYWdlc2Ag5Ye95pWw77yM5L+d5a2Y6IGK5aSp5raI5oGv5Lit55qEIGB1c2VybmFtZWAg5a2X5q61XG4yLiDkv67mlLkgYGdvVG9DaGF0YCDlh73mlbDvvIzkvb/lhbbmjqXmlLbnlKjmiLflkI3lj4LmlbDlubbkvKDpgJLnu5nogYrlpKnpobXpnaJcbjMuIOabtOaWsOiBiuWkqea2iOaBr+eCueWHu+S6i+S7tu+8jOS8oOmAkueUqOaIt+WQjeWPguaVsFxuXG7orqnmiJHlvIDlp4vkv67mlLnvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJhYWRjZTRiMi1lZTc0LTQxM2YtOTk0Ni01MmQwNTExYmFjNDAiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxNTJCVXIzd3dOVUZEQWd4OWpKUmppdSIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIi8vIFxcdThkZjNcXHU4ZjZjXFx1NTIzMFxcdTgwNGFcXHU1OTI5XFx1OTg3NVxcdTk3NjJcXG5jb25zdCBnb1RvQ2hhdCA9ICgpID0+IHtcXG4gIHJvdXRlci5wdXNoKCcvY2hhdCcpXFxufVwiLCBcIm5ld19zdHJcIjogXCIvLyBcXHU4ZGYzXFx1OGY2Y1xcdTUyMzBcXHU4MDRhXFx1NTkyOVxcdTk4NzVcXHU5NzYyXFxuY29uc3QgZ29Ub0NoYXQgPSAodXNlcm5hbWUpID0+IHtcXG4gIGlmICh1c2VybmFtZSkge1xcbiAgICAvLyBcXHU1OTgyXFx1Njc5Y1xcdTY3MDlcXHU3NTI4XFx1NjIzN1xcdTU0MGRcXHVmZjBjXFx1NTIxOVxcdTRmMjBcXHU5MDEyXFx1N2VkOVxcdTgwNGFcXHU1OTI5XFx1OTg3NVxcdTk3NjJcXG4gICAgcm91dGVyLnB1c2goYC9jaGF0P3VzZXJuYW1lPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHVzZXJuYW1lKX1gKVxcbiAgfSBlbHNlIHtcXG4gICAgLy8gXFx1NTk4MlxcdTY3OWNcXHU2Y2ExXFx1NjcwOVxcdTc1MjhcXHU2MjM3XFx1NTQwZFxcdWZmMGNcXHU1MjE5XFx1NzZmNFxcdTYzYTVcXHU4ZGYzXFx1OGY2Y1xcdTUyMzBcXHU4MDRhXFx1NTkyOVxcdTk4NzVcXHU5NzYyXFxuICAgIHJvdXRlci5wdXNoKCcvY2hhdCcpXFxuICB9XFxufVwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMjA4LCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDIxMX1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi546w5Zyo77yM6K6p5oiR5Lus5L+u5pS5IGBnb1RvQ2hhdGAg5Ye95pWw77yM5L2/5YW25o6l5pS255So5oi35ZCN5Y+C5pWw5bm25Lyg6YCS57uZ6IGK5aSp6aG16Z2i77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTc3XHQgICAgICAgICAgfVxuICAgMTc4XHQgICAgICAgIH0pKVxuICAgMTc5XHQgICAgICB9XG4gICAxODBcdFxuICAgMTgxXHQgICAgICAvLyDlpITnkIbogYrlpKnmtojmga/mlbDmja5cbiAgIDE4Mlx0ICAgICAgaWYgKG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0byAmJiBtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8ubGVuZ3RoID4gMCkge1xuICAgMTgzXHQgICAgICAgIHJlcGxpZXMudmFsdWUgPSBtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8ubWFwKGl0ZW0gPT4gKHtcbiAgIDE4NFx0ICAgICAgICAgIGlkOiBpdGVtLmlkLFxuICAgMTg1XHQgICAgICAgICAgdXNlcm5hbWU6IGl0ZW0ubmlja25hbWUsXG4gICAxODZcdCAgICAgICAgICBjaGF0VXNlcm5hbWU6IGl0ZW0udXNlcm5hbWUsIC8vIOS/neWtmOeUqOaIt+WQjeS7peS+v+i3s+i9rOWIsOiBiuWkqemhtemdolxuICAgMTg3XHQgICAgICAgICAgYXZhdGFyOiBpdGVtLnVzZXJQaWMsXG4gICAxODhcdCAgICAgICAgICB0aW1lOiBmb3JtYXREYXRlKGl0ZW0uc2VuZFRpbWUpLFxuICAgMTg5XHQgICAgICAgICAgY29udGVudDogaXRlbS5jb250ZW50LFxuICAgMTkwXHQgICAgICAgICAgaXNDaGF0OiB0cnVlXG4gICAxOTFcdCAgICAgICAgfSkpXG4gICAxOTJcdCAgICAgIH1cbiAgIDE5M1x0ICAgIH0gZWxzZSB7XG4gICAxOTRcdCAgICAgIEVsTWVzc2FnZS5lcnJvcign6I635Y+W5raI5oGv5aSx6LSl77yaJyArIHJlcy5tZXNzYWdlKVxuICAgMTk1XHQgICAgfVxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxR0V6cnB4ekFZUFJtV0xoQ2t1VlpxcSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi546w5Zyo77yM6K6p5oiR5Lus5L+u5pS5IGBnb1RvQ2hhdGAg5Ye95pWw77yM5L2/5YW25o6l5pS255So5oi35ZCN5Y+C5pWw5bm25Lyg6YCS57uZ6IGK5aSp6aG16Z2i77yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiNWE2Yjg0ZjQtMjZjZC00MTk1LWIxMmYtMjM5NTgzMDg4YjQ0IiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMVdjS0c0WGNmR0pMTHZBUXpFb2h4NTciLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIgICAgICAgICAgICA8ZGl2IHYtaWY9XFxcIm1lc3NhZ2UuaXNDaGF0XFxcIiBjbGFzcz1cXFwibWVzc2FnZS10ZXh0IGNoYXQtbWVzc2FnZVxcXCIgQGNsaWNrPVxcXCJnb1RvQ2hhdCgpXFxcIiA6Y2xhc3M9XFxcInsgJ2NsaWNrYWJsZSc6IG1lc3NhZ2UuaXNDaGF0IH1cXFwiPlwiLCBcIm5ld19zdHJcIjogXCIgICAgICAgICAgICA8ZGl2IHYtaWY9XFxcIm1lc3NhZ2UuaXNDaGF0XFxcIiBjbGFzcz1cXFwibWVzc2FnZS10ZXh0IGNoYXQtbWVzc2FnZVxcXCIgQGNsaWNrPVxcXCJnb1RvQ2hhdChtZXNzYWdlLmNoYXRVc2VybmFtZSlcXFwiIDpjbGFzcz1cXFwieyAnY2xpY2thYmxlJzogbWVzc2FnZS5pc0NoYXQgfVxcXCI+XCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiA0OCwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiA0OH1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5pyA5ZCO77yM6K6p5oiR5Lus5pu05paw6IGK5aSp5raI5oGv54K55Ye75LqL5Lu277yM5Lyg6YCS55So5oi35ZCN5Y+C5pWw77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMjA1XHRjb25zdCBnb1RvVmlkZW8gPSAodmlkZW9JZCkgPT4ge1xuICAgMjA2XHQgIHJvdXRlci5wdXNoKGAvdmlkZW8vJHt2aWRlb0lkfWApXG4gICAyMDdcdH1cbiAgIDIwOFx0XG4gICAyMDlcdC8vIOi3s+i9rOWIsOiBiuWkqemhtemdolxuICAgMjEwXHRjb25zdCBnb1RvQ2hhdCA9ICh1c2VybmFtZSkgPT4ge1xuICAgMjExXHQgIGlmICh1c2VybmFtZSkge1xuICAgMjEyXHQgICAgLy8g5aaC5p6c5pyJ55So5oi35ZCN77yM5YiZ5Lyg6YCS57uZ6IGK5aSp6aG16Z2iXG4gICAyMTNcdCAgICByb3V0ZXIucHVzaChgL2NoYXQ/dXNlcm5hbWU9JHtlbmNvZGVVUklDb21wb25lbnQodXNlcm5hbWUpfWApXG4gICAyMTRcdCAgfSBlbHNlIHtcbiAgIDIxNVx0ICAgIC8vIOWmguaenOayoeacieeUqOaIt+WQje+8jOWImeebtOaOpei3s+i9rOWIsOiBiuWkqemhtemdolxuICAgMjE2XHQgICAgcm91dGVyLnB1c2goJy9jaGF0JylcbiAgIDIxN1x0ICB9XG4gICAyMThcdH1cbiAgIDIxOVx0XG4gICAyMjBcdC8vIOe7hOS7tuaMgui9veaXtuiOt+WPlua2iOaBr1xuICAgMjIxXHRvbk1vdW50ZWQoKCkgPT4ge1xuICAgMjIyXHQgIGlmIChpc0xvZ2luLnZhbHVlKSB7XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDE1MkJVcjN3d05VRkRBZ3g5akpSaml1In19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmnIDlkI7vvIzorqnmiJHku6zmm7TmlrDogYrlpKnmtojmga/ngrnlh7vkuovku7bvvIzkvKDpgJLnlKjmiLflkI3lj4LmlbDvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIxYTkyNDY5Ny1iMDZmLTRjMzUtYTk5NC05ZGJlNzk2YWE0N2QiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLmiJHlt7Lnu4/lrozmiJDkuobmtojmga/kuK3lv4PpobXpnaLnmoTkv67mlLnvvIzku6XpgILphY0gYHVzZXJDaGF0TWVzc2FnZUR0b2Ag5pWw57uE5Lit5paw5aKe55qEIGB1c2VybmFtZWAg5a2X5q6177yM5bm25Zyo6Lez6L2s5Yiw56eB5L+h6aG16Z2i5pe25Lyg6YCS6L+Z5Liq55So5oi35ZCN5Y+C5pWw44CC5Lul5LiL5piv5oiR5omA5YGa55qE5L+u5pS577yaXG5cbiMjIyAxLiDmm7TmlrDmlbDmja7lpITnkIbpgLvovpFcbi0g5Zyo5aSE55CG6IGK5aSp5raI5oGv5pWw5o2u5pe277yM5re75Yqg5LqGIGBjaGF0VXNlcm5hbWVgIOWtl+aute+8jOS/neWtmCBBUEkg6L+U5Zue55qEIGB1c2VybmFtZWAg5YC8XG4tIOi/meagt+aIkeS7rOWPr+S7peWcqOeCueWHu+iBiuWkqea2iOaBr+aXtuiOt+WPluWIsOato+ehrueahOeUqOaIt+WQjVxuXG4jIyMgMi4g5pS56L+bIGBnb1RvQ2hhdGAg5Ye95pWwXG4tIOS/ruaUueS6hiBgZ29Ub0NoYXRgIOWHveaVsO+8jOS9v+WFtuaOpeaUtueUqOaIt+WQjeWPguaVsFxuLSDlpoLmnpzmj5DkvpvkuobnlKjmiLflkI3vvIzliJnlsIblhbbkvZzkuLrmn6Xor6Llj4LmlbDkvKDpgJLnu5nogYrlpKnpobXpnaLvvIhgL2NoYXQ/dXNlcm5hbWU9eHh4YO+8iVxuLSDlpoLmnpzmsqHmnInmj5DkvpvnlKjmiLflkI3vvIzliJnnm7TmjqXot7PovazliLDogYrlpKnpobXpnaLvvIhgL2NoYXRg77yJXG4tIOS9v+eUqCBgZW5jb2RlVVJJQ29tcG9uZW50YCDnoa7kv53nlKjmiLflkI3kuK3nmoTnibnmrorlrZfnrKbkuI3kvJrnoLTlnY8gVVJMIOe7k+aehFxuXG4jIyMgMy4g5pu05paw6IGK5aSp5raI5oGv54K55Ye75LqL5Lu2XG4tIOS/ruaUueS6huiBiuWkqea2iOaBr+eahOeCueWHu+S6i+S7tu+8jOS8oOmAkiBgbWVzc2FnZS5jaGF0VXNlcm5hbWVgIOe7mSBgZ29Ub0NoYXRgIOWHveaVsFxuLSDov5nmoLflvZPnlKjmiLfngrnlh7vogYrlpKnmtojmga/ml7bvvIzns7vnu5/kvJroh6rliqjot7PovazliLDkuI7or6XnlKjmiLfnmoTnp4Hkv6HpobXpnaJcblxu546w5Zyo77yM5b2T55So5oi354K55Ye76IGK5aSp5raI5oGv5pe277yM57O757uf5Lya5bCG5raI5oGv5Lit55qE55So5oi35ZCN5L2c5Li65Y+C5pWw5Lyg6YCS57uZ6IGK5aSp6aG16Z2i77yM5a6e546w5LqG5pu057K+56Gu55qE5a+86Iiq5Yqf6IO944CC6L+Z5qC355So5oi35Y+v5Lul55u05o6l6L+b5YWl5LiO54m55a6a55So5oi355qE56eB5L+h5a+56K+d77yM6ICM5LiN6ZyA6KaB5Zyo6IGK5aSp6aG16Z2i5Lit5YaN5qyh5pCc57Si5oiW6YCJ5oup6IGU57O75Lq644CCXG5cbui/meS6m+S/ruaUueWujOWFqOmAgumFjeS6huaWsOeahOaVsOaNrue7k+aehO+8jOW5tuaPkOWNh+S6hueUqOaIt+S9k+mqjOOAglxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICA0NFx0ICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1lc3NhZ2UtdXNlcm5hbWVcIj57eyBtZXNzYWdlLnVzZXJuYW1lIH19PC9zcGFuPlxuICAgIDQ1XHQgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWVzc2FnZS10aW1lXCI+e3sgbWVzc2FnZS50aW1lIH19PC9zcGFuPlxuICAgIDQ2XHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA0N1x0ICAgICAgICAgICAgPCEtLSDogYrlpKnmtojmga/mmL7npLogLS0+XG4gICAgNDhcdCAgICAgICAgICAgIDxkaXYgdi1pZj1cIm1lc3NhZ2UuaXNDaGF0XCIgY2xhc3M9XCJtZXNzYWdlLXRleHQgY2hhdC1tZXNzYWdlXCIgQGNsaWNrPVwiZ29Ub0NoYXQobWVzc2FnZS5jaGF0VXNlcm5hbWUpXCIgOmNsYXNzPVwieyAnY2xpY2thYmxlJzogbWVzc2FnZS5pc0NoYXQgfVwiPlxuICAgIDQ5XHQgICAgICAgICAgICAgIHt7IG1lc3NhZ2UuY29udGVudCB9fVxuICAgIDUwXHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA1MVx0XG4gICAgNTJcdCAgICAgICAgICAgIDwhLS0g54K56LWe5raI5oGv5pi+56S6IC0tPlxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxV2NLRzRYY2ZHSkxMdkFRekVvaHg1NyJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5oiR5bey57uP5a6M5oiQ5LqG5raI5oGv5Lit5b+D6aG16Z2i55qE5L+u5pS577yM5Lul6YCC6YWNIGB1c2VyQ2hhdE1lc3NhZ2VEdG9gIOaVsOe7hOS4reaWsOWinueahCBgdXNlcm5hbWVgIOWtl+aute+8jOW5tuWcqOi3s+i9rOWIsOengeS/oemhtemdouaXtuS8oOmAkui/meS4queUqOaIt+WQjeWPguaVsOOAguS7peS4i+aYr+aIkeaJgOWBmueahOS/ruaUue+8mlxuXG4jIyMgMS4g5pu05paw5pWw5o2u5aSE55CG6YC76L6RXG4tIOWcqOWkhOeQhuiBiuWkqea2iOaBr+aVsOaNruaXtu+8jOa3u+WKoOS6hiBgY2hhdFVzZXJuYW1lYCDlrZfmrrXvvIzkv53lrZggQVBJIOi/lOWbnueahCBgdXNlcm5hbWVgIOWAvFxuLSDov5nmoLfmiJHku6zlj6/ku6XlnKjngrnlh7vogYrlpKnmtojmga/ml7bojrflj5bliLDmraPnoa7nmoTnlKjmiLflkI1cblxuIyMjIDIuIOaUuei/myBgZ29Ub0NoYXRgIOWHveaVsFxuLSDkv67mlLnkuoYgYGdvVG9DaGF0YCDlh73mlbDvvIzkvb/lhbbmjqXmlLbnlKjmiLflkI3lj4LmlbBcbi0g5aaC5p6c5o+Q5L6b5LqG55So5oi35ZCN77yM5YiZ5bCG5YW25L2c5Li65p+l6K+i5Y+C5pWw5Lyg6YCS57uZ6IGK5aSp6aG16Z2i77yIYC9jaGF0P3VzZXJuYW1lPXh4eGDvvIlcbi0g5aaC5p6c5rKh5pyJ5o+Q5L6b55So5oi35ZCN77yM5YiZ55u05o6l6Lez6L2s5Yiw6IGK5aSp6aG16Z2i77yIYC9jaGF0YO+8iVxuLSDkvb/nlKggYGVuY29kZVVSSUNvbXBvbmVudGAg56Gu5L+d55So5oi35ZCN5Lit55qE54m55q6K5a2X56ym5LiN5Lya56C05Z2PIFVSTCDnu5PmnoRcblxuIyMjIDMuIOabtOaWsOiBiuWkqea2iOaBr+eCueWHu+S6i+S7tlxuLSDkv67mlLnkuobogYrlpKnmtojmga/nmoTngrnlh7vkuovku7bvvIzkvKDpgJIgYG1lc3NhZ2UuY2hhdFVzZXJuYW1lYCDnu5kgYGdvVG9DaGF0YCDlh73mlbBcbi0g6L+Z5qC35b2T55So5oi354K55Ye76IGK5aSp5raI5oGv5pe277yM57O757uf5Lya6Ieq5Yqo6Lez6L2s5Yiw5LiO6K+l55So5oi355qE56eB5L+h6aG16Z2iXG5cbueOsOWcqO+8jOW9k+eUqOaIt+eCueWHu+iBiuWkqea2iOaBr+aXtu+8jOezu+e7n+S8muWwhua2iOaBr+S4reeahOeUqOaIt+WQjeS9nOS4uuWPguaVsOS8oOmAkue7meiBiuWkqemhtemdou+8jOWunueOsOS6huabtOeyvuehrueahOWvvOiIquWKn+iDveOAgui/meagt+eUqOaIt+WPr+S7peebtOaOpei/m+WFpeS4jueJueWumueUqOaIt+eahOengeS/oeWvueivne+8jOiAjOS4jemcgOimgeWcqOiBiuWkqemhtemdouS4reWGjeasoeaQnOe0ouaIlumAieaLqeiBlOezu+S6uuOAglxuXG7ov5nkupvkv67mlLnlrozlhajpgILphY3kuobmlrDnmoTmlbDmja7nu5PmnoTvvIzlubbmj5DljYfkuobnlKjmiLfkvZPpqozjgIJcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsicmVxdWVzdF9pZCI6IjJjOTA1OGNjLTkzNzQtNDQyZC05ZjhmLWIzMTYxMDJjNjFjYyIsInV1aWQiOiI5NDI4ZjZlNi1hN2IyLTRmOTAtOTUzOC05OTFmZjQ0M2RmNTYiLCJjaGF0SXRlbVR5cGUiOiJhZ2VudGljLWNoZWNrcG9pbnQtZGVsaW1pdGVyIiwic3RhdHVzIjoic3VjY2VzcyIsImZyb21UaW1lc3RhbXAiOjE3NDQ4NzAzMDMzNjksInRvVGltZXN0YW1wIjoxNzQ0ODcxMDg2MDQ1LCJzZWVuX3N0YXRlIjoic2VlbiJ9LHsicmVxdWVzdF9pZCI6ImY0YzZkNzhmLWY0YjctNDMxNi05NzY0LWMxZmFkNmVlNWU1MSIsInN0YXR1cyI6ImNhbmNlbGxlZCIsImNoYXRJdGVtVHlwZSI6ImFnZW50aWMtdHVybi1kZWxpbWl0ZXIifSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiYjk0NTc4NzktZTY4Ni00OTc4LTk5NGQtMDU4YTQwZGIwYzMxIiwicmVxdWVzdF9tZXNzYWdlIjoi546w5ZyoZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZSBBUEnojrflj5bnmoTmlbDmja7kuK3lpJrkuoZjb21tZW50c01lc3NhZ2XmlbDnu4TvvIjor4Torrrmtojmga/vvInvvIzmtojmga/kuK3lv4PkuK3pnIDopoHov5vooYzpgILphY3vvJrov5nmmK/mm7TmlrDlkI7nmoTmlbDmja7nu5PmnoTvvJp7XHJcbiAgICBcImNvZGVcIjogMjAwLFxyXG4gICAgXCJtZXNzYWdlXCI6IFwi5pON5L2c5oiQ5YqfXCIsXHJcbiAgICBcImRhdGFcIjogW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJ2aWRlb0xpa2VcIjogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIyLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMyOjEwXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMjEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg5LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTdUMTE6MzI6MDRcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEyMyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xN1QxMTozMjoyNlwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NSxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMxOjU5XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg2LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkZHdhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRlb3MvaW1hZ2UvMjAyNS8wNC8wOC84NWMxNjgzZC00ZDk2LTQ2ZTUtYjBkYy02NjdkMjIzNGNhMjAucG5nXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1N1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTEwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6NTBcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDExOCxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE2VDE2OjEzOjQ5XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1NFwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTE3LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NSxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTZUMTU6Mzk6MzdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEwNyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogODQsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi6JKC5rOVXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkYWRhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRlb3MvaW1hZ2UvMjAyNS8wNC8wOC85MzkyYWQwMC1hZGEyLTQwYzEtYWFhZC1iMDZhMjJkZmI4M2EuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDoyOVwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTA2LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkyLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLokoLms5VcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjIyXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMDgsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6MzJcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBcInVzZXJDaGF0TWVzc2FnZUR0b1wiOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxNjYsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcm5hbWVcIjogXCIyNDI3ODYzNDI1NTdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjExMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic2VuZFRpbWVcIjogXCIyMDI1LTA0LTE3VDEwOjA3OjQ4XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxNjcsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcm5hbWVcIjogXCIyNDI3ODYzNDI1NTdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjExMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic2VuZFRpbWVcIjogXCIyMDI1LTA0LTE3VDEwOjA3OjUwXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxNjksXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcm5hbWVcIjogXCIyNDI3ODYzNDI1NTdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImVxMmUycWVxZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic2VuZFRpbWVcIjogXCIyMDI1LTA0LTE3VDExOjUzOjM1XCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgXCJjb21tZW50c01lc3NhZ2VcIjogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogNzYsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0NvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwi8J+kqvCfpKpoZWxsb1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTJcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDc3LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwi6L6+5aiD5aSn8J+YgFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTVcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDc4LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImFkd2FkYVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDc5LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImRhd2RhZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDgwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjEyMzEzMfCfmIFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4MSxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJkd2FkYWTwn5iEXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjcmVhdGVUaW1lXCI6IFwiMjAyNS0wNC0xN1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogODIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0NvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiMTMxM1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDgzLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjEyMzEzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDg0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIvCfmINcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4NSxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJkZXdhZHdkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjcmVhdGVUaW1lXCI6IFwiMjAyNS0wNC0xN1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogODYsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0NvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiZHF3cWVxZXFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJlMnFlcWVxZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDg4LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImR3YWRhZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfVxyXG4gICAgXVxyXG59IiwicmljaF90ZXh0X2pzb25fcmVwciI6eyJ0eXBlIjoiZG9jIiwiY29udGVudCI6W3sidHlwZSI6InBhcmFncmFwaCIsImNvbnRlbnQiOlt7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IueOsOWcqGdldFVzZXJNZXNzYWdlTGlzdFNlcnZpY2UgQVBJ6I635Y+W55qE5pWw5o2u5Lit5aSa5LqGY29tbWVudHNNZXNzYWdl5pWw57uE77yI6K+E6K665raI5oGv77yJ77yM5raI5oGv5Lit5b+D5Lit6ZyA6KaB6L+b6KGM6YCC6YWN77ya6L+Z5piv5pu05paw5ZCO55qE5pWw5o2u57uT5p6E77yae1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgXCJjb2RlXCI6IDIwMCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgIFwibWVzc2FnZVwiOiBcIuaTjeS9nOaIkOWKn1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgXCJkYXRhXCI6IFtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwidmlkZW9MaWtlXCI6IFtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEyMixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogODcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xN1QxMTozMjoxMFwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4OSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMyOjA0XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMjMsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTdUMTE6MzI6MjZcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEyMCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTUsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xN1QxMTozMTo1OVwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTEyLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcImRhZGR3YVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vbG9jYWxob3N0OjgwODAvdmlkZW9zL2ltYWdlLzIwMjUvMDQvMDgvODVjMTY4M2QtNGQ5Ni00NmU1LWIwZGMtNjY3ZDIyMzRjYTIwLnBuZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6NTdcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDExMCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjUwXCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTgsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNlQxNjoxMzo0OVwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTExLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6NTRcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDExNyxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTUsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE2VDE1OjM5OjM3XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMDcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg0LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcImRhZGFkYVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vbG9jYWxob3N0OjgwODAvdmlkZW9zL2ltYWdlLzIwMjUvMDQvMDgvOTM5MmFkMDAtYWRhMi00MGMxLWFhYWQtYjA2YTIyZGZiODNhLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6MjlcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEwNixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogODcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi6JKC5rOVXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDoyMlwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTA4LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkyLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLokoLms5VcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjMyXCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH1cciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXCJ1c2VyQ2hhdE1lc3NhZ2VEdG9cIjogW1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTY2LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJuYW1lXCI6IFwiMjQyNzg2MzQyNTU3XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCIxMTFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInNlbmRUaW1lXCI6IFwiMjAyNS0wNC0xN1QxMDowNzo0OFwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTY3LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJuYW1lXCI6IFwiMjQyNzg2MzQyNTU3XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCIxMTFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInNlbmRUaW1lXCI6IFwiMjAyNS0wNC0xN1QxMDowNzo1MFwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTY5LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJuYW1lXCI6IFwiMjQyNzg2MzQyNTU3XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJlcTJlMnFlcWVcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInNlbmRUaW1lXCI6IFwiMjAyNS0wNC0xN1QxMTo1MzozNVwiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIF0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgIFwiY29tbWVudHNNZXNzYWdlXCI6IFtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDc2LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIvCfpKrwn6SqaGVsbG9cIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTEyXCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA3NyxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogODcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIui+vuWog+Wkp/CfmIBcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE1XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA3OCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJhZHdhZGFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA3OSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJkYXdkYWRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCIxMjMxMzHwn5iBXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjcmVhdGVUaW1lXCI6IFwiMjAyNS0wNC0xN1wiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogODEsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0NvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiZHdhZGFk8J+YhFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDgyLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjEzMTNcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4MyxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCIxMjMxMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4NCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCLwn5iDXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjcmVhdGVUaW1lXCI6IFwiMjAyNS0wNC0xN1wiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogODUsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0NvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiZGV3YWR3ZFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgfSxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIHtcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDg2LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImRxd3FlcWVxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjcmVhdGVUaW1lXCI6IFwiMjAyNS0wNC0xN1wiXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB9LFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAge1xyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogODcsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkwLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0NvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiZTJxZXFlcWVcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH0sXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICB7XHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4OCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHIifSx7InR5cGUiOiJoYXJkQnJlYWsifSx7InR5cGUiOiJ0ZXh0IiwidGV4dCI6IiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJkd2FkYWRcIixcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgICAgIH1cciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgICAgICAgICAgXVxyIn0seyJ0eXBlIjoiaGFyZEJyZWFrIn0seyJ0eXBlIjoidGV4dCIsInRleHQiOiIgICAgICAgIH1cciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoiICAgIF1cciJ9LHsidHlwZSI6ImhhcmRCcmVhayJ9LHsidHlwZSI6InRleHQiLCJ0ZXh0IjoifSJ9XX1dfSwibWVudGlvbmVkX2l0ZW1zIjpbXSwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUVLRHNlVEpMQnljczNBc2oxc3lEVGUiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIvLyBcXHU1MjFkXFx1NTljYlxcdTUzMTZcXHU2ZDg4XFx1NjA2ZlxcdTY1NzBcXHU3ZWM0XFxuXFxuY29uc3QgbGlrZXMgPSByZWYoW10pXFxuXFxuY29uc3QgcmVwbGllcyA9IHJlZihbXSlcIiwgXCJuZXdfc3RyXCI6IFwiLy8gXFx1NTIxZFxcdTU5Y2JcXHU1MzE2XFx1NmQ4OFxcdTYwNmZcXHU2NTcwXFx1N2VjNFxcblxcbmNvbnN0IGxpa2VzID0gcmVmKFtdKVxcblxcbmNvbnN0IHJlcGxpZXMgPSByZWYoW10pXFxuXFxuY29uc3QgY29tbWVudHMgPSByZWYoW10pXCIsIFwib2xkX3N0cl9zdGFydF9saW5lX251bWJlclwiOiA5OCwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiAxMDJ9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuaIkeWwhuW4ruaCqOS/ruaUuea2iOaBr+S4reW/g+mhtemdou+8jOS7pemAgumFjeaWsOWinueahCBgY29tbWVudHNNZXNzYWdlYCDmlbDnu4TvvIjor4Torrrmtojmga/vvInjgILorqnmiJHku6zov5vooYzku6XkuIvkv67mlLnvvJpcblxuMS4g5re75Yqg6K+E6K665raI5oGv55qE5pWw5o2u5aSE55CG6YC76L6RXG4yLiDmt7vliqDor4Torrrmtojmga/nmoToj5zljZXpoblcbjMuIOabtOaWsOmhtemdouaYvuekuu+8jOaUr+aMgeivhOiuuua2iOaBr+eahOWxleekulxuNC4g5re75Yqg54K55Ye76K+E6K665raI5oGv6Lez6L2s5Yiw6KeG6aKR6K+m5oOF6aG155qE5Yqf6IO9XG5cbuiuqeaIkeW8gOWni+S/ruaUue+8mlxuXG4jIyAxLiDpppblhYjvvIzmt7vliqDor4Torrrmtojmga/nmoTmlbDmja7mlbDnu4TlkozlpITnkIbpgLvovpFcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjAsInRleHRfbm9kZSI6eyJjb250ZW50Ijoi546w5ZyoZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZSBBUEnojrflj5bnmoTmlbDmja7kuK3lpJrkuoZjb21tZW50c01lc3NhZ2XmlbDnu4TvvIjor4Torrrmtojmga/vvInvvIzmtojmga/kuK3lv4PkuK3pnIDopoHov5vooYzpgILphY3vvJrov5nmmK/mm7TmlrDlkI7nmoTmlbDmja7nu5PmnoTvvJp7XHJcbiAgICBcImNvZGVcIjogMjAwLFxyXG4gICAgXCJtZXNzYWdlXCI6IFwi5pON5L2c5oiQ5YqfXCIsXHJcbiAgICBcImRhdGFcIjogW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXCJ2aWRlb0xpa2VcIjogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIyLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMyOjEwXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMjEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg5LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTdUMTE6MzI6MDRcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEyMyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xN1QxMTozMjoyNlwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTIwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NSxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE3VDExOjMxOjU5XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDg2LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkZHdhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRlb3MvaW1hZ2UvMjAyNS8wNC8wOC84NWMxNjgzZC00ZDk2LTQ2ZTUtYjBkYy02NjdkMjIzNGNhMjAucG5nXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1N1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTEwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6NTBcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDExOCxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MSxcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vOGEzNDJlZGItYTMxMC00YzU0LTk5MjYtNWViYWZmMmY4YTZlLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE2VDE2OjEzOjQ5XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuWFi+WKs+W+t1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDo1NFwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTE3LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5NSxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLlhYvlirPlvrdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS84YTM0MmVkYi1hMzEwLTRjNTQtOTkyNi01ZWJhZmYyZjhhNmUuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTZUMTU6Mzk6MzdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDEwNyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogODQsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi6JKC5rOVXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiZGFkYWRhXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRlb3MvaW1hZ2UvMjAyNS8wNC8wOC85MzkyYWQwMC1hZGEyLTQwYzEtYWFhZC1iMDZhMjJkZmI4M2EuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJsaWtlZEF0XCI6IFwiMjAyNS0wNC0xNVQxNjo1MDoyOVwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogMTA2LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkyLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCLokoLms5VcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcImxpa2VkQXRcIjogXCIyMDI1LTA0LTE1VDE2OjUwOjIyXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxMDgsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDk0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcIuiSguazlVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibGlrZWRBdFwiOiBcIjIwMjUtMDQtMTVUMTY6NTA6MzJcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBcInVzZXJDaGF0TWVzc2FnZUR0b1wiOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxNjYsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcm5hbWVcIjogXCIyNDI3ODYzNDI1NTdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjExMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic2VuZFRpbWVcIjogXCIyMDI1LTA0LTE3VDEwOjA3OjQ4XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxNjcsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcm5hbWVcIjogXCIyNDI3ODYzNDI1NTdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjExMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic2VuZFRpbWVcIjogXCIyMDI1LTA0LTE3VDEwOjA3OjUwXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiAxNjksXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcm5hbWVcIjogXCIyNDI3ODYzNDI1NTdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImVxMmUycWVxZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwic2VuZFRpbWVcIjogXCIyMDI1LTA0LTE3VDExOjUzOjM1XCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgXCJjb21tZW50c01lc3NhZ2VcIjogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogNzYsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0NvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwi8J+kqvCfpKpoZWxsb1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTJcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDc3LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tLzhhMzQyZWRiLWEzMTAtNGM1NC05OTI2LTVlYmFmZjJmOGE2ZS5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwi5YWL5Yqz5b63XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwi6L6+5aiD5aSn8J+YgFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTVcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDc4LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImFkd2FkYVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDc5LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImRhd2RhZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDgwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjEyMzEzMfCfmIFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4MSxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJkd2FkYWTwn5iEXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjcmVhdGVUaW1lXCI6IFwiMjAyNS0wNC0xN1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogODIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0NvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiMTMxM1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDgzLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIjEyMzEzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDg0LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcIvCfmINcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4NSxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJkZXdhZHdkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjcmVhdGVUaW1lXCI6IFwiMjAyNS0wNC0xN1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiaWRcIjogODYsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0lkXCI6IDkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCIxMjMxXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ2aWRlb0NvdmVyXCI6IFwiaHR0cDovL3N1amRkMTgyOS5obi1ia3QuY2xvdWRkbi5jb20vY2ZkMWEwNzgtMTExOS00OTZlLWI1YmEtYzU3NDhmZWQxOWQwLmpwZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcklkXCI6IDI0NTAyODQ3OTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VyUGljXCI6IFwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzIwNTU3MjE0Mz9zPTIwMCZ2PTRcIixcclxuICAgICAgICAgICAgICAgICAgICBcIm5pY2tuYW1lXCI6IFwibHd6XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJjb250ZW50XCI6IFwiZHF3cWVxZXFcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNyZWF0ZVRpbWVcIjogXCIyMDI1LTA0LTE3XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiA4NyxcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvSWRcIjogOTAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXRsZVwiOiBcIjEyMzFcIixcclxuICAgICAgICAgICAgICAgICAgICBcInZpZGVvQ292ZXJcIjogXCJodHRwOi8vc3VqZGQxODI5LmhuLWJrdC5jbG91ZGRuLmNvbS9jZmQxYTA3OC0xMTE5LTQ5NmUtYjViYS1jNTc0OGZlZDE5ZDAuanBnXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2VySWRcIjogMjQ1MDI4NDc5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJQaWNcIjogXCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMjA1NTcyMTQzP3M9MjAwJnY9NFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibmlja25hbWVcIjogXCJsd3pcIixcclxuICAgICAgICAgICAgICAgICAgICBcImNvbnRlbnRcIjogXCJlMnFlcWVxZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcImlkXCI6IDg4LFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9JZFwiOiA5MCxcclxuICAgICAgICAgICAgICAgICAgICBcInRpdGxlXCI6IFwiMTIzMVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidmlkZW9Db3ZlclwiOiBcImh0dHA6Ly9zdWpkZDE4MjkuaG4tYmt0LmNsb3VkZG4uY29tL2NmZDFhMDc4LTExMTktNDk2ZS1iNWJhLWM1NzQ4ZmVkMTlkMC5qcGdcIixcclxuICAgICAgICAgICAgICAgICAgICBcInVzZXJJZFwiOiAyNDUwMjg0NzkwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwidXNlclBpY1wiOiBcImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yMDU1NzIxNDM/cz0yMDAmdj00XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJuaWNrbmFtZVwiOiBcImx3elwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY29udGVudFwiOiBcImR3YWRhZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiY3JlYXRlVGltZVwiOiBcIjIwMjUtMDQtMTdcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfVxyXG4gICAgXVxyXG59In19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmiJHlsIbluK7mgqjkv67mlLnmtojmga/kuK3lv4PpobXpnaLvvIzku6XpgILphY3mlrDlop7nmoQgYGNvbW1lbnRzTWVzc2FnZWAg5pWw57uE77yI6K+E6K665raI5oGv77yJ44CC6K6p5oiR5Lus6L+b6KGM5Lul5LiL5L+u5pS577yaXG5cbjEuIOa3u+WKoOivhOiuuua2iOaBr+eahOaVsOaNruWkhOeQhumAu+i+kVxuMi4g5re75Yqg6K+E6K665raI5oGv55qE6I+c5Y2V6aG5XG4zLiDmm7TmlrDpobXpnaLmmL7npLrvvIzmlK/mjIHor4Torrrmtojmga/nmoTlsZXnpLpcbjQuIOa3u+WKoOeCueWHu+ivhOiuuua2iOaBr+i3s+i9rOWIsOinhumikeivpuaDhemhteeahOWKn+iDvVxuXG7orqnmiJHlvIDlp4vkv67mlLnvvJpcblxuIyMgMS4g6aaW5YWI77yM5re75Yqg6K+E6K665raI5oGv55qE5pWw5o2u5pWw57uE5ZKM5aSE55CG6YC76L6RXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiM2EyZTE0YzItMmNhYy00NGZkLTlkYWMtYjg1NWIyYWYxY2YxIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUhiWlIzOHZMQW5oZ3ZTdE03RUtudUwiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIgICAgICAvLyBcXHU1OTA0XFx1NzQwNlxcdTgwNGFcXHU1OTI5XFx1NmQ4OFxcdTYwNmZcXHU2NTcwXFx1NjM2ZVxcbiAgICAgIGlmIChtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8gJiYgbWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvLmxlbmd0aCA+IDApIHtcXG4gICAgICAgIHJlcGxpZXMudmFsdWUgPSBtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8ubWFwKGl0ZW0gPT4gKHtcXG4gICAgICAgICAgaWQ6IGl0ZW0uaWQsXFxuICAgICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxcbiAgICAgICAgICBjaGF0VXNlcm5hbWU6IGl0ZW0udXNlcm5hbWUsIC8vIFxcdTRmZGRcXHU1YjU4XFx1NzUyOFxcdTYyMzdcXHU1NDBkXFx1NGVlNVxcdTRmYmZcXHU4ZGYzXFx1OGY2Y1xcdTUyMzBcXHU4MDRhXFx1NTkyOVxcdTk4NzVcXHU5NzYyXFxuICAgICAgICAgIGF2YXRhcjogaXRlbS51c2VyUGljLFxcbiAgICAgICAgICB0aW1lOiBmb3JtYXREYXRlKGl0ZW0uc2VuZFRpbWUpLFxcbiAgICAgICAgICBjb250ZW50OiBpdGVtLmNvbnRlbnQsXFxuICAgICAgICAgIGlzQ2hhdDogdHJ1ZVxcbiAgICAgICAgfSkpXFxuICAgICAgfVwiLCBcIm5ld19zdHJcIjogXCIgICAgICAvLyBcXHU1OTA0XFx1NzQwNlxcdTgwNGFcXHU1OTI5XFx1NmQ4OFxcdTYwNmZcXHU2NTcwXFx1NjM2ZVxcbiAgICAgIGlmIChtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8gJiYgbWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvLmxlbmd0aCA+IDApIHtcXG4gICAgICAgIHJlcGxpZXMudmFsdWUgPSBtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8ubWFwKGl0ZW0gPT4gKHtcXG4gICAgICAgICAgaWQ6IGl0ZW0uaWQsXFxuICAgICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxcbiAgICAgICAgICBjaGF0VXNlcm5hbWU6IGl0ZW0udXNlcm5hbWUsIC8vIFxcdTRmZGRcXHU1YjU4XFx1NzUyOFxcdTYyMzdcXHU1NDBkXFx1NGVlNVxcdTRmYmZcXHU4ZGYzXFx1OGY2Y1xcdTUyMzBcXHU4MDRhXFx1NTkyOVxcdTk4NzVcXHU5NzYyXFxuICAgICAgICAgIGF2YXRhcjogaXRlbS51c2VyUGljLFxcbiAgICAgICAgICB0aW1lOiBmb3JtYXREYXRlKGl0ZW0uc2VuZFRpbWUpLFxcbiAgICAgICAgICBjb250ZW50OiBpdGVtLmNvbnRlbnQsXFxuICAgICAgICAgIGlzQ2hhdDogdHJ1ZVxcbiAgICAgICAgfSkpXFxuICAgICAgfVxcbiAgICAgIFxcbiAgICAgIC8vIFxcdTU5MDRcXHU3NDA2XFx1OGJjNFxcdThiYmFcXHU2ZDg4XFx1NjA2ZlxcdTY1NzBcXHU2MzZlXFxuICAgICAgaWYgKG1lc3NhZ2VEYXRhLmNvbW1lbnRzTWVzc2FnZSAmJiBtZXNzYWdlRGF0YS5jb21tZW50c01lc3NhZ2UubGVuZ3RoID4gMCkge1xcbiAgICAgICAgY29tbWVudHMudmFsdWUgPSBtZXNzYWdlRGF0YS5jb21tZW50c01lc3NhZ2UubWFwKGl0ZW0gPT4gKHtcXG4gICAgICAgICAgaWQ6IGl0ZW0uaWQsXFxuICAgICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxcbiAgICAgICAgICBhdmF0YXI6IGl0ZW0udXNlclBpYyxcXG4gICAgICAgICAgdGltZTogZm9ybWF0RGF0ZShpdGVtLmNyZWF0ZVRpbWUpLFxcbiAgICAgICAgICBjb250ZW50OiBpdGVtLmNvbnRlbnQsXFxuICAgICAgICAgIHZpZGVvSWQ6IGl0ZW0udmlkZW9JZCxcXG4gICAgICAgICAgc291cmNlOiB7XFxuICAgICAgICAgICAgdGl0bGU6IGl0ZW0udGl0bGUsXFxuICAgICAgICAgICAgY29udGVudDogJycsXFxuICAgICAgICAgICAgY292ZXI6IGl0ZW0udmlkZW9Db3ZlclxcbiAgICAgICAgICB9LFxcbiAgICAgICAgICBpc0NvbW1lbnQ6IHRydWVcXG4gICAgICAgIH0pKVxcbiAgICAgIH1cIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDE4MSwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiAxOTJ9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IiMjIDIuIOabtOaWsCBgZ2V0VXNlck1lc3NhZ2VzYCDlh73mlbDvvIzlpITnkIbor4Torrrmtojmga/mlbDmja5cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAgOTVcdCAgcm91dGVyLnB1c2goJy8nKVxuICAgIDk2XHR9XG4gICAgOTdcdFxuICAgIDk4XHQvLyDmqKHmi5/mlbDmja4gLSDlrp7pmYXpobnnm67kuK3lupTor6Xku45BUEnojrflj5ZcbiAgICA5OVx0Ly8g5Yid5aeL5YyW5raI5oGv5pWw57uEXG4gICAxMDBcdFxuICAgMTAxXHRjb25zdCBsaWtlcyA9IHJlZihbXSlcbiAgIDEwMlx0XG4gICAxMDNcdGNvbnN0IHJlcGxpZXMgPSByZWYoW10pXG4gICAxMDRcdFxuICAgMTA1XHRjb25zdCBjb21tZW50cyA9IHJlZihbXSlcbiAgIDEwNlx0XG4gICAxMDdcdGNvbnN0IHN5c3RlbU5vdGljZXMgPSByZWYoW1xuICAgMTA4XHQgIHtcbiAgIDEwOVx0ICAgIGlkOiAxLFxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxRUtEc2VUSkxCeWNzM0FzajFzeURUZSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIyMgMi4g5pu05pawIGBnZXRVc2VyTWVzc2FnZXNgIOWHveaVsO+8jOWkhOeQhuivhOiuuua2iOaBr+aVsOaNrlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjNiYzY4MjU4LTM4ZjUtNDNiYi1hMDQyLWNkNjU2MmZjOGNiMSIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDFQaXR5aTI1RnJ4S1l1YUgxTER6NDhVIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJsaWtlc1xcXCI+XFxuICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XFxuICAgICAgICAgICAgPHNwYW4+XFx1NzBiOVxcdThkNWVcXHU2ZDg4XFx1NjA2Zjwvc3Bhbj5cXG4gICAgICAgICAgICA8ZWwtYmFkZ2Ugdi1pZj1cXFwibGlrZXMubGVuZ3RoID4gMFxcXCIgOnZhbHVlPVxcXCJsaWtlcy5sZW5ndGhcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLWJhZGdlXFxcIiAvPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJyZXBsaWVzXFxcIj5cXG4gICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cXG4gICAgICAgICAgICA8c3Bhbj5cXHU4MDRhXFx1NTkyOVxcdTZkODhcXHU2MDZmPC9zcGFuPlxcbiAgICAgICAgICAgIDxlbC1iYWRnZSB2LWlmPVxcXCJyZXBsaWVzLmxlbmd0aCA+IDBcXFwiIDp2YWx1ZT1cXFwicmVwbGllcy5sZW5ndGhcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLWJhZGdlXFxcIiAvPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJzeXN0ZW1cXFwiPlxcbiAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxcbiAgICAgICAgICAgIDxzcGFuPlxcdTdjZmJcXHU3ZWRmXFx1OTAxYVxcdTc3ZTU8L3NwYW4+XFxuICAgICAgICAgIDwvdGVtcGxhdGU+XFxuICAgICAgICA8L2VsLW1lbnUtaXRlbT5cIiwgXCJuZXdfc3RyXCI6IFwiICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJsaWtlc1xcXCI+XFxuICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XFxuICAgICAgICAgICAgPHNwYW4+XFx1NzBiOVxcdThkNWVcXHU2ZDg4XFx1NjA2Zjwvc3Bhbj5cXG4gICAgICAgICAgICA8ZWwtYmFkZ2Ugdi1pZj1cXFwibGlrZXMubGVuZ3RoID4gMFxcXCIgOnZhbHVlPVxcXCJsaWtlcy5sZW5ndGhcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLWJhZGdlXFxcIiAvPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJjb21tZW50c1xcXCI+XFxuICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XFxuICAgICAgICAgICAgPHNwYW4+XFx1OGJjNFxcdThiYmFcXHU2ZDg4XFx1NjA2Zjwvc3Bhbj5cXG4gICAgICAgICAgICA8ZWwtYmFkZ2Ugdi1pZj1cXFwiY29tbWVudHMubGVuZ3RoID4gMFxcXCIgOnZhbHVlPVxcXCJjb21tZW50cy5sZW5ndGhcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLWJhZGdlXFxcIiAvPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJyZXBsaWVzXFxcIj5cXG4gICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cXG4gICAgICAgICAgICA8c3Bhbj5cXHU4MDRhXFx1NTkyOVxcdTZkODhcXHU2MDZmPC9zcGFuPlxcbiAgICAgICAgICAgIDxlbC1iYWRnZSB2LWlmPVxcXCJyZXBsaWVzLmxlbmd0aCA+IDBcXFwiIDp2YWx1ZT1cXFwicmVwbGllcy5sZW5ndGhcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLWJhZGdlXFxcIiAvPlxcbiAgICAgICAgICA8L3RlbXBsYXRlPlxcbiAgICAgICAgPC9lbC1tZW51LWl0ZW0+XFxuICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVxcXCJzeXN0ZW1cXFwiPlxcbiAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxcbiAgICAgICAgICAgIDxzcGFuPlxcdTdjZmJcXHU3ZWRmXFx1OTAxYVxcdTc3ZTU8L3NwYW4+XFxuICAgICAgICAgIDwvdGVtcGxhdGU+XFxuICAgICAgICA8L2VsLW1lbnUtaXRlbT5cIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDEwLCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDI2fV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiIjIyAzLiDmm7TmlrDoj5zljZXpobnvvIzmt7vliqDor4Torrrmtojmga/oj5zljZVcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAxNTdcdCAgICAgICAgICB9XG4gICAxNThcdCAgICAgICAgfSkpXG4gICAxNTlcdCAgICAgIH1cbiAgIDE2MFx0XG4gICAxNjFcdCAgICAgIC8vIOWkhOeQhuiBiuWkqea2iOaBr+aVsOaNrlxuICAgMTYyXHQgICAgICBpZiAobWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvICYmIG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0by5sZW5ndGggPiAwKSB7XG4gICAxNjNcdCAgICAgICAgcmVwbGllcy52YWx1ZSA9IG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0by5tYXAoaXRlbSA9PiAoe1xuICAgMTY0XHQgICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAxNjVcdCAgICAgICAgICB1c2VybmFtZTogaXRlbS5uaWNrbmFtZSxcbiAgIDE2Nlx0ICAgICAgICAgIGNoYXRVc2VybmFtZTogaXRlbS51c2VybmFtZSwgLy8g5L+d5a2Y55So5oi35ZCN5Lul5L6/6Lez6L2s5Yiw6IGK5aSp6aG16Z2iXG4gICAxNjdcdCAgICAgICAgICBhdmF0YXI6IGl0ZW0udXNlclBpYyxcbiAgIDE2OFx0ICAgICAgICAgIHRpbWU6IGZvcm1hdERhdGUoaXRlbS5zZW5kVGltZSksXG4gICAxNjlcdCAgICAgICAgICBjb250ZW50OiBpdGVtLmNvbnRlbnQsXG4gICAxNzBcdCAgICAgICAgICBpc0NoYXQ6IHRydWVcbiAgIDE3MVx0ICAgICAgICB9KSlcbiAgIDE3Mlx0ICAgICAgfVxuICAgMTczXHRcbiAgIDE3NFx0ICAgICAgLy8g5aSE55CG6K+E6K665raI5oGv5pWw5o2uXG4gICAxNzVcdCAgICAgIGlmIChtZXNzYWdlRGF0YS5jb21tZW50c01lc3NhZ2UgJiYgbWVzc2FnZURhdGEuY29tbWVudHNNZXNzYWdlLmxlbmd0aCA+IDApIHtcbiAgIDE3Nlx0ICAgICAgICBjb21tZW50cy52YWx1ZSA9IG1lc3NhZ2VEYXRhLmNvbW1lbnRzTWVzc2FnZS5tYXAoaXRlbSA9PiAoe1xuICAgMTc3XHQgICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAxNzhcdCAgICAgICAgICB1c2VybmFtZTogaXRlbS5uaWNrbmFtZSxcbiAgIDE3OVx0ICAgICAgICAgIGF2YXRhcjogaXRlbS51c2VyUGljLFxuICAgMTgwXHQgICAgICAgICAgdGltZTogZm9ybWF0RGF0ZShpdGVtLmNyZWF0ZVRpbWUpLFxuICAgMTgxXHQgICAgICAgICAgY29udGVudDogaXRlbS5jb250ZW50LFxuICAgMTgyXHQgICAgICAgICAgdmlkZW9JZDogaXRlbS52aWRlb0lkLFxuICAgMTgzXHQgICAgICAgICAgc291cmNlOiB7XG4gICAxODRcdCAgICAgICAgICAgIHRpdGxlOiBpdGVtLnRpdGxlLFxuICAgMTg1XHQgICAgICAgICAgICBjb250ZW50OiAnJyxcbiAgIDE4Nlx0ICAgICAgICAgICAgY292ZXI6IGl0ZW0udmlkZW9Db3ZlclxuICAgMTg3XHQgICAgICAgICAgfSxcbiAgIDE4OFx0ICAgICAgICAgIGlzQ29tbWVudDogdHJ1ZVxuICAgMTg5XHQgICAgICAgIH0pKVxuICAgMTkwXHQgICAgICB9XG4gICAxOTFcdCAgICB9IGVsc2Uge1xuICAgMTkyXHQgICAgICBFbE1lc3NhZ2UuZXJyb3IoJ+iOt+WPlua2iOaBr+Wksei0pe+8micgKyByZXMubWVzc2FnZSlcbiAgIDE5M1x0ICAgIH1cbiAgIDE5NFx0ICB9IGNhdGNoIChlcnJvcikge1xuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxSGJaUjM4dkxBbmhndlN0TTdFS251TCJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIyMgMy4g5pu05paw6I+c5Y2V6aG577yM5re75Yqg6K+E6K665raI5oGv6I+c5Y2VXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMTExYWY1YTUtNDBhMi00NWIyLWFlODYtNDYzYzQyZjZlZmZlIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMVhkSm5ZUjdUQjNNNGpDMTVzcDdFV2oiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlXCIsIFwidmlld19yYW5nZVwiOiBbNSwgMzBdfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5oiR55yL5Yiw6I+c5Y2V6aG55bey57uP5pyJ5omA5Y+Y5YyW77yM6K6p5oiR5p+l55yL5b2T5YmN55qE6I+c5Y2V6aG55YaF5a6577yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJGYWlsZWQgdG8gZWRpdCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuIFNlZSBiZWxvdyBmb3IgZGV0YWlscy5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcbk5vIHJlcGxhY2VtZW50IHdhcyBwZXJmb3JtZWQsIG9sZFN0ciBkaWQgbm90IGFwcGVhciB2ZXJiYXRpbSBpbiBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5UaGUgY29udGVudCBpbiB0aGUgc3BlY2lmaWVkIHJlZ2lvbiBpczpcbiAgICAgNlx0ICAgICAgICA6ZGVmYXVsdC1hY3RpdmU9XCJhY3RpdmVUYWJcIlxuICAgICA3XHQgICAgICAgIGNsYXNzPVwibWVzc2FnZS1tZW51XCJcbiAgICAgOFx0ICAgICAgICBAc2VsZWN0PVwiaGFuZGxlTWVudVNlbGVjdFwiXG4gICAgIDlcdCAgICAgID5cbiAgICAxMFx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwibGlrZXNcIj5cbiAgICAxMVx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMTJcdCAgICAgICAgICAgIDxzcGFuPueCuei1nua2iOaBrzwvc3Bhbj5cbiAgICAxM1x0ICAgICAgICAgICAgPGVsLWJhZGdlIHYtaWY9XCJsaWtlcy5sZW5ndGggPiAwXCIgOnZhbHVlPVwibGlrZXMubGVuZ3RoXCIgY2xhc3M9XCJtZXNzYWdlLWJhZGdlXCIgLz5cbiAgICAxNFx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMTVcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMTZcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInJlcGxpZXNcIj5cbiAgICAxN1x0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMThcdCAgICAgICAgICAgIDxzcGFuPuiBiuWkqea2iOaBrzwvc3Bhbj5cbiAgICAxOVx0ICAgICAgICAgICAgPGVsLWJhZGdlIHYtaWY9XCJyZXBsaWVzLmxlbmd0aCA+IDBcIiA6dmFsdWU9XCJyZXBsaWVzLmxlbmd0aFwiIGNsYXNzPVwibWVzc2FnZS1iYWRnZVwiIC8+XG4gICAgMjBcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDIxXHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDIyXHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJzeXN0ZW1cIj5cbiAgICAyM1x0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMjRcdCAgICAgICAgICAgIDxzcGFuPuivhOiuuua2iOaBrzwvc3Bhbj5cbiAgICAyNVx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMjZcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjdcdCAgICAgIDwvZWwtbWVudT5cbiAgICAyOFx0ICAgIDwvZGl2PlxuICAgIDI5XHRcbiAgICAzMFx0ICAgIDwhLS0g5Y+z5L6n5YaF5a655Yy6IC0tPlxuXG5EaWZmIGJldHdlZW4gb2xkU3RyIGFuZCB0aGUgc3BlY2lmaWVkIHJlZ2lvbiBpczpcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi0tLSBvbGRTdHJcbisrKyByZWdpb25Db250ZW50XG5AQCAtMTIsNiArMTIsNiBAQFxuICAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwic3lzdGVtXCI+XG4gICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4tICAgICAgICAgICAgPHNwYW4+57O757uf6YCa55+lPC9zcGFuPlxuKyAgICAgICAgICAgIDxzcGFuPuivhOiuuua2iOaBrzwvc3Bhbj5cbiAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuXG5cbkZpeCBmYWlsZWQgc3RyX3JlcGxhY2VfZW50cmllcyBhY2NvcmRpbmdseSBhbmQgdHJ5IGFnYWluLlxuIiwiaXNfZXJyb3IiOnRydWUsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxUGl0eWkyNUZyeEtZdWFIMUxEejQ4VSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5oiR55yL5Yiw6I+c5Y2V6aG55bey57uP5pyJ5omA5Y+Y5YyW77yM6K6p5oiR5p+l55yL5b2T5YmN55qE6I+c5Y2V6aG55YaF5a6577yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMWVjYzFmZmQtM2Q0YS00NzNhLTliZmItNjFlY2ZjMDMwMTg5IiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMVFLTE5hYlhVaGZ3TW1XZWNZYndXeWkiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XFxcInN5c3RlbVxcXCI+XFxuICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XFxuICAgICAgICAgICAgPHNwYW4+XFx1OGJjNFxcdThiYmFcXHU2ZDg4XFx1NjA2Zjwvc3Bhbj5cXG4gICAgICAgICAgPC90ZW1wbGF0ZT5cXG4gICAgICAgIDwvZWwtbWVudS1pdGVtPlwiLCBcIm5ld19zdHJcIjogXCIgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XFxcImNvbW1lbnRzXFxcIj5cXG4gICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cXG4gICAgICAgICAgICA8c3Bhbj5cXHU4YmM0XFx1OGJiYVxcdTZkODhcXHU2MDZmPC9zcGFuPlxcbiAgICAgICAgICAgIDxlbC1iYWRnZSB2LWlmPVxcXCJjb21tZW50cy5sZW5ndGggPiAwXFxcIiA6dmFsdWU9XFxcImNvbW1lbnRzLmxlbmd0aFxcXCIgY2xhc3M9XFxcIm1lc3NhZ2UtYmFkZ2VcXFwiIC8+XFxuICAgICAgICAgIDwvdGVtcGxhdGU+XFxuICAgICAgICA8L2VsLW1lbnUtaXRlbT5cXG4gICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XFxcInN5c3RlbVxcXCI+XFxuICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XFxuICAgICAgICAgICAgPHNwYW4+XFx1N2NmYlxcdTdlZGZcXHU5MDFhXFx1NzdlNTwvc3Bhbj5cXG4gICAgICAgICAgPC90ZW1wbGF0ZT5cXG4gICAgICAgIDwvZWwtbWVudS1pdGVtPlwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMjIsIFwib2xkX3N0cl9lbmRfbGluZV9udW1iZXJcIjogMjZ9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuaIkeeci+WIsOezu+e7n+mAmuefpeiPnOWNlemhueW3sue7j+iiq+aUueS4uuivhOiuuua2iOaBr++8jOiuqeaIkeS7rOabtOaWsOiPnOWNlemhueeahOe0ouW8leWSjOW+veeroO+8mlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWU6XG4gICAgIDVcdCAgICAgIDxlbC1tZW51XG4gICAgIDZcdCAgICAgICAgOmRlZmF1bHQtYWN0aXZlPVwiYWN0aXZlVGFiXCJcbiAgICAgN1x0ICAgICAgICBjbGFzcz1cIm1lc3NhZ2UtbWVudVwiXG4gICAgIDhcdCAgICAgICAgQHNlbGVjdD1cImhhbmRsZU1lbnVTZWxlY3RcIlxuICAgICA5XHQgICAgICA+XG4gICAgMTBcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cImxpa2VzXCI+XG4gICAgMTFcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDEyXHQgICAgICAgICAgICA8c3Bhbj7ngrnotZ7mtojmga88L3NwYW4+XG4gICAgMTNcdCAgICAgICAgICAgIDxlbC1iYWRnZSB2LWlmPVwibGlrZXMubGVuZ3RoID4gMFwiIDp2YWx1ZT1cImxpa2VzLmxlbmd0aFwiIGNsYXNzPVwibWVzc2FnZS1iYWRnZVwiIC8+XG4gICAgMTRcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDE1XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDE2XHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJyZXBsaWVzXCI+XG4gICAgMTdcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDE4XHQgICAgICAgICAgICA8c3Bhbj7ogYrlpKnmtojmga88L3NwYW4+XG4gICAgMTlcdCAgICAgICAgICAgIDxlbC1iYWRnZSB2LWlmPVwicmVwbGllcy5sZW5ndGggPiAwXCIgOnZhbHVlPVwicmVwbGllcy5sZW5ndGhcIiBjbGFzcz1cIm1lc3NhZ2UtYmFkZ2VcIiAvPlxuICAgIDIwXHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAyMVx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAyMlx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwic3lzdGVtXCI+XG4gICAgMjNcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDI0XHQgICAgICAgICAgICA8c3Bhbj7or4Torrrmtojmga88L3NwYW4+XG4gICAgMjVcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDI2XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDI3XHQgICAgICA8L2VsLW1lbnU+XG4gICAgMjhcdCAgICA8L2Rpdj5cbiAgICAyOVx0XG4gICAgMzBcdCAgICA8IS0tIOWPs+S+p+WGheWuueWMuiAtLT5cblRvdGFsIGxpbmVzIGluIGZpbGU6IDQwNlxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMVhkSm5ZUjdUQjNNNGpDMTVzcDdFV2oifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IuaIkeeci+WIsOezu+e7n+mAmuefpeiPnOWNlemhueW3sue7j+iiq+aUueS4uuivhOiuuua2iOaBr++8jOiuqeaIkeS7rOabtOaWsOiPnOWNlemhueeahOe0ouW8leWSjOW+veeroO+8mlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6Ijc5YjFhMTc0LTY0YjctNDcwMy04ZTljLWU1OWQ4NTI2NDM3MiIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDFBaGlxbWMyMVdjUXd3Y0dxUlpEWlRvIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiLy8gXFx1NjgzOVxcdTYzNmVcXHU1ZjUzXFx1NTI0ZFxcdTkwMDlcXHU0ZTJkXFx1NzY4NFxcdTY4MDdcXHU3YjdlXFx1NTJhOFxcdTYwMDFcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFxuY29uc3QgY3VycmVudE1lc3NhZ2VzID0gY29tcHV0ZWQoKCkgPT4ge1xcbiAgc3dpdGNoIChhY3RpdmVUYWIudmFsdWUpIHtcXG4gICAgY2FzZSAnbGlrZXMnOlxcbiAgICAgIHJldHVybiBsaWtlcy52YWx1ZVxcbiAgICBjYXNlICdyZXBsaWVzJzpcXG4gICAgICByZXR1cm4gcmVwbGllcy52YWx1ZVxcbiAgICBjYXNlICdzeXN0ZW0nOlxcbiAgICAgIHJldHVybiBzeXN0ZW1Ob3RpY2VzLnZhbHVlXFxuICAgIGRlZmF1bHQ6XFxuICAgICAgcmV0dXJuIFtdXFxuICB9XFxufSlcIiwgXCJuZXdfc3RyXCI6IFwiLy8gXFx1NjgzOVxcdTYzNmVcXHU1ZjUzXFx1NTI0ZFxcdTkwMDlcXHU0ZTJkXFx1NzY4NFxcdTY4MDdcXHU3YjdlXFx1NTJhOFxcdTYwMDFcXHU4M2I3XFx1NTNkNlxcdTZkODhcXHU2MDZmXFxuY29uc3QgY3VycmVudE1lc3NhZ2VzID0gY29tcHV0ZWQoKCkgPT4ge1xcbiAgc3dpdGNoIChhY3RpdmVUYWIudmFsdWUpIHtcXG4gICAgY2FzZSAnbGlrZXMnOlxcbiAgICAgIHJldHVybiBsaWtlcy52YWx1ZVxcbiAgICBjYXNlICdjb21tZW50cyc6XFxuICAgICAgcmV0dXJuIGNvbW1lbnRzLnZhbHVlXFxuICAgIGNhc2UgJ3JlcGxpZXMnOlxcbiAgICAgIHJldHVybiByZXBsaWVzLnZhbHVlXFxuICAgIGNhc2UgJ3N5c3RlbSc6XFxuICAgICAgcmV0dXJuIHN5c3RlbU5vdGljZXMudmFsdWVcXG4gICAgZGVmYXVsdDpcXG4gICAgICByZXR1cm4gW11cXG4gIH1cXG59KVwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMTYzLCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDE3NX1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIyMgNC4g5pu05pawIGBjdXJyZW50TWVzc2FnZXNgIOiuoeeul+WxnuaAp++8jOa3u+WKoOivhOiuuua2iOaBr1xuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICAxOFx0ICAgICAgICAgICAgPHNwYW4+6IGK5aSp5raI5oGvPC9zcGFuPlxuICAgIDE5XHQgICAgICAgICAgICA8ZWwtYmFkZ2Ugdi1pZj1cInJlcGxpZXMubGVuZ3RoID4gMFwiIDp2YWx1ZT1cInJlcGxpZXMubGVuZ3RoXCIgY2xhc3M9XCJtZXNzYWdlLWJhZGdlXCIgLz5cbiAgICAyMFx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMjFcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjJcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cImNvbW1lbnRzXCI+XG4gICAgMjNcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDI0XHQgICAgICAgICAgICA8c3Bhbj7or4Torrrmtojmga88L3NwYW4+XG4gICAgMjVcdCAgICAgICAgICAgIDxlbC1iYWRnZSB2LWlmPVwiY29tbWVudHMubGVuZ3RoID4gMFwiIDp2YWx1ZT1cImNvbW1lbnRzLmxlbmd0aFwiIGNsYXNzPVwibWVzc2FnZS1iYWRnZVwiIC8+XG4gICAgMjZcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDI3XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDI4XHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJzeXN0ZW1cIj5cbiAgICAyOVx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMzBcdCAgICAgICAgICAgIDxzcGFuPuezu+e7n+mAmuefpTwvc3Bhbj5cbiAgICAzMVx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMzJcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMzNcdCAgICAgIDwvZWwtbWVudT5cbiAgICAzNFx0ICAgIDwvZGl2PlxuICAgIDM1XHRcbiAgICAzNlx0ICAgIDwhLS0g5Y+z5L6n5YaF5a655Yy6IC0tPlxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxUUtMTmFiWFVoZndNbVdlY1lid1d5aSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIyMgNC4g5pu05pawIGBjdXJyZW50TWVzc2FnZXNgIOiuoeeul+WxnuaAp++8jOa3u+WKoOivhOiuuua2iOaBr1xuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjhiMmVmMDU5LTU3MzktNGU3MC1iOTExLTVjYjVmNmJkY2Q4NyIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDE4ZVFla1p1N2hVWlVIZjQ5eUtjWDNZIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiICAgICAgICAgICAgPCEtLSBcXHU4MDRhXFx1NTkyOVxcdTZkODhcXHU2MDZmXFx1NjYzZVxcdTc5M2EgLS0+XFxuICAgICAgICAgICAgPGRpdiB2LWlmPVxcXCJtZXNzYWdlLmlzQ2hhdFxcXCIgY2xhc3M9XFxcIm1lc3NhZ2UtdGV4dCBjaGF0LW1lc3NhZ2VcXFwiIEBjbGljaz1cXFwiZ29Ub0NoYXQobWVzc2FnZS5jaGF0VXNlcm5hbWUpXFxcIiA6Y2xhc3M9XFxcInsgJ2NsaWNrYWJsZSc6IG1lc3NhZ2UuaXNDaGF0IH1cXFwiPlxcbiAgICAgICAgICAgICAge3sgbWVzc2FnZS5jb250ZW50IH19XFxuICAgICAgICAgICAgPC9kaXY+XFxuXFxuICAgICAgICAgICAgPCEtLSBcXHU3MGI5XFx1OGQ1ZVxcdTZkODhcXHU2MDZmXFx1NjYzZVxcdTc5M2EgLS0+XFxuICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZT5cXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtdGV4dFxcXCI+e3sgbWVzc2FnZS5jb250ZW50IH19PC9kaXY+XFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLXNvdXJjZVxcXCIgdi1pZj1cXFwibWVzc2FnZS5zb3VyY2VcXFwiIEBjbGljaz1cXFwibWVzc2FnZS52aWRlb0lkICYmIGdvVG9WaWRlbyhtZXNzYWdlLnZpZGVvSWQpXFxcIj5cXG4gICAgICAgICAgICAgICAgPGVsLWNhcmQgc2hhZG93PVxcXCJob3ZlclxcXCIgY2xhc3M9XFxcIm1lc3NhZ2Utc291cmNlLWNhcmRcXFwiIDpjbGFzcz1cXFwieyAnY2xpY2thYmxlJzogbWVzc2FnZS52aWRlb0lkIH1cXFwiPlxcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1jb250ZW50LXdyYXBwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic291cmNlLWltYWdlXFxcIiB2LWlmPVxcXCJtZXNzYWdlLnNvdXJjZS5jb3ZlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cXFwibWVzc2FnZS5zb3VyY2UuY292ZXJcXFwiIGFsdD1cXFwiXFx1ODljNlxcdTk4OTFcXHU1YzAxXFx1OTc2MlxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic291cmNlLXRleHRcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzb3VyY2UtdGl0bGVcXFwiPnt7IG1lc3NhZ2Uuc291cmNlLnRpdGxlIH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1jb250ZW50XFxcIiB2LWlmPVxcXCJtZXNzYWdlLnNvdXJjZS5jb250ZW50XFxcIj57eyBtZXNzYWdlLnNvdXJjZS5jb250ZW50IH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPC9lbC1jYXJkPlxcbiAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cIiwgXCJuZXdfc3RyXCI6IFwiICAgICAgICAgICAgPCEtLSBcXHU4MDRhXFx1NTkyOVxcdTZkODhcXHU2MDZmXFx1NjYzZVxcdTc5M2EgLS0+XFxuICAgICAgICAgICAgPGRpdiB2LWlmPVxcXCJtZXNzYWdlLmlzQ2hhdFxcXCIgY2xhc3M9XFxcIm1lc3NhZ2UtdGV4dCBjaGF0LW1lc3NhZ2VcXFwiIEBjbGljaz1cXFwiZ29Ub0NoYXQobWVzc2FnZS5jaGF0VXNlcm5hbWUpXFxcIiA6Y2xhc3M9XFxcInsgJ2NsaWNrYWJsZSc6IG1lc3NhZ2UuaXNDaGF0IH1cXFwiPlxcbiAgICAgICAgICAgICAge3sgbWVzc2FnZS5jb250ZW50IH19XFxuICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgXFxuICAgICAgICAgICAgPCEtLSBcXHU4YmM0XFx1OGJiYVxcdTZkODhcXHU2MDZmXFx1NjYzZVxcdTc5M2EgLS0+XFxuICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZS1pZj1cXFwibWVzc2FnZS5pc0NvbW1lbnRcXFwiPlxcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS10ZXh0IGNvbW1lbnQtbWVzc2FnZVxcXCI+XFxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJjb21tZW50LWNvbnRlbnRcXFwiPnt7IG1lc3NhZ2UuY29udGVudCB9fTwvc3Bhbj5cXG4gICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwibWVzc2FnZS1zb3VyY2VcXFwiIHYtaWY9XFxcIm1lc3NhZ2Uuc291cmNlXFxcIiBAY2xpY2s9XFxcIm1lc3NhZ2UudmlkZW9JZCAmJiBnb1RvVmlkZW8obWVzc2FnZS52aWRlb0lkKVxcXCI+XFxuICAgICAgICAgICAgICAgIDxlbC1jYXJkIHNoYWRvdz1cXFwiaG92ZXJcXFwiIGNsYXNzPVxcXCJtZXNzYWdlLXNvdXJjZS1jYXJkXFxcIiA6Y2xhc3M9XFxcInsgJ2NsaWNrYWJsZSc6IG1lc3NhZ2UudmlkZW9JZCB9XFxcIj5cXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzb3VyY2UtY29udGVudC13cmFwcGVyXFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1pbWFnZVxcXCIgdi1pZj1cXFwibWVzc2FnZS5zb3VyY2UuY292ZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XFxcIm1lc3NhZ2Uuc291cmNlLmNvdmVyXFxcIiBhbHQ9XFxcIlxcdTg5YzZcXHU5ODkxXFx1NWMwMVxcdTk3NjJcXFwiIC8+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS10ZXh0XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic291cmNlLXRpdGxlXFxcIj57eyBtZXNzYWdlLnNvdXJjZS50aXRsZSB9fTwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgICAgIDwvZWwtY2FyZD5cXG4gICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgIDwvdGVtcGxhdGU+XFxuXFxuICAgICAgICAgICAgPCEtLSBcXHU3MGI5XFx1OGQ1ZVxcdTZkODhcXHU2MDZmXFx1NjYzZVxcdTc5M2EgLS0+XFxuICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZT5cXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcIm1lc3NhZ2UtdGV4dFxcXCI+e3sgbWVzc2FnZS5jb250ZW50IH19PC9kaXY+XFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZXNzYWdlLXNvdXJjZVxcXCIgdi1pZj1cXFwibWVzc2FnZS5zb3VyY2VcXFwiIEBjbGljaz1cXFwibWVzc2FnZS52aWRlb0lkICYmIGdvVG9WaWRlbyhtZXNzYWdlLnZpZGVvSWQpXFxcIj5cXG4gICAgICAgICAgICAgICAgPGVsLWNhcmQgc2hhZG93PVxcXCJob3ZlclxcXCIgY2xhc3M9XFxcIm1lc3NhZ2Utc291cmNlLWNhcmRcXFwiIDpjbGFzcz1cXFwieyAnY2xpY2thYmxlJzogbWVzc2FnZS52aWRlb0lkIH1cXFwiPlxcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1jb250ZW50LXdyYXBwZXJcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic291cmNlLWltYWdlXFxcIiB2LWlmPVxcXCJtZXNzYWdlLnNvdXJjZS5jb3ZlclxcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cXFwibWVzc2FnZS5zb3VyY2UuY292ZXJcXFwiIGFsdD1cXFwiXFx1ODljNlxcdTk4OTFcXHU1YzAxXFx1OTc2MlxcXCIgLz5cXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cXFwic291cmNlLXRleHRcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJzb3VyY2UtdGl0bGVcXFwiPnt7IG1lc3NhZ2Uuc291cmNlLnRpdGxlIH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcInNvdXJjZS1jb250ZW50XFxcIiB2LWlmPVxcXCJtZXNzYWdlLnNvdXJjZS5jb250ZW50XFxcIj57eyBtZXNzYWdlLnNvdXJjZS5jb250ZW50IH19PC9kaXY+XFxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cXG4gICAgICAgICAgICAgICAgPC9lbC1jYXJkPlxcbiAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgPC90ZW1wbGF0ZT5cIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDQ4LCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDcxfV19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiIjIyA1LiDmm7TmlrDmtojmga/pobnmqKHmnb/vvIzmt7vliqDor4Torrrmtojmga/nmoTnibnmrormoLflvI9cbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAxMjJcdCAgICBjb250ZW50OiAn57O757uf5bCG5LqONOaciDIw5pel6L+b6KGM57u05oqk5Y2H57qn77yM5bGK5pe25Y+v6IO95Lya5b2x5ZON6YOo5YiG5Yqf6IO955qE5L2/55So44CCJ1xuICAgMTIzXHQgIH1cbiAgIDEyNFx0XSlcbiAgIDEyNVx0XG4gICAxMjZcdC8vIOagueaNruW9k+WJjemAieS4reeahOagh+etvuWKqOaAgeiOt+WPlua2iOaBr1xuICAgMTI3XHRjb25zdCBjdXJyZW50TWVzc2FnZXMgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAxMjhcdCAgc3dpdGNoIChhY3RpdmVUYWIudmFsdWUpIHtcbiAgIDEyOVx0ICAgIGNhc2UgJ2xpa2VzJzpcbiAgIDEzMFx0ICAgICAgcmV0dXJuIGxpa2VzLnZhbHVlXG4gICAxMzFcdCAgICBjYXNlICdjb21tZW50cyc6XG4gICAxMzJcdCAgICAgIHJldHVybiBjb21tZW50cy52YWx1ZVxuICAgMTMzXHQgICAgY2FzZSAncmVwbGllcyc6XG4gICAxMzRcdCAgICAgIHJldHVybiByZXBsaWVzLnZhbHVlXG4gICAxMzVcdCAgICBjYXNlICdzeXN0ZW0nOlxuICAgMTM2XHQgICAgICByZXR1cm4gc3lzdGVtTm90aWNlcy52YWx1ZVxuICAgMTM3XHQgICAgZGVmYXVsdDpcbiAgIDEzOFx0ICAgICAgcmV0dXJuIFtdXG4gICAxMzlcdCAgfVxuICAgMTQwXHR9KVxuICAgMTQxXHRcbiAgIDE0Mlx0Ly8g6I635Y+W55So5oi35raI5oGvXG4gICAxNDNcdGNvbnN0IGdldFVzZXJNZXNzYWdlcyA9IGFzeW5jICgpID0+IHtcbiAgIDE0NFx0ICBpZiAoIWlzTG9naW4udmFsdWUpIHJldHVyblxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxQWhpcW1jMjFXY1F3d2NHcVJaRFpUbyJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIyMgNS4g5pu05paw5raI5oGv6aG55qih5p2/77yM5re75Yqg6K+E6K665raI5oGv55qE54m55q6K5qC35byPXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiOWY4NWMyY2YtYjNiMi00Yzc3LTk0MDgtOWMwMTIwYzdkMTcxIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMVVNQVFGNkJqR3pFQmVqN1RSZVdHaTIiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInN0cl9yZXBsYWNlXCIsIFwicGF0aFwiOiBcInNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZVwiLCBcInN0cl9yZXBsYWNlX2VudHJpZXNcIjogW3tcIm9sZF9zdHJcIjogXCIuY2hhdC1tZXNzYWdlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY3Zjg7XFxuICBwYWRkaW5nOiAxMnB4IDE2cHg7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbiAgbGluZS1oZWlnaHQ6IDEuNjtcXG59XCIsIFwibmV3X3N0clwiOiBcIi5jaGF0LW1lc3NhZ2Uge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjdmODtcXG4gIHBhZGRpbmc6IDEycHggMTZweDtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIG1hcmdpbi1ib3R0b206IDA7XFxuICBsaW5lLWhlaWdodDogMS42O1xcbn1cXG5cXG4uY29tbWVudC1tZXNzYWdlIHtcXG4gIG1hcmdpbi1ib3R0b206IDEycHg7XFxuICBsaW5lLWhlaWdodDogMS42O1xcbn1cXG5cXG4uY29tbWVudC1jb250ZW50IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY3Zjg7XFxuICBwYWRkaW5nOiA4cHggMTJweDtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGNvbG9yOiAjMTgxOTFjO1xcbn1cIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDQwOSwgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiA0MTV9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IiMjIDYuIOa3u+WKoOivhOiuuua2iOaBr+eahOagt+W8j1xuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICA0OVx0ICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtaW5mb1wiPlxuICAgIDUwXHQgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWVzc2FnZS11c2VybmFtZVwiPnt7IG1lc3NhZ2UudXNlcm5hbWUgfX08L3NwYW4+XG4gICAgNTFcdCAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtZXNzYWdlLXRpbWVcIj57eyBtZXNzYWdlLnRpbWUgfX08L3NwYW4+XG4gICAgNTJcdCAgICAgICAgICAgIDwvZGl2PlxuICAgIDUzXHQgICAgICAgICAgICA8IS0tIOiBiuWkqea2iOaBr+aYvuekuiAtLT5cbiAgICA1NFx0ICAgICAgICAgICAgPGRpdiB2LWlmPVwibWVzc2FnZS5pc0NoYXRcIiBjbGFzcz1cIm1lc3NhZ2UtdGV4dCBjaGF0LW1lc3NhZ2VcIiBAY2xpY2s9XCJnb1RvQ2hhdChtZXNzYWdlLmNoYXRVc2VybmFtZSlcIiA6Y2xhc3M9XCJ7ICdjbGlja2FibGUnOiBtZXNzYWdlLmlzQ2hhdCB9XCI+XG4gICAgNTVcdCAgICAgICAgICAgICAge3sgbWVzc2FnZS5jb250ZW50IH19XG4gICAgNTZcdCAgICAgICAgICAgIDwvZGl2PlxuICAgIDU3XHRcbiAgICA1OFx0ICAgICAgICAgICAgPCEtLSDor4Torrrmtojmga/mmL7npLogLS0+XG4gICAgNTlcdCAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2UtaWY9XCJtZXNzYWdlLmlzQ29tbWVudFwiPlxuICAgIDYwXHQgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLXRleHQgY29tbWVudC1tZXNzYWdlXCI+XG4gICAgNjFcdCAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImNvbW1lbnQtY29udGVudFwiPnt7IG1lc3NhZ2UuY29udGVudCB9fTwvc3Bhbj5cbiAgICA2Mlx0ICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA2M1x0ICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1zb3VyY2VcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2VcIiBAY2xpY2s9XCJtZXNzYWdlLnZpZGVvSWQgJiYgZ29Ub1ZpZGVvKG1lc3NhZ2UudmlkZW9JZClcIj5cbiAgICA2NFx0ICAgICAgICAgICAgICAgIDxlbC1jYXJkIHNoYWRvdz1cImhvdmVyXCIgY2xhc3M9XCJtZXNzYWdlLXNvdXJjZS1jYXJkXCIgOmNsYXNzPVwieyAnY2xpY2thYmxlJzogbWVzc2FnZS52aWRlb0lkIH1cIj5cbiAgICA2NVx0ICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS1jb250ZW50LXdyYXBwZXJcIj5cbiAgICA2Nlx0ICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWltYWdlXCIgdi1pZj1cIm1lc3NhZ2Uuc291cmNlLmNvdmVyXCI+XG4gICAgNjdcdCAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCJtZXNzYWdlLnNvdXJjZS5jb3ZlclwiIGFsdD1cIuinhumikeWwgemdolwiIC8+XG4gICAgNjhcdCAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgNjlcdCAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS10ZXh0XCI+XG4gICAgNzBcdCAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLXRpdGxlXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cbiAgICA3MVx0ICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA3Mlx0ICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgNzNcdCAgICAgICAgICAgICAgICA8L2VsLWNhcmQ+XG4gICAgNzRcdCAgICAgICAgICAgICAgPC9kaXY+XG4gICAgNzVcdCAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgNzZcdFxuICAgIDc3XHQgICAgICAgICAgICA8IS0tIOeCuei1nua2iOaBr+aYvuekuiAtLT5cbiAgICA3OFx0ICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZT5cbiAgICA3OVx0ICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS10ZXh0XCI+e3sgbWVzc2FnZS5jb250ZW50IH19PC9kaXY+XG4gICAgODBcdCAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2Utc291cmNlXCIgdi1pZj1cIm1lc3NhZ2Uuc291cmNlXCIgQGNsaWNrPVwibWVzc2FnZS52aWRlb0lkICYmIGdvVG9WaWRlbyhtZXNzYWdlLnZpZGVvSWQpXCI+XG4gICAgODFcdCAgICAgICAgICAgICAgICA8ZWwtY2FyZCBzaGFkb3c9XCJob3ZlclwiIGNsYXNzPVwibWVzc2FnZS1zb3VyY2UtY2FyZFwiIDpjbGFzcz1cInsgJ2NsaWNrYWJsZSc6IG1lc3NhZ2UudmlkZW9JZCB9XCI+XG4gICAgODJcdCAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtY29udGVudC13cmFwcGVyXCI+XG4gICAgODNcdCAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS1pbWFnZVwiIHYtaWY9XCJtZXNzYWdlLnNvdXJjZS5jb3ZlclwiPlxuICAgIDg0XHQgICAgICAgICAgICAgICAgICAgICAgPGltZyA6c3JjPVwibWVzc2FnZS5zb3VyY2UuY292ZXJcIiBhbHQ9XCLop4bpopHlsIHpnaJcIiAvPlxuICAgIDg1XHQgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgIDg2XHQgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtdGV4dFwiPlxuICAgIDg3XHQgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS10aXRsZVwiPnt7IG1lc3NhZ2Uuc291cmNlLnRpdGxlIH19PC9kaXY+XG4gICAgODhcdCAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWNvbnRlbnRcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2UuY29udGVudFwiPnt7IG1lc3NhZ2Uuc291cmNlLmNvbnRlbnQgfX08L2Rpdj5cbiAgICA4OVx0ICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA5MFx0ICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgOTFcdCAgICAgICAgICAgICAgICA8L2VsLWNhcmQ+XG4gICAgOTJcdCAgICAgICAgICAgICAgPC9kaXY+XG4gICAgOTNcdCAgICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgOTRcdCAgICAgICAgICA8L2Rpdj5cbiAgICA5NVx0ICAgICAgICA8L2Rpdj5cbiAgICA5Nlx0ICAgICAgPC9kaXY+XG4gICAgOTdcdCAgICAgIDxlbC1lbXB0eSB2LWVsc2UgZGVzY3JpcHRpb249XCLmmoLml6Dmtojmga9cIj48L2VsLWVtcHR5PlxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxOGVRZWtadTdoVVpVSGY0OXlLY1gzWSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIyMgNi4g5re75Yqg6K+E6K665raI5oGv55qE5qC35byPXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiOTI3YzgzMTMtZWY2ZS00YTAzLWI4ODMtZmE4MzE5MDNmNzY1IiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5oiR5bey57uP5a6M5oiQ5LqG5raI5oGv5Lit5b+D6aG16Z2i55qE5L+u5pS577yM5Lul6YCC6YWN5paw5aKe55qEIGBjb21tZW50c01lc3NhZ2VgIOaVsOe7hO+8iOivhOiuuua2iOaBr++8ieOAguS7peS4i+aYr+aIkeaJgOWBmueahOS/ruaUue+8mlxuXG4jIyMgMS4g5pWw5o2u57uT5p6E5pu05pawXG4tIOa3u+WKoOS6hiBgY29tbWVudHNgIOaVsOe7hO+8jOeUqOS6juWtmOWCqOivhOiuuua2iOaBr+aVsOaNrlxuLSDlnKggYGdldFVzZXJNZXNzYWdlc2Ag5Ye95pWw5Lit5re75Yqg5LqG6K+E6K665raI5oGv55qE5aSE55CG6YC76L6RXG4tIOS4uuivhOiuuua2iOaBr+a3u+WKoOS6hiBgaXNDb21tZW50YCDmoIforrDvvIzku6Xkvr/lnKjnlYzpnaLkuIrljLrliIbkuI3lkIznsbvlnovnmoTmtojmga9cblxuIyMjIDIuIOiPnOWNlemhueabtOaWsFxuLSDmt7vliqDkuoZcIuivhOiuuua2iOaBr1wi6I+c5Y2V6aG577yM57Si5byV5Li6IGBjb21tZW50c2Bcbi0g5re75Yqg5LqG6K+E6K665raI5oGv5pWw6YeP5b6956ug77yM5pi+56S66K+E6K665raI5oGv55qE5pWw6YePXG4tIOS/neeVmeS6huWOn+acieeahOezu+e7n+mAmuefpeiPnOWNlemhuVxuXG4jIyMgMy4g5raI5oGv5pi+56S65pu05pawXG4tIOa3u+WKoOS6huivhOiuuua2iOaBr+eahOeJueauiuaYvuekuuaooeadv1xuLSDor4TorrrlhoXlrrnkvb/nlKjkuobmsJTms6HmoLflvI/vvIzkuI7ogYrlpKnmtojmga/ljLrliIZcbi0g5L+d55WZ5LqG6KeG6aKR5Y2h54mH77yM5pi+56S66KeG6aKR5bCB6Z2i5ZKM5qCH6aKYXG4tIOa3u+WKoOS6hueCueWHu+inhumikeWNoeeJh+i3s+i9rOWIsOinhumikeivpuaDhemhteeahOWKn+iDvVxuXG4jIyMgNC4g5qC35byP5pu05pawXG4tIOa3u+WKoOS6huivhOiuuua2iOaBr+eahOawlOazoeagt+W8j1xuLSDkvb/nlKjkuobkuI3lkIznmoTog4zmma/oibLlkozovrnmoYbvvIzkvb/or4Torrrmtojmga/mm7TmmJPkuo7or4bliKtcbi0g5L+d5oyB5LqG5LiO5pW05L2T6K6+6K6h6aOO5qC855qE5LiA6Ie05oCnXG5cbiMjIyA1LiDorqHnrpflsZ7mgKfmm7TmlrBcbi0g5pu05paw5LqGIGBjdXJyZW50TWVzc2FnZXNgIOiuoeeul+WxnuaAp++8jOa3u+WKoOS6huivhOiuuua2iOaBr+eahOWkhOeQhumAu+i+kVxuLSDmoLnmja7lvZPliY3pgInkuK3nmoTmoIfnrb7pobXvvIzliqjmgIHmmL7npLrkuI3lkIznsbvlnovnmoTmtojmga9cblxu546w5Zyo77yM5raI5oGv5Lit5b+D6aG16Z2i5Y+v5Lul5q2j56Gu5aSE55CG5ZKM5pi+56S65LiJ56eN57G75Z6L55qE5raI5oGv77ya54K56LWe5raI5oGv44CB6K+E6K665raI5oGv5ZKM6IGK5aSp5raI5oGv44CC55So5oi35Y+v5Lul6YCa6L+H54K55Ye755u45bqU55qE6I+c5Y2V6aG55p+l55yL5LiN5ZCM57G75Z6L55qE5raI5oGv77yM5bm26YCa6L+H54K55Ye75raI5oGv6Lez6L2s5Yiw55u45bqU55qE6aG16Z2i77yI6KeG6aKR6K+m5oOF6aG15oiW6IGK5aSp6aG16Z2i77yJ44CCXG5cbui/meS6m+S/ruaUueWujOWFqOmAgumFjeS6huaWsOeahOaVsOaNrue7k+aehO+8jOW5tuaPkOS+m+S6huiJr+WlveeahOeUqOaIt+S9k+mqjOOAglxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDM5Nlx0LmNsaWNrYWJsZTpob3ZlciB7XG4gICAzOTdcdCAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjFmMjtcbiAgIDM5OFx0fVxuICAgMzk5XHRcbiAgIDQwMFx0LmNoYXQtbWVzc2FnZSB7XG4gICA0MDFcdCAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjdmODtcbiAgIDQwMlx0ICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gICA0MDNcdCAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgNDA0XHQgIG1hcmdpbi1ib3R0b206IDA7XG4gICA0MDVcdCAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgIDQwNlx0fVxuICAgNDA3XHRcbiAgIDQwOFx0LmNvbW1lbnQtbWVzc2FnZSB7XG4gICA0MDlcdCAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgIDQxMFx0ICBsaW5lLWhlaWdodDogMS42O1xuICAgNDExXHR9XG4gICA0MTJcdFxuICAgNDEzXHQuY29tbWVudC1jb250ZW50IHtcbiAgIDQxNFx0ICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmN2Y4O1xuICAgNDE1XHQgIHBhZGRpbmc6IDhweCAxMnB4O1xuICAgNDE2XHQgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgIDQxN1x0ICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICA0MThcdCAgY29sb3I6ICMxODE5MWM7XG4gICA0MTlcdH1cbiAgIDQyMFx0XG4gICA0MjFcdC5tZXNzYWdlLWJhZGdlIDpkZWVwKC5lbC1iYWRnZV9fY29udGVudCkge1xuICAgNDIyXHQgIGJhY2tncm91bmQtY29sb3I6ICNmYjcyOTk7XG4gICA0MjNcdCAgYm9yZGVyOiBub25lO1xuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxVU1BUUY2QmpHekVCZWo3VFJlV0dpMiJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5oiR5bey57uP5a6M5oiQ5LqG5raI5oGv5Lit5b+D6aG16Z2i55qE5L+u5pS577yM5Lul6YCC6YWN5paw5aKe55qEIGBjb21tZW50c01lc3NhZ2VgIOaVsOe7hO+8iOivhOiuuua2iOaBr++8ieOAguS7peS4i+aYr+aIkeaJgOWBmueahOS/ruaUue+8mlxuXG4jIyMgMS4g5pWw5o2u57uT5p6E5pu05pawXG4tIOa3u+WKoOS6hiBgY29tbWVudHNgIOaVsOe7hO+8jOeUqOS6juWtmOWCqOivhOiuuua2iOaBr+aVsOaNrlxuLSDlnKggYGdldFVzZXJNZXNzYWdlc2Ag5Ye95pWw5Lit5re75Yqg5LqG6K+E6K665raI5oGv55qE5aSE55CG6YC76L6RXG4tIOS4uuivhOiuuua2iOaBr+a3u+WKoOS6hiBgaXNDb21tZW50YCDmoIforrDvvIzku6Xkvr/lnKjnlYzpnaLkuIrljLrliIbkuI3lkIznsbvlnovnmoTmtojmga9cblxuIyMjIDIuIOiPnOWNlemhueabtOaWsFxuLSDmt7vliqDkuoZcIuivhOiuuua2iOaBr1wi6I+c5Y2V6aG577yM57Si5byV5Li6IGBjb21tZW50c2Bcbi0g5re75Yqg5LqG6K+E6K665raI5oGv5pWw6YeP5b6956ug77yM5pi+56S66K+E6K665raI5oGv55qE5pWw6YePXG4tIOS/neeVmeS6huWOn+acieeahOezu+e7n+mAmuefpeiPnOWNlemhuVxuXG4jIyMgMy4g5raI5oGv5pi+56S65pu05pawXG4tIOa3u+WKoOS6huivhOiuuua2iOaBr+eahOeJueauiuaYvuekuuaooeadv1xuLSDor4TorrrlhoXlrrnkvb/nlKjkuobmsJTms6HmoLflvI/vvIzkuI7ogYrlpKnmtojmga/ljLrliIZcbi0g5L+d55WZ5LqG6KeG6aKR5Y2h54mH77yM5pi+56S66KeG6aKR5bCB6Z2i5ZKM5qCH6aKYXG4tIOa3u+WKoOS6hueCueWHu+inhumikeWNoeeJh+i3s+i9rOWIsOinhumikeivpuaDhemhteeahOWKn+iDvVxuXG4jIyMgNC4g5qC35byP5pu05pawXG4tIOa3u+WKoOS6huivhOiuuua2iOaBr+eahOawlOazoeagt+W8j1xuLSDkvb/nlKjkuobkuI3lkIznmoTog4zmma/oibLlkozovrnmoYbvvIzkvb/or4Torrrmtojmga/mm7TmmJPkuo7or4bliKtcbi0g5L+d5oyB5LqG5LiO5pW05L2T6K6+6K6h6aOO5qC855qE5LiA6Ie05oCnXG5cbiMjIyA1LiDorqHnrpflsZ7mgKfmm7TmlrBcbi0g5pu05paw5LqGIGBjdXJyZW50TWVzc2FnZXNgIOiuoeeul+WxnuaAp++8jOa3u+WKoOS6huivhOiuuua2iOaBr+eahOWkhOeQhumAu+i+kVxuLSDmoLnmja7lvZPliY3pgInkuK3nmoTmoIfnrb7pobXvvIzliqjmgIHmmL7npLrkuI3lkIznsbvlnovnmoTmtojmga9cblxu546w5Zyo77yM5raI5oGv5Lit5b+D6aG16Z2i5Y+v5Lul5q2j56Gu5aSE55CG5ZKM5pi+56S65LiJ56eN57G75Z6L55qE5raI5oGv77ya54K56LWe5raI5oGv44CB6K+E6K665raI5oGv5ZKM6IGK5aSp5raI5oGv44CC55So5oi35Y+v5Lul6YCa6L+H54K55Ye755u45bqU55qE6I+c5Y2V6aG55p+l55yL5LiN5ZCM57G75Z6L55qE5raI5oGv77yM5bm26YCa6L+H54K55Ye75raI5oGv6Lez6L2s5Yiw55u45bqU55qE6aG16Z2i77yI6KeG6aKR6K+m5oOF6aG15oiW6IGK5aSp6aG16Z2i77yJ44CCXG5cbui/meS6m+S/ruaUueWujOWFqOmAgumFjeS6huaWsOeahOaVsOaNrue7k+aehO+8jOW5tuaPkOS+m+S6huiJr+WlveeahOeUqOaIt+S9k+mqjOOAglxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJyZXF1ZXN0X2lkIjoiZWFkZDFhYzUtZTM5NC00MjE0LThjMTItYjllMzVmYTRiNGNlIiwidXVpZCI6IjA4ZjM5ZDk0LWFhZmQtNDEwZi1iMmM0LTA3NzNlN2MyZjI3OSIsImNoYXRJdGVtVHlwZSI6ImFnZW50aWMtY2hlY2twb2ludC1kZWxpbWl0ZXIiLCJzdGF0dXMiOiJzdWNjZXNzIiwiZnJvbVRpbWVzdGFtcCI6MTc0NDg3MTA4NjA0NSwidG9UaW1lc3RhbXAiOjE3NDQ4NzczMDY0ODQsInNlZW5fc3RhdGUiOiJzZWVuIn0seyJyZXF1ZXN0X2lkIjoiM2UwNjg4MTAtZTlkZi00ZjVhLTllOTMtYjEwYjRjYmZkZGI2Iiwic3RhdHVzIjoiY2FuY2VsbGVkIiwiY2hhdEl0ZW1UeXBlIjoiYWdlbnRpYy10dXJuLWRlbGltaXRlciJ9LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiI3ZjI4YzkxMi1mY2I4LTRhNjgtODc2Mi1kZmVlMmVhYTIxMzciLCJyZXF1ZXN0X21lc3NhZ2UiOiLlvZPliY3pobnnm67pm4bmiJDkuobkuIDkuKrnrKzkuInmlrnmkq3mlL7lmagiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoi5b2T5YmN6aG555uu6ZuG5oiQ5LqG5LiA5Liq56ys5LiJ5pa55pKt5pS+5ZmoIn1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLkuobop6PvvIzmgqjmj5DliLDlvZPliY3pobnnm67pm4bmiJDkuobkuIDkuKrnrKzkuInmlrnmkq3mlL7lmajjgILov5nmmK/kuIDkuKrph43opoHnmoTkv6Hmga/vvIzlj6/og73kuI7op4bpopHmkq3mlL7nm7jlhbPnmoTlip/og73mnInlhbPjgIJcblxu5aaC5p6c5oKo6ZyA6KaB5oiR5biu5Yqp5aSE55CG5LiO6L+Z5Liq56ys5LiJ5pa55pKt5pS+5Zmo55u45YWz55qE5Lu75L2V6Zeu6aKY5oiW5Yqf6IO977yM6K+35o+Q5L6b5pu05aSa6K+m57uG5L+h5oGv77yM5L6L5aaC77yaXG5cbjEuIOS9v+eUqOeahOaYr+WTquS4quesrOS4ieaWueaSreaUvuWZqO+8iOS+i+WmgiBBcnRQbGF5ZXLjgIFWaWRlby5qc+OAgVBseXIg562J77yJXG4yLiDmgqjmg7PopoHlrp7njrDnmoTlhbfkvZPlip/og73miJbpnIDopoHop6PlhrPnmoTpl67pophcbjMuIOaSreaUvuWZqOeahOW9k+WJjemFjee9ruaIluS9v+eUqOaWueW8j1xuNC4g55u45YWz55qE5Luj56CB5paH5Lu25oiW57uE5Lu2XG5cbuS7juaIkeS5i+WJjeeci+WIsOeahOS7o+eggeS4re+8jOaIkeazqOaEj+WIsOWcqCBgcGFja2FnZS5qc29uYCDkuK3mnIkgYGFydHBsYXllcmAg5ZKMIGBhcnRwbGF5ZXItcGx1Z2luLWRhbm11a3VgIOi/meS4pOS4quS+nei1lu+8jOi/meihqOaYjumhueebruWPr+iDveS9v+eUqOS6hiBBcnRQbGF5ZXIg5L2c5Li66KeG6aKR5pKt5pS+5Zmo77yM5bm25LiU6ZuG5oiQ5LqG5by55bmV5Yqf6IO944CCXG5cbuivt+WRiuivieaIkeaCqOmcgOimgeS7gOS5iOagt+eahOW4ruWKqe+8jOaIkeS8muagueaNruaCqOeahOmcgOaxguaPkOS+m+ebuOW6lOeahOino+WGs+aWueahiOOAglxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MCwidGV4dF9ub2RlIjp7ImNvbnRlbnQiOiLlvZPliY3pobnnm67pm4bmiJDkuobkuIDkuKrnrKzkuInmlrnmkq3mlL7lmagifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IuS6huino++8jOaCqOaPkOWIsOW9k+WJjemhueebrumbhuaIkOS6huS4gOS4quesrOS4ieaWueaSreaUvuWZqOOAgui/meaYr+S4gOS4qumHjeimgeeahOS/oeaBr++8jOWPr+iDveS4juinhumikeaSreaUvuebuOWFs+eahOWKn+iDveacieWFs+OAglxuXG7lpoLmnpzmgqjpnIDopoHmiJHluK7liqnlpITnkIbkuI7ov5nkuKrnrKzkuInmlrnmkq3mlL7lmajnm7jlhbPnmoTku7vkvZXpl67popjmiJblip/og73vvIzor7fmj5Dkvpvmm7TlpJror6bnu4bkv6Hmga/vvIzkvovlpoLvvJpcblxuMS4g5L2/55So55qE5piv5ZOq5Liq56ys5LiJ5pa55pKt5pS+5Zmo77yI5L6L5aaCIEFydFBsYXllcuOAgVZpZGVvLmpz44CBUGx5ciDnrYnvvIlcbjIuIOaCqOaDs+imgeWunueOsOeahOWFt+S9k+WKn+iDveaIlumcgOimgeino+WGs+eahOmXrumimFxuMy4g5pKt5pS+5Zmo55qE5b2T5YmN6YWN572u5oiW5L2/55So5pa55byPXG40LiDnm7jlhbPnmoTku6PnoIHmlofku7bmiJbnu4Tku7Zcblxu5LuO5oiR5LmL5YmN55yL5Yiw55qE5Luj56CB5Lit77yM5oiR5rOo5oSP5Yiw5ZyoIGBwYWNrYWdlLmpzb25gIOS4reaciSBgYXJ0cGxheWVyYCDlkowgYGFydHBsYXllci1wbHVnaW4tZGFubXVrdWAg6L+Z5Lik5Liq5L6d6LWW77yM6L+Z6KGo5piO6aG555uu5Y+v6IO95L2/55So5LqGIEFydFBsYXllciDkvZzkuLrop4bpopHmkq3mlL7lmajvvIzlubbkuJTpm4bmiJDkuoblvLnluZXlip/og73jgIJcblxu6K+35ZGK6K+J5oiR5oKo6ZyA6KaB5LuA5LmI5qC355qE5biu5Yqp77yM5oiR5Lya5qC55o2u5oKo55qE6ZyA5rGC5o+Q5L6b55u45bqU55qE6Kej5Yaz5pa55qGI44CCXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InJlcXVlc3RfaWQiOiI0Y2FjNTJmYy0zODA4LTQ2ODQtYTkzYi02ZjBmYmQzOTNkMWMiLCJzdGF0dXMiOiJjYW5jZWxsZWQiLCJjaGF0SXRlbVR5cGUiOiJhZ2VudGljLXR1cm4tZGVsaW1pdGVyIn0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjcwYjc0ODcyLTRlM2YtNDU5YS1iZDg3LWNiZmQxMTIwMWU1YyIsInJlcXVlc3RfbWVzc2FnZSI6IumbhuaIkOS6hkFydFBsYXllcuesrOS4ieaWueaSreaUvuWZqCIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiLpm4bmiJDkuoZBcnRQbGF5ZXLnrKzkuInmlrnmkq3mlL7lmagifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuaEn+iwouaCqOeahOehruiupOOAgumhueebrumbhuaIkOS6hiBBcnRQbGF5ZXIg56ys5LiJ5pa55pKt5pS+5Zmo77yM6L+Z5piv5LiA5Liq5Yqf6IO95by65aSn55qEIEhUTUw1IOinhumikeaSreaUvuWZqOOAglxuXG7ku47miJHkuYvliY3nnIvliLDnmoQgYHBhY2thZ2UuanNvbmAg5paH5Lu25Lit77yM6aG555uu5L2/55So5LqG5Lul5LiL5LiOIEFydFBsYXllciDnm7jlhbPnmoTkvp3otZbvvJpcbi0gYGFydHBsYXllcmA6IOaguOW/g+aSreaUvuWZqOW6k1xuLSBgYXJ0cGxheWVyLXBsdWdpbi1kYW5tdWt1YDog5by55bmV5o+S5Lu277yM5pSv5oyB5Zyo6KeG6aKR5LiK5pi+56S65by55bmVXG5cbkFydFBsYXllciDmj5DkvpvkuoborrjlpJrlvLrlpKfnmoTlip/og73vvIzljIXmi6zvvJpcbjEuIOiHquWumuS5ieaOp+WItuagj1xuMi4g5aSa56eN6KeG6aKR5qC85byP5pSv5oyBXG4zLiDmiKrlm77lip/og71cbjQuIOeDremUruaUr+aMgVxuNS4g5by55bmV57O757ufXG42LiDmj5Lku7bmianlsZXns7vnu59cbjcuIOWkmuivreiogOaUr+aMgVxuOC4g5ZON5bqU5byP6K6+6K6hXG5cbuWmguaenOaCqOmcgOimgeaIkeW4ruWKqeWkhOeQhuS4jiBBcnRQbGF5ZXIg55u45YWz55qE5Lu75L2V6Zeu6aKY5oiW5Yqf6IO977yM5L6L5aaC77yaXG4tIOmFjee9ruaSreaUvuWZqFxuLSDmt7vliqDmiJbkv67mlLnlip/og71cbi0g6Kej5Yaz5pKt5pS+5Zmo55u45YWz55qE6Zeu6aKYXG4tIOmbhuaIkOWFtuS7luaPkuS7tlxuLSDkvJjljJbmkq3mlL7kvZPpqoxcbi0g5re75Yqg6Ieq5a6a5LmJ5o6n5Lu2XG5cbuivt+aPkOS+m+abtOWkmuWFt+S9k+eahOmcgOaxguaIlumXrumimO+8jOaIkeS8muagueaNruaCqOeahOmcgOaxguaPkOS+m+ebuOW6lOeahOino+WGs+aWueahiOOAglxuXG7mgqjmmK/lkKbmnInnibnlrprnmoQgQXJ0UGxheWVyIOebuOWFs+WKn+iDvemcgOimgeWunueOsOaIlumXrumimOmcgOimgeino+WGs++8n1xuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MCwidGV4dF9ub2RlIjp7ImNvbnRlbnQiOiLpm4bmiJDkuoZBcnRQbGF5ZXLnrKzkuInmlrnmkq3mlL7lmagifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IuaEn+iwouaCqOeahOehruiupOOAgumhueebrumbhuaIkOS6hiBBcnRQbGF5ZXIg56ys5LiJ5pa55pKt5pS+5Zmo77yM6L+Z5piv5LiA5Liq5Yqf6IO95by65aSn55qEIEhUTUw1IOinhumikeaSreaUvuWZqOOAglxuXG7ku47miJHkuYvliY3nnIvliLDnmoQgYHBhY2thZ2UuanNvbmAg5paH5Lu25Lit77yM6aG555uu5L2/55So5LqG5Lul5LiL5LiOIEFydFBsYXllciDnm7jlhbPnmoTkvp3otZbvvJpcbi0gYGFydHBsYXllcmA6IOaguOW/g+aSreaUvuWZqOW6k1xuLSBgYXJ0cGxheWVyLXBsdWdpbi1kYW5tdWt1YDog5by55bmV5o+S5Lu277yM5pSv5oyB5Zyo6KeG6aKR5LiK5pi+56S65by55bmVXG5cbkFydFBsYXllciDmj5DkvpvkuoborrjlpJrlvLrlpKfnmoTlip/og73vvIzljIXmi6zvvJpcbjEuIOiHquWumuS5ieaOp+WItuagj1xuMi4g5aSa56eN6KeG6aKR5qC85byP5pSv5oyBXG4zLiDmiKrlm77lip/og71cbjQuIOeDremUruaUr+aMgVxuNS4g5by55bmV57O757ufXG42LiDmj5Lku7bmianlsZXns7vnu59cbjcuIOWkmuivreiogOaUr+aMgVxuOC4g5ZON5bqU5byP6K6+6K6hXG5cbuWmguaenOaCqOmcgOimgeaIkeW4ruWKqeWkhOeQhuS4jiBBcnRQbGF5ZXIg55u45YWz55qE5Lu75L2V6Zeu6aKY5oiW5Yqf6IO977yM5L6L5aaC77yaXG4tIOmFjee9ruaSreaUvuWZqFxuLSDmt7vliqDmiJbkv67mlLnlip/og71cbi0g6Kej5Yaz5pKt5pS+5Zmo55u45YWz55qE6Zeu6aKYXG4tIOmbhuaIkOWFtuS7luaPkuS7tlxuLSDkvJjljJbmkq3mlL7kvZPpqoxcbi0g5re75Yqg6Ieq5a6a5LmJ5o6n5Lu2XG5cbuivt+aPkOS+m+abtOWkmuWFt+S9k+eahOmcgOaxguaIlumXrumimO+8jOaIkeS8muagueaNruaCqOeahOmcgOaxguaPkOS+m+ebuOW6lOeahOino+WGs+aWueahiOOAglxuXG7mgqjmmK/lkKbmnInnibnlrprnmoQgQXJ0UGxheWVyIOebuOWFs+WKn+iDvemcgOimgeWunueOsOaIlumXrumimOmcgOimgeino+WGs++8n1xuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJyZXF1ZXN0X2lkIjoiNWQzMjgwNzQtNmFhOS00YTZkLTkxNjEtMWY4YjRmNTEzOWU5Iiwic3RhdHVzIjoiY2FuY2VsbGVkIiwiY2hhdEl0ZW1UeXBlIjoiYWdlbnRpYy10dXJuLWRlbGltaXRlciJ9LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiI3NDNlM2ZmZC0xNTNkLTQ2NmEtOTY3MC0xZjRkOTBmYWU0MzIiLCJyZXF1ZXN0X21lc3NhZ2UiOiLpnIDopoHlvIDlkK/lvZPliY3mkq3mlL7lmajnmoTlvLnluZXns7vnu58iLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIiwiY29udGVudCI6W3sidHlwZSI6InRleHQiLCJ0ZXh0Ijoi6ZyA6KaB5byA5ZCv5b2T5YmN5pKt5pS+5Zmo55qE5by55bmV57O757ufIn1dfV19LCJtZW50aW9uZWRfaXRlbXMiOltdLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxTW14dTVNSnR0Wm1vTFk4bzNiMjlvbyIsInRvb2xfbmFtZSI6ImNvZGViYXNlLXJldHJpZXZhbCIsImlucHV0X2pzb24iOiJ7XCJpbmZvcm1hdGlvbl9yZXF1ZXN0XCI6IFwiXFx1NjdlNVxcdTYyN2VcXHU0ZTBlXFx1ODljNlxcdTk4OTFcXHU2NGFkXFx1NjUzZVxcdTU2NjhcXHU3NmY4XFx1NTE3M1xcdTc2ODRcXHU3ZWM0XFx1NGVmNlxcdTYyMTZcXHU2NTg3XFx1NGVmNlxcdWZmMGNcXHU3Mjc5XFx1NTIyYlxcdTY2MmZcXHU0ZjdmXFx1NzUyOCBBcnRQbGF5ZXIgXFx1NzY4NFxcdTY1ODdcXHU0ZWY2XCJ9In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiLmiJHlsIbluK7mgqjlvIDlkK8gQXJ0UGxheWVyIOaSreaUvuWZqOeahOW8ueW5leezu+e7n+OAguiuqeaIkeS7rOmmluWFiOafpeeci+W9k+WJjeeahOinhumikeaSreaUvuWZqOe7hOS7tu+8jOeEtuWQjua3u+WKoOW8ueW5leWKn+iDveOAglxuXG4jIyDorqHliJJcbjEuIOafpeaJvuW9k+WJjeeahOinhumikeaSreaUvuWZqOe7hOS7tlxuMi4g5qOA5p+l5piv5ZCm5bey57uP5pyJ5by55bmV55u45YWz55qE5Luj56CBXG4zLiDmt7vliqDmiJbkv67mlLnku6PnoIHku6XlvIDlkK/lvLnluZXns7vnu59cbjQuIOa3u+WKoOW8ueW5leWPkemAgeWKn+iDve+8iOWmguaenOmcgOimge+8iVxuXG7orqnmiJHku6zlvIDlp4vvvJpcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjAsInRleHRfbm9kZSI6eyJjb250ZW50Ijoi6ZyA6KaB5byA5ZCv5b2T5YmN5pKt5pS+5Zmo55qE5by55bmV57O757ufIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLmiJHlsIbluK7mgqjlvIDlkK8gQXJ0UGxheWVyIOaSreaUvuWZqOeahOW8ueW5leezu+e7n+OAguiuqeaIkeS7rOmmluWFiOafpeeci+W9k+WJjeeahOinhumikeaSreaUvuWZqOe7hOS7tu+8jOeEtuWQjua3u+WKoOW8ueW5leWKn+iDveOAglxuXG4jIyDorqHliJJcbjEuIOafpeaJvuW9k+WJjeeahOinhumikeaSreaUvuWZqOe7hOS7tlxuMi4g5qOA5p+l5piv5ZCm5bey57uP5pyJ5by55bmV55u45YWz55qE5Luj56CBXG4zLiDmt7vliqDmiJbkv67mlLnku6PnoIHku6XlvIDlkK/lvLnluZXns7vnu59cbjQuIOa3u+WKoOW8ueW5leWPkemAgeWKn+iDve+8iOWmguaenOmcgOimge+8iVxuXG7orqnmiJHku6zlvIDlp4vvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiJiNzkzMDAwZS03ZTFjLTQyODMtYTQzMC04OGZkNjRhYTI3OWQiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxUDFvV3lBems4ZHNnNWtOU3ptRXRyeCIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwidmlld1wiLCBcInBhdGhcIjogXCJzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWVcIiwgXCJ2aWV3X3JhbmdlXCI6IFs1MCwgMTIwXX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuagueaNruajgOe0ouWIsOeahOS7o+egge+8jOaIkeWPkeeOsOmhueebruW3sue7j+mbhuaIkOS6hiBBcnRQbGF5ZXIg5pKt5pS+5Zmo5ZKM5by55bmV57O757uf44CC5ZyoIGBWaWRlb1BsYXllci52dWVgIOe7hOS7tuS4re+8jOW3sue7j+mFjee9ruS6hiBgYXJ0cGxheWVyLXBsdWdpbi1kYW5tdWt1YCDmj5Lku7bvvIzlubbkuJTlt7Lnu4/lrp7njrDkuoblvLnluZXnmoTojrflj5blkozlj5HpgIHlip/og73jgIJcblxu6K6p5oiR5qOA5p+l5LiA5LiL5b2T5YmN55qE5by55bmV57O757uf6YWN572u77yM55yL55yL5piv5ZCm5bey57uP5byA5ZCv77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJUaGUgZm9sbG93aW5nIGNvZGUgc2VjdGlvbnMgd2VyZSByZXRyaWV2ZWQ6XG5QYXRoOiBzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWVcbjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cInZpZGVvLXBsYXllclwiIHJlZj1cInBsYXllckNvbnRhaW5lclwiIEBtb3VzZW1vdmU9XCJoYW5kbGVNb3VzZU1vdmVcIiBAbW91c2VsZWF2ZT1cImhhbmRsZU1vdXNlTGVhdmVcIj5cbiAgICA8ZGl2IGNsYXNzPVwiYmFjay1idXR0b25cIiBAY2xpY2s9XCJyb3V0ZXIuYmFjaygpXCIgOmNsYXNzPVwieyAnc2hvdy1jb250cm9sJzogaXNDb250cm9sVmlzaWJsZSB9XCI+XG4gICAgICA8aW1nIDpzcmM9XCJSZXR1cm5JY29uXCIgYWx0PVwi6L+U5ZueXCIvPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJhcnRwbGF5ZXItYXBwXCI+PC9kaXY+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7cmVmLCBvbk1vdW50ZWQsIG9uVW5tb3VudGVkLCB3YXRjaCwgbmV4dFRpY2t9IGZyb20gJ3Z1ZSdcbmltcG9ydCBBcnRwbGF5ZXIgZnJvbSAnYXJ0cGxheWVyJ1xuaW1wb3J0IGFydHBsYXllclBsdWdpbkRhbm11a3UgZnJvbSAnYXJ0cGxheWVyLXBsdWdpbi1kYW5tdWt1J1xuaW1wb3J0IHt1c2VSb3V0ZXJ9IGZyb20gJ3Z1ZS1yb3V0ZXInXG5pbXBvcnQge3NlbmRCYXJyYWdlU2VydmljZSwgZ2V0QmFycmFnZVNlcnZpY2V9IGZyb20gJ0AvYXBpL2JhcnJhZ2UnXG5pbXBvcnQge0VsTWVzc2FnZX0gZnJvbSAnZWxlbWVudC1wbHVzJ1xuaW1wb3J0IFJldHVybkljb24gZnJvbSAnQC9hc3NldHMvaWNvbnN2Zy9jb2luLnN2ZydcblxuY29uc3QgcHJvcHMgPSBkZWZpbmVQcm9wcyh7XG4gIHZpZGVvVXJsOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH0sXG4gIHBvc3Rlcjoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBkZWZhdWx0OiAnJ1xuICB9LFxuICB0aXRsZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBkZWZhdWx0OiAnJ1xuICB9LFxuICBpc0NvbGxhcHNlZDoge1xuICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgZGVmYXVsdDogZmFsc2VcbiAgfSxcbiAgdmlkZW9JZDoge1xuICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfVxufSlcblxuY29uc3QgZW1pdCA9IGRlZmluZUVtaXRzKFsndG9nZ2xlLWNvbGxhcHNlJ10pXG5jb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuY29uc3QgYXJ0ID0gcmVmKG51bGwpXG5jb25zdCBwbGF5ZXJDb250YWluZXIgPSByZWYobnVsbClcblxuLy8g5re75Yqg5o6n5Yi25pi+56S654q25oCBXG5jb25zdCBpc0NvbnRyb2xWaXNpYmxlID0gcmVmKGZhbHNlKVxuXG4vLyDpvKDmoIfnp7vliqjlpITnkIZcbmNvbnN0IGhhbmRsZU1vdXNlTW92ZSA9ICgpID0+IHtcbiAgaXNDb250cm9sVmlzaWJsZS52YWx1ZSA9IHRydWVcbn1cblxuLy8g6byg5qCH56a75byA5aSE55CGXG5jb25zdCBoYW5kbGVNb3VzZUxlYXZlID0gKCkgPT4ge1xuICBpc0NvbnRyb2xWaXNpYmxlLnZhbHVlID0gZmFsc2Vcbn1cblxuLy8g5re75Yqg5a+5572R6aG15YWo5bGP54q25oCB55qE566h55CGXG5jb25zdCBpc1dlYkZ1bGxzY3JlZW4gPSByZWYoZmFsc2UpXG5cbi8vIOWIneWni+WMluaSreaUvuWZqFxuY29uc3QgaW5pdFBsYXllciA9ICgpID0+IHtcbiAgaWYgKGFydC52YWx1ZSkgcmV0dXJuXG5cbiAgLy8g5qOA5p+l6KeG6aKRVVJM5piv5ZCm5pyJ5pWIXG4gIGlmICghcHJvcHMudmlkZW9VcmwgfHwgIXBsYXllckNvbnRhaW5lci52YWx1ZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+inhumikVVSTOaXoOaViOaIluWuueWZqOacquWwsee7qicpXG4gICAgcmV0dXJuXG4gIH1cblxuICAvLyDnoa7kv53lrrnlmajlhoXmnIkgYXJ0cGxheWVyLWFwcCDlhYPntKBcbiAgY29uc3QgY29udGFpbmVyID0gcGxheWVyQ29udGFpbmVyLnZhbHVlLnF1ZXJ5U2VsZWN0b3IoJy5hcnRwbGF5ZXItYXBwJylcbiAgaWYgKCFjb250YWluZXIpIHtcbiAgICBjb25zb2xlLmVycm9yKCfmib7kuI3liLDmkq3mlL7lmajlrrnlmajlhYPntKAnKVxuICAgIHJldHVyblxuICB9XG5cbiAgYXJ0LnZhbHVlID0gbmV3IEFydHBsYXllcih7XG4gICAgY29udGFpbmVyOiBjb250YWluZXIsXG4gICAgdXJsOiBwcm9wcy52aWRlb1VybCxcbiAgICBwb3N0ZXI6IHByb3BzLnBvc3RlcixcbiAgICB0aXRsZTogcHJvcHMudGl0bGUsXG4gICAgdm9sdW1lOiAwLjUsXG4gICAgaXNMaXZlOiBmYWxzZSxcbiAgICBtdXRlZDogZmFsc2UsXG4gICAgYXV0b3BsYXk6IGZhbHNlLFxuICAgIHBpcDogdHJ1ZSxcbiAgICBhdXRvU2l6ZTogdHJ1ZSxcbiAgICBhdXRvTWluaTogdHJ1ZSxcbiAgICBzY3JlZW5zaG90OiB0cnVlLFxuICAgIHNldHRpbmc6IHRydWUsXG4gICAgbG9vcDogZmFsc2UsXG4gICAgZmxpcDogdHJ1ZSxcbiAgICByb3RhdGU6IHRydWUsXG4gICAgcGxheWJhY2tSYXRlOiB0cnVlLFxuICAgIGFzcGVjdFJhdGlvOiB0cnVlLFxuICAgIGZ1bGxzY3JlZW46IHRydWUsXG4gICAgZnVsbHNjcmVlbldlYjogdHJ1ZSxcbiAgICBzdWJ0aXRsZU9mZnNldDogdHJ1ZSxcbiAgICBtaW5pUHJvZ3Jlc3NCYXI6IHRydWUsXG4gICAgbXV0ZXg6IHRydWUsXG4gICAgYmFja2Ryb3A6IHRydWUsXG4gICAgcGxheXNJbmxpbmU6IHRydWUsXG4gICAgYXV0b1BsYXliYWNrOiB0cnVlLFxuICAgIGFpcnBsYXk6IHRydWUsXG4gICAgdGhlbWU6ICcjMDBhMWQ2JyxcbiAgICBsYW5nOiAnemgtY24nLFxuICAgIG1vcmVWaWRlb0F0dHI6IHtcbiAgICAgIGNyb3NzT3JpZ2luOiAnYW5vbnltb3VzJyxcbiAgICB9LFxuICAgIGNvbnRyb2xzOiBbXG4gICAgICB7XG4gICAgICAgIHBvc2l0aW9uOiAncmlnaHQnLFxuICAgICAgICBodG1sOiAn55S75Lit55S7JyxcbiAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBhcnQudmFsdWUucGlwID0gIWFydC52YWx1ZS5waXBcbiAgICAgICAgfSxcbiAgICAgIH0sXG4uLi5cbiAgICBwbHVnaW5zOiBbXG4gICAgICBhcnRwbGF5ZXJQbHVnaW5EYW5tdWt1KHtcbiAgICAgICAgY29udGFpbmVyOiAnLmFydHBsYXllci1hcHAnLFxuICAgICAgICBzaG93SW5wdXQ6IHRydWUsXG4gICAgICAgIC8vIOiOt+WPluW8ueW5leaVsOaNrlxuICAgICAgICBkYW5tdWt1OiBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZ2V0QmFycmFnZVNlcnZpY2UocHJvcHMudmlkZW9JZClcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEubWFwKGl0ZW0gPT4gKHtcbiAgICAgICAgICAgICAgICB0ZXh0OiBpdGVtLnRleHQsXG4gICAgICAgICAgICAgICAgdGltZTogaXRlbS50aW1lLFxuICAgICAgICAgICAgICAgIGNvbG9yOiBpdGVtLmNvbG9yIHx8ICcjRkZGRkZGJyxcbiAgICAgICAgICAgICAgICB0eXBlOiBpdGVtLnR5cGUgfHwgMCxcbiAgICAgICAgICAgICAgICBib3JkZXI6IGZhbHNlLFxuICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBbXVxuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCfojrflj5blvLnluZXlpLHotKU6JywgZXJyb3IpXG4gICAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IoJ+iOt+WPluW8ueW5leWksei0pScpXG4gICAgICAgICAgICByZXR1cm4gW11cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHNwZWVkOiA1LFxuICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICBmb250U2l6ZTogMjUsXG4gICAgICAgIGNvbG9yOiAnI0ZGRkZGRicsXG4gICAgICAgIG1vZGU6IDAsXG4gICAgICAgIG1hcmdpbjogWzEwLCAnMjUlJ10sXG4gICAgICAgIGFudGlPdmVybGFwOiB0cnVlLFxuICAgICAgICB1c2VXb3JrZXI6IHRydWUsXG4gICAgICAgIHN5bmNocm9ub3VzUGxheWJhY2s6IGZhbHNlLFxuICAgICAgICBtYXhMZW5ndGg6IDEwMCxcbiAgICAgICAgbWluV2lkdGg6IDIwMCxcbiAgICAgICAgbWF4V2lkdGg6IDQwMCxcbiAgICAgICAgdGhlbWU6ICdkYXJrJyxcbiAgICAgICAgLy8g6L6T5YWl5qGG6I635b6X54Sm54K55pe25pqC5YGc6KeG6aKRXG4gICAgICAgIG9uSW5wdXQ6ICgpID0+IHtcbiAgICAgICAgICBpZiAoYXJ0LnZhbHVlICYmICFhcnQudmFsdWUucGF1c2VkKSB7XG4gICAgICAgICAgICBhcnQudmFsdWUucGF1c2UoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLy8g5Y+R6YCB5by55bmV5ZCO5oGi5aSN5pKt5pS+XG4gICAgICAgIG9uU2VuZDogKCkgPT4ge1xuICAgICAgICAgIGlmIChhcnQudmFsdWUgJiYgYXJ0LnZhbHVlLnBhdXNlZCkge1xuICAgICAgICAgICAgYXJ0LnZhbHVlLnBsYXkoKVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLy8g5Y+R6YCB5by55bmV5YmN55qE5aSE55CGXG4gICAgICAgIGJlZm9yZUVtaXQ6IGFzeW5jIChkYW5tdSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGJhcnJhZ2VEYXRhID0ge1xuICAgICAgICAgICAgdmlkZW9JZDogcHJvcHMudmlkZW9JZCxcbiAgICAgICAgICAgIHRleHQ6IGRhbm11LnRleHQsXG4gICAgICAgICAgICB0aW1lOiBhcnQudmFsdWUuY3VycmVudFRpbWUsXG4gICAgICAgICAgICBjb2xvcjogZGFubXUuY29sb3IsXG4gICAgICAgICAgICB0eXBlOiBkYW5tdS50eXBlXG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgc2VuZEJhcnJhZ2VTZXJ2aWNlKGJhcnJhZ2VEYXRhKVxuICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHtcbiAgICAgICAgICAgIEVsTWVzc2FnZS5zdWNjZXNzKCflj5HpgIHlvLnluZXmiJDlip8nKVxuICAgICAgICAgICAgLy8g5Y+R6YCB5oiQ5Yqf5ZCO56uL5Y2z5bCG5paw5by55bmV5re75Yqg5Yiw5pKt5pS+5ZmoXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IocmVzcG9uc2UubWVzc2FnZSB8fCAn5Y+R6YCB5by55bmV5aSx6LSlJylcbiAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICBdXG4gIH0pXG5cbiAgLy8g55uR5ZCs5pKt5pS+5Zmo5LqL5Lu2XG4gIGFydC52YWx1ZS5vbigncmVhZHknLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ+inhumikeaSreaUvuWZqOW3suWwsee7qicpXG4gIH0pXG5cbiAgYXJ0LnZhbHVlLm9uKCdwbGF5JywgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCfop4bpopHlvIDlp4vmkq3mlL4nKVxuICB9KVxuXG4gIGFydC52YWx1ZS5vbigncGF1c2UnLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ+inhumikeaaguWBnCcpXG4gIH0pXG5cbiAgLy8g6ZSZ6K+v5aSE55CGXG4gIGFydC52YWx1ZS5vbignZXJyb3InLCAoZXJyb3IpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCfop4bpopHmkq3mlL7plJnor686JywgZXJyb3IpXG4gICAgRWxNZXNzYWdlLmVycm9yKCfop4bpopHliqDovb3lpLHotKXvvIzor7fnqI3lkI7ph43or5UnKVxuICB9KVxuXG4gIC8vIOebkeWQrOWFqOWxj+S6i+S7tlxuICBhcnQudmFsdWUub24oJ2Z1bGxzY3JlZW4nLCAoc3RhdGUpID0+IHtcbiAgICBlbWl0KCd0b2dnbGUtY29sbGFwc2UnLCBzdGF0ZSlcbiAgfSlcblxuICAvLyDnm5HlkKznvZHpobXlhajlsY/kuovku7ZcbiAgYXJ0LnZhbHVlLm9uKCdmdWxsc2NyZWVuV2ViJywgKHN0YXRlKSA9PiB7XG4gICAgaXNXZWJGdWxsc2NyZWVuLnZhbHVlID0gc3RhdGVcbiAgICAvLyDmjqfliLZib2R55rua5YqoXG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9IHN0YXRlID8gJ2hpZGRlbicgOiAnJ1xuICAgIGVtaXQoJ3RvZ2dsZS1jb2xsYXBzZScsIHN0YXRlKVxuICB9KVxuXG4gIC8vIOebkeWQrOW8ueW5leebuOWFs+S6i+S7tlxuICBhcnQudmFsdWUub24oJ2FydHBsYXllclBsdWdpbkRhbm11a3U6ZW1pdCcsIChkYW5tdSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCflj5HpgIHlvLnluZU6JywgZGFubXUpXG4gIH0pXG5cbiAgYXJ0LnZhbHVlLm9uKCdhcnRwbGF5ZXJQbHVnaW5EYW5tdWt1OmxvYWRlZCcsIChkYW5tdXMpID0+IHtcbiAgICBjb25zb2xlLmxvZygn5by55bmV5Yqg6L295a6M5oiQLCDmgLvmlbA6JywgZGFubXVzPy5sZW5ndGggfHwgMClcbiAgfSlcblxuICBhcnQudmFsdWUub24oJ2FydHBsYXllclBsdWdpbkRhbm11a3U6ZXJyb3InLCAoZXJyb3IpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCflvLnluZXplJnor686JywgZXJyb3IpXG4gICAgRWxNZXNzYWdlLmVycm9yKCflvLnluZXns7vnu5/lh7rnjrDplJnor68nKVxuICB9KVxufVxuXG4vLyDnm5HlkKwgVVJMIOWPmOWMllxud2F0Y2goKCkgPT4gcHJvcHMudmlkZW9VcmwsIChuZXdVcmwsIG9sZFVybCkgPT4ge1xuICBpZiAobmV3VXJsICYmIG5ld1VybCAhPT0gb2xkVXJsKSB7XG4gICAgaWYgKGFydC52YWx1ZSkge1xuICAgICAgLy8g5aaC5p6c5pKt5pS+5Zmo5bey5a2Y5Zyo77yM5pu05paw6KeG6aKR5rqQXG4gICAgICBhcnQudmFsdWUudXJsID0gbmV3VXJsXG4gICAgICBhcnQudmFsdWUucG9zdGVyID0gcHJvcHMucG9zdGVyXG4gICAgICBhcnQudmFsdWUudGl0bGUgPSBwcm9wcy50aXRsZVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyDlpoLmnpzmkq3mlL7lmajkuI3lrZjlnKjvvIzliJ3lp4vljJbmkq3mlL7lmahcbiAgICAgIGluaXRQbGF5ZXIoKVxuICAgIH1cbiAgfVxufSwge2ltbWVkaWF0ZTogdHJ1ZX0pXG5cbi8vIOe7hOS7tuaMgui9veaXtuWIneWni+WMluaSreaUvuWZqFxub25Nb3VudGVkKCgpID0+IHtcbiAgLy8g5L2/55SoIG5leHRUaWNrIOehruS/nSBET00g5bey5pu05pawXG4gIG5leHRUaWNrKCgpID0+IHtcbiAgICBpZiAocHJvcHMudmlkZW9VcmwpIHtcbiAgICAgIGluaXRQbGF5ZXIoKVxuICAgIH1cbiAgfSlcbn0pXG5cbi8vIOe7hOS7tuWNuOi9veaXtumUgOavgeaSreaUvuWZqFxub25Vbm1vdW50ZWQoKCkgPT4ge1xuICBpZiAoYXJ0LnZhbHVlICYmIGFydC52YWx1ZS5kZXN0cm95KSB7XG4gICAgYXJ0LnZhbHVlLmRlc3Ryb3koKVxuICAgIGFydC52YWx1ZSA9IG51bGxcbiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJydcbiAgfVxufSlcbjwvc2NyaXB0PlxuXG48c3R5bGUgc2NvcGVkPlxuLnZpZGVvLXBsYXllciB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjMDAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYXNwZWN0LXJhdGlvOiAxNi85O1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uYXJ0cGxheWVyLWFwcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xufVxuXG46ZGVlcCguYXJ0LXZpZGVvLXBsYXllcikge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcbiAgZm9udC1mYW1pbHk6IHN5c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sXG4gICdIZWx2ZXRpY2EgTmV1ZScsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAtLXRoZW1lOiAjMDBhMWQ2ICFpbXBvcnRhbnQ7IC8qIOiuvue9ruS4u+mimOiJsuS4uuiTneiJsiAqL1xufVxuXG46ZGVlcCguYXJ0LXN1YnRpdGxlKSB7XG4gIGJvdHRvbTogMTBweDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICB0ZXh0LXNoYWRvdzogMC41cHggMC41cHggMC41cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4vKiDoh6rlrprkuYnkuLvpopjoibIgKi9cbjpkZWVwKC5hcnQtdmlkZW8tcGxheWVyIC5hcnQtY29udHJvbC1wcm9ncmVzcykge1xuICAvKiDmnKrmkq3mlL7pg6jliIbkvb/nlKjljYrpgI/mmI7ngbDoibIgKi9cbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xufVxuXG46ZGVlcCguYXJ0LXZpZGVvLXBsYXllciAuYXJ0LWNvbnRyb2wtcHJvZ3Jlc3MtaW5uZXIpIHtcbiAgLyog5bey5pKt5pS+6YOo5YiG5L2/55So6JOd6ImyICovXG4gIGJhY2tncm91bmQ6ICMwMGExZDY7XG59XG4uLi5cblxuLyog572R6aG15YWo5bGP5pe255qE5qC35byPICovXG46ZGVlcCguYXJ0LXZpZGVvLXBsYXllci5hcnQtZnVsbHNjcmVlbi13ZWIpIHtcbiAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7XG4gIHotaW5kZXg6IDk5OTk7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG59XG5cbi8qIOe9kemhteWFqOWxj+aXtueahOi/lOWbnuaMiemSruS9jee9ruiwg+aVtCAqL1xuOmRlZXAoLmFydC1mdWxsc2NyZWVuLXdlYikgLmJhY2stYnV0dG9uIHtcbiAgdG9wOiAyNHB4O1xuICBsZWZ0OiAyNHB4O1xuICB6LWluZGV4OiAxMDAwMDtcbn1cblxuLyog572R6aG15YWo5bGP5pe255qE5o6n5Yi25qCP5L2N572u6LCD5pW0ICovXG46ZGVlcCguYXJ0LWZ1bGxzY3JlZW4td2ViIC5hcnQtY29udHJvbHMpIHtcbiAgcGFkZGluZy1ib3R0b206IDI0cHg7XG59XG5cbi8qIOenu+WKqOerr+mAgumFjSAqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgOmRlZXAoLmFydC1mdWxsc2NyZWVuLXdlYikgLmJhY2stYnV0dG9uIHtcbiAgICB0b3A6IDE2cHg7XG4gICAgbGVmdDogMTZweDtcbiAgfVxuICBcbiAgOmRlZXAoLmFydC1mdWxsc2NyZWVuLXdlYiAuYXJ0LWNvbnRyb2xzKSB7XG4gICAgcGFkZGluZy1ib3R0b206IDE2cHg7XG4gIH1cbn1cbjwvc3R5bGU+Li4uXG5QYXRoOiBzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb0RldGFpbC52dWVcbjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cInZpZGVvLWRldGFpbFwiPlxuICAgIDxkaXYgY2xhc3M9XCJtYWluLWNvbnRlbnRcIiA6Y2xhc3M9XCJ7ICdjb2xsYXBzZWQnOiBpc0NvbGxhcHNlZCB8fCBpc0F1dG9Db2xsYXBzZWQgfVwiPlxuICAgICAgPCEtLSDlt6bkvqfop4bpopHljLrln58gLS0+XG4gICAgICA8ZGl2IGNsYXNzPVwidmlkZW8tc2VjdGlvblwiPlxuICAgICAgICA8IS0tIOinhumikeaSreaUvuWZqCAtLT5cbiAgICAgICAgPFZpZGVvUGxheWVyXG4gICAgICAgICAgICA6dmlkZW8tdXJsPVwidmlkZW9JbmZvLnZpZGVvVXJsXCJcbiAgICAgICAgICAgIDpwb3N0ZXI9XCJ2aWRlb0luZm8uY292ZXJcIlxuICAgICAgICAgICAgOnRpdGxlPVwidmlkZW9JbmZvLnRpdGxlXCJcbiAgICAgICAgICAgIDppcy1jb2xsYXBzZWQ9XCJpc0NvbGxhcHNlZCB8fCBpc0F1dG9Db2xsYXBzZWRcIlxuICAgICAgICAgICAgOnZpZGVvLWlkPVwidmlkZW9JbmZvLmlkXCJcbiAgICAgICAgICAgIEB0b2dnbGUtY29sbGFwc2U9XCJ0b2dnbGVDb2xsYXBzZVwiXG4gICAgICAgIC8+XG4uLi5cblxuPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7Y29tcHV0ZWQsIG9uTW91bnRlZCwgb25Vbm1vdW50ZWQsIHJlZiwgd2F0Y2h9IGZyb20gJ3Z1ZSdcbmltcG9ydCB7dXNlUm91dGUsIHVzZVJvdXRlcn0gZnJvbSAndnVlLXJvdXRlcidcbmltcG9ydCB7Z2V0VmlkZW9EZXRhaWxTZXJ2aWNlfSBmcm9tICdAL2FwaS92aWRlbycgLy8g5YGH6K6+5L2g5Lya5Yib5bu66L+Z5LiqQVBJ5pyN5YqhXG5pbXBvcnQge0NoYXREb3RSb3VuZCwgQ2hhdFJvdW5kLCBDbG9zZX0gZnJvbSAnQGVsZW1lbnQtcGx1cy9pY29ucy12dWUnXG5pbXBvcnQgVmlkZW9QbGF5ZXIgZnJvbSAnQC9jb21wb25lbnRzL3ZpZGVvL1ZpZGVvUGxheWVyLnZ1ZSdcbmltcG9ydCB7RWxNZXNzYWdlfSBmcm9tIFwiZWxlbWVudC1wbHVzXCI7XG5pbXBvcnQgdXNlVXNlckluZm9TdG9yZSBmcm9tICdAL3N0b3Jlcy91c2VySW5mbydcbmltcG9ydCBVcGxvYWRlckljb24gZnJvbSAnQC9jb21wb25lbnRzL2ljb25zL1VwbG9hZGVySWNvbi52dWUnXG5pbXBvcnQge2FkZENvbW1lbnRTZXJ2aWNlLCBnZXRDb21tZW50c1NlcnZpY2V9IGZyb20gXCJAL2FwaS9jb21tZW50c1wiO1xuaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJ1xuaW1wb3J0IHJlbGF0aXZlVGltZSBmcm9tICdkYXlqcy9wbHVnaW4vcmVsYXRpdmVUaW1lJ1xuaW1wb3J0ICdkYXlqcy9sb2NhbGUvemgtY24nXG5pbXBvcnQgRW1vamlQaWNrZXIgZnJvbSAnQC9jb21wb25lbnRzL0Vtb2ppUGlja2VyLnZ1ZSdcbmltcG9ydCB7dXNlVG9rZW5TdG9yZX0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXG4uLi5cblBhdGg6IHBhY2thZ2UuanNvblxue1xuICBcIm5hbWVcIjogXCJiaWxpYmlsaS1jbG9uZVwiLFxuICBcInZlcnNpb25cIjogXCIxLjAuMFwiLFxuICBcInByaXZhdGVcIjogdHJ1ZSxcbiAgXCJzY3JpcHRzXCI6IHtcbiAgICBcImRldlwiOiBcInZpdGVcIixcbiAgICBcImJ1aWxkXCI6IFwidml0ZSBidWlsZFwiLFxuICAgIFwicHJldmlld1wiOiBcInZpdGUgcHJldmlld1wiXG4gIH0sXG4gIFwiZGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcIkBlbGVtZW50LXBsdXMvaWNvbnMtdnVlXCI6IFwiXjIuMC4wXCIsXG4gICAgXCJhcnRwbGF5ZXJcIjogXCJeNS4yLjFcIixcbiAgICBcImFydHBsYXllci1wbHVnaW4tZGFubXVrdVwiOiBcIl4zLjUuMzFcIixcbiAgICBcImF4aW9zXCI6IFwiXjEuNy45XCIsXG4gICAgXCJiaWxpYmlsaS1jbG9uZVwiOiBcImZpbGU6XCIsXG4gICAgXCJkYXlqc1wiOiBcIl4xLjExLjEzXCIsXG4gICAgXCJlbGVtZW50LXBsdXNcIjogXCJeMi4wLjBcIixcbiAgICBcIm1pdHRcIjogXCJeMy4wLjFcIixcbiAgICBcInBpbmlhXCI6IFwiXjIuMy4wXCIsXG4gICAgXCJwaW5pYS1wZXJzaXN0ZWRzdGF0ZS1wbHVnaW5cIjogXCJeMC4xLjBcIixcbiAgICBcInZ1ZVwiOiBcIl4zLjMuMFwiLFxuICAgIFwidnVlLXJvdXRlclwiOiBcIl40LjAuMFwiXG4gIH0sXG4gIFwiZGV2RGVwZW5kZW5jaWVzXCI6IHtcbiAgICBcIkB2aXRlanMvcGx1Z2luLXZ1ZVwiOiBcIl40LjAuMFwiLFxuICAgIFwicGF0aFwiOiBcIl4wLjEyLjdcIixcbiAgICBcInNhc3NcIjogXCJeMS44My4wXCIsXG4gICAgXCJ2aXRlXCI6IFwiXjQuMC4wXCJcbiAgfVxufVxuLi4uXG5QYXRoOiBzcmMvYXBpL3ZpZGVvLmpzXG5pbXBvcnQgcmVxdWVzdCBmcm9tIFwiQC91dGlscy9yZXF1ZXN0XCJcblxuLy/ojrflj5bop4bpopHliJfooajmjqXlj6NcbmV4cG9ydCBjb25zdCBnZXRWaWRlb0xpc3RTZXJ2aWNlID0gKHBhcmFtcykgPT4ge1xuICAgIC8vIOWmguaenOS8oOWFpeS6huWIhuexu+WPguaVsO+8jOS9v+eUqHF1ZXJ55pa55byP5Lyg6YCSXG4gICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMuY2F0ZWdvcnlJZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiByZXF1ZXN0LmdldChgL3ZpZGVvP2NhdGVnb3J5SWQ9JHtwYXJhbXMuY2F0ZWdvcnlJZH1gKVxuICAgIH1cbiAgICAvLyDpu5jorqTojrflj5bmiYDmnInop4bpopFcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoJy92aWRlbycpXG59XG4vL+iOt+WPluinhumikeivpuaDheaOpeWPo1xuZXhwb3J0IGNvbnN0IGdldFZpZGVvRGV0YWlsU2VydmljZSA9ICh2aWRlb0lkKSA9PiB7XG4gICAgcmV0dXJuIHJlcXVlc3QuZ2V0KCcvdmlkZW8vdmlkZW9JbmZvP2lkPScrdmlkZW9JZClcbn1cbi4uLlxuUGF0aDogc3JjL2NvbXBvbmVudHMvdmlkZW8vRGFubWFrdUxpc3QudnVlXG48dGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJkYW5tYWt1LWxpc3QtY29udGFpbmVyXCI+XG4gICAgPGRpdiBjbGFzcz1cImRhbm1ha3UtaGVhZGVyXCIgQGNsaWNrPVwidG9nZ2xlRXhwYW5kXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLWxlZnRcIj5cbiAgICAgICAgPGVsLWljb24gY2xhc3M9XCJsaXN0LWljb25cIj48Q2hhdERvdFJvdW5kIC8+PC9lbC1pY29uPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInRpdGxlXCI+5by55bmV5YiX6KGoPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZWwtaWNvbiBjbGFzcz1cImV4cGFuZC1pY29uXCIgOmNsYXNzPVwieyAnaXMtZXhwYW5kZWQnOiBpc0V4cGFuZGVkIH1cIj5cbiAgICAgICAgPEFycm93RG93biAvPlxuICAgICAgPC9lbC1pY29uPlxuICAgIDwvZGl2PlxuICAgIFxuICAgIDxkaXYgY2xhc3M9XCJkYW5tYWt1LWNvbnRlbnRcIiB2LXNob3c9XCJpc0V4cGFuZGVkXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiZGFubWFrdS1pdGVtc1wiIHYtbG9hZGluZz1cImxvYWRpbmdcIj5cbiAgICAgICAgPHRlbXBsYXRlIHYtaWY9XCJkYW5tYWt1TGlzdC5sZW5ndGhcIj5cbiAgICAgICAgICA8ZGl2IHYtZm9yPVwiaXRlbSBpbiBkYW5tYWt1TGlzdFwiIFxuICAgICAgICAgICAgICAgOmtleT1cIml0ZW0uaWRcIiBcbiAgICAgICAgICAgICAgIGNsYXNzPVwiZGFubWFrdS1pdGVtXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGFubWFrdS1pbmZvXCI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGltZVwiPnt7IGZvcm1hdFRpbWUoaXRlbS50aW1lIHx8IDApIH19PC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImNvbnRlbnRcIiA6c3R5bGU9XCJ7IGNvbG9yOiBpc1doaXRlQ29sb3IoaXRlbS5jb2xvcikgPyAnIzE4MTkxYycgOiBpdGVtLmNvbG9yIH1cIj5cbiAgICAgICAgICAgICAgICB7eyBpdGVtLnRleHQgfX1cbiAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgIDxkaXYgdi1lbHNlIGNsYXNzPVwiZW1wdHktc3RhdGVcIj5cbiAgICAgICAgICA8ZWwtaWNvbiBjbGFzcz1cImVtcHR5LWljb25cIj48Q2hhdExpbmVTcXVhcmUgLz48L2VsLWljb24+XG4gICAgICAgICAgPHNwYW4+5pqC5peg5by55bmVPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQgc2V0dXA+XG5pbXBvcnQgeyByZWYsIG9uTW91bnRlZCwgd2F0Y2ggfSBmcm9tICd2dWUnXG5pbXBvcnQgeyBBcnJvd0Rvd24sIENoYXREb3RSb3VuZCwgQ2hhdExpbmVTcXVhcmUgfSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcbmltcG9ydCB7IGdldEJhcnJhZ2VTZXJ2aWNlIH0gZnJvbSAnQC9hcGkvYmFycmFnZSdcbmltcG9ydCB7IEVsTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtcGx1cydcblxuY29uc3QgcHJvcHMgPSBkZWZpbmVQcm9wcyh7XG4gIHZpZGVvSWQ6IHtcbiAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLFxuICAgIHJlcXVpcmVkOiB0cnVlXG4gIH1cbn0pXG5cbmNvbnN0IGlzRXhwYW5kZWQgPSByZWYoZmFsc2UpXG5jb25zdCBsb2FkaW5nID0gcmVmKGZhbHNlKVxuY29uc3QgZGFubWFrdUxpc3QgPSByZWYoW10pXG5jb25zdCBpc0RhdGFMb2FkZWQgPSByZWYoZmFsc2UpXG5cbmNvbnN0IHRvZ2dsZUV4cGFuZCA9ICgpID0+IHtcbiAgaXNFeHBhbmRlZC52YWx1ZSA9ICFpc0V4cGFuZGVkLnZhbHVlXG4gIGlmIChpc0V4cGFuZGVkLnZhbHVlICYmICFpc0RhdGFMb2FkZWQudmFsdWUpIHtcbiAgICBsb2FkRGFubWFrdUxpc3QoKVxuICB9XG59XG5cbmNvbnN0IGxvYWREYW5tYWt1TGlzdCA9IGFzeW5jICgpID0+IHtcbiAgbG9hZGluZy52YWx1ZSA9IHRydWVcbiAgdHJ5IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBnZXRCYXJyYWdlU2VydmljZShwcm9wcy52aWRlb0lkKVxuICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7XG4gICAgICBkYW5tYWt1TGlzdC52YWx1ZSA9IHJlcy5kYXRhIHx8IFtdXG4gICAgICBpc0RhdGFMb2FkZWQudmFsdWUgPSB0cnVlXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPluW8ueW5leWIl+ihqOWksei0pTonLCBlcnJvcilcbiAgICBFbE1lc3NhZ2UuZXJyb3IoJ+iOt+WPluW8ueW5leWIl+ihqOWksei0pScpXG4gIH0gZmluYWxseSB7XG4gICAgbG9hZGluZy52YWx1ZSA9IGZhbHNlXG4gIH1cbn1cblxuY29uc3QgZm9ybWF0VGltZSA9IChzZWNvbmRzKSA9PiB7XG4gIGNvbnN0IHRpbWUgPSBOdW1iZXIoc2Vjb25kcykgfHwgMFxuICBjb25zdCBtaW51dGVzID0gTWF0aC5mbG9vcih0aW1lIC8gNjApXG4gIGNvbnN0IHJlbWFpbmluZ1NlY29uZHMgPSBNYXRoLmZsb29yKHRpbWUgJSA2MClcbiAgcmV0dXJuIGAke21pbnV0ZXMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfToke3JlbWFpbmluZ1NlY29uZHMudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfWBcbn1cblxuLy8g5Yik5pat5piv5ZCm5Li655m96ImyXG5jb25zdCBpc1doaXRlQ29sb3IgPSAoY29sb3IpID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuIGZhbHNlXG4gIFxuICAvLyDovazmjaLkuLrlsI/lhpnku6Xnu5/kuIDmr5TovoNcbiAgY29sb3IgPSBjb2xvci50b0xvd2VyQ2FzZSgpXG4gIFxuICAvLyDmo4Dmn6XlkITnp43nmb3oibLnmoTooajnpLrmlrnlvI9cbiAgcmV0dXJuIGNvbG9yID09PSAnI2ZmZicgfHwgXG4gICAgICAgICBjb2xvciA9PT0gJyNmZmZmZmYnIHx8IFxuICAgICAgICAgY29sb3IgPT09ICdyZ2IoMjU1LDI1NSwyNTUpJyB8fCBcbiAgICAgICAgIGNvbG9yID09PSAncmdiKDI1NSwgMjU1LCAyNTUpJyB8fCBcbiAgICAgICAgIGNvbG9yID09PSAnd2hpdGUnXG59XG5cbm9uTW91bnRlZCgoKSA9PiB7XG4gIC8vIOWIneWni+WKoOi9veW8ueW5leWIl+ihqFxuICBsb2FkRGFubWFrdUxpc3QoKVxufSlcblxuLy8g55uR5ZCs6KeG6aKRSUTlj5jljJZcbndhdGNoKCgpID0+IHByb3BzLnZpZGVvSWQsIChuZXdJZCkgPT4ge1xuICBpZiAobmV3SWQpIHtcbiAgICBpc0RhdGFMb2FkZWQudmFsdWUgPSBmYWxzZVxuICAgIGRhbm1ha3VMaXN0LnZhbHVlID0gW11cbiAgICBpZiAoaXNFeHBhbmRlZC52YWx1ZSkge1xuICAgICAgbG9hZERhbm1ha3VMaXN0KClcbiAgICB9XG4gIH1cbn0pXG5cbi8vIOa3u+WKoOaVsOaNruWKoOi9veeKtuaAgeebkeWQrFxud2F0Y2goKCkgPT4gZGFubWFrdUxpc3QudmFsdWUsIChuZXdMaXN0KSA9PiB7XG4gIGNvbnNvbGUubG9nKCflvLnluZXliJfooajmlbDmja46JywgbmV3TGlzdClcbn0sIHsgaW1tZWRpYXRlOiB0cnVlIH0pXG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxuLmRhbm1ha3UtbGlzdC1jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiAxNnB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMDYpO1xufVxuXG4uZGFubWFrdS1oZWFkZXIge1xuICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2YxZjJmMztcbiAgXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICNmNWY3ZmE7XG4gIH1cbiAgXG4gIC5oZWFkZXItbGVmdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogOHB4O1xuICAgIFxuICAgIC5saXN0LWljb24ge1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgY29sb3I6ICMwMGFlZWM7XG4gICAgfVxuICB9XG4gIFxuICAudGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGNvbG9yOiAjMTgxOTFjO1xuICB9XG4gIFxuICAuZXhwYW5kLWljb24ge1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzO1xuICAgIGNvbG9yOiAjOTQ5OWEwO1xuICAgIFxuICAgICYuaXMtZXhwYW5kZWQge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICB9XG4gIH1cbn1cblxuLmRhbm1ha3UtY29udGVudCB7XG4gIHBhZGRpbmc6IDEycHg7XG4gIG1heC1oZWlnaHQ6IDMwMHB4O1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJmYmZiO1xuICBcbiAgJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgIHdpZHRoOiA2cHg7XG4gIH1cbiAgXG4gICY6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTNlNWU3O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBcbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjOWNjZDA7XG4gICAgfVxuICB9XG59XG5cbi5kYW5tYWt1LWl0ZW1zIHtcbiAgbWluLWhlaWdodDogMTAwcHg7XG59XG5cbi5kYW5tYWt1LWl0ZW0ge1xuICBwYWRkaW5nOiA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIG1hcmdpbi1ib3R0b206IDFweDtcbiAgXG4gICY6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuICBcbiAgLmRhbm1ha3UtaW5mbyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMTJweDtcbiAgICBcbiAgICAudGltZSB7XG4gICAgICBjb2xvcjogIzk0OTlhMDtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIG1pbi13aWR0aDogNDVweDtcbiAgICB9XG4gICAgXG4gICAgLmNvbnRlbnQge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgd29yZC1icmVhazogYnJlYWstYWxsO1xuICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgICBcbiAgICAgICY6aG92ZXIge1xuICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIFxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmN2Y4O1xuICB9XG59XG5cbi5kYW5tYWt1LWl0ZW06bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbiAgXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY3Zjg7XG4gIH1cbn1cblxuLmVtcHR5LXN0YXRlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IDMycHggMDtcbiAgY29sb3I6ICM5NDk5YTA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIFxuICAuZW1wdHktaWNvbiB7XG4gICAgZm9udC1zaXplOiAzMnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgfVxuICBcbiAgc3BhbiB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG59XG48L3N0eWxlPiAuLi5cblBhdGg6IHNyYy9hcGkvYmFycmFnZS5qc1xuaW1wb3J0IHJlcXVlc3QgZnJvbSBcIkAvdXRpbHMvcmVxdWVzdFwiXG5cbi8v5Y+R6YCB5by55bmVXG5leHBvcnQgY29uc3Qgc2VuZEJhcnJhZ2VTZXJ2aWNlID0gKGRhdGEpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QucG9zdCgnL3VzZXIvYmFycmFnZS9zZW5kJyxkYXRhKVxufVxuLy/ojrflj5blvLnluZVcbmV4cG9ydCBjb25zdCBnZXRCYXJyYWdlU2VydmljZSA9ICh2aWRlb0lkKSA9PiB7XG4gIHJldHVybiByZXF1ZXN0LmdldCgnL3ZpZGVvL2JhcnJhZ2U/dmlkZW9JZD0nK3ZpZGVvSWQpXG59Li4uXG5QYXRoOiBzcmMvYXBpL2Jhbmd1bWkvYmFuZ3VtaS5qc1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuXG4vL+eDremXqOeVquWJp1xuZXhwb3J0IGNvbnN0IGdldEhvdFNlcnZpY2UgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkuamlrYW4ubW9lL3Y0L3RvcC9hbmltZT9saW1pdD0yNScpXG59XG4vL+eVquWJp+aXtumXtOihqFxuZXhwb3J0IGNvbnN0IGdldEJhbmd1bWlTZXJ2aWNlID0gKCkgPT4ge1xuICAgIHJldHVybiBheGlvcy5nZXQoJ2h0dHBzOi8vYXBpLmJnbS50di9jYWxlbmRhcicpXG59Li4uXG5QYXRoOiBzcmMvYXBpL2FuaW1lL2FuaW1lLmpzXG5pbXBvcnQgcmVxdWVzdCBmcm9tIFwiQC91dGlscy9yZXF1ZXN0XCJcblxuLy8g6I635Y+W6L2u5pKt5Zu+5pWw5o2uXG5leHBvcnQgY29uc3QgZ2V0QmFubmVyU2VydmljZSA9ICgpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QuZ2V0KCcvQ2Fyb3VzZWwnKVxufVxuXG4vLyDojrflj5bnlarliafliJfooahcbmV4cG9ydCBjb25zdCBnZXRBbmltZUxpc3RTZXJ2aWNlID0gKHBhcmFtcykgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5nZXQoJy9hbmltZScsIHsgcGFyYW1zIH0pXG59XG5cbi8vIOaWsOWinueVquWJp1xuZXhwb3J0IGNvbnN0IGFkZEFuaW1lU2VydmljZSA9IChhbmltZURhdGEpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QucG9zdCgnL2FuaW1lJywgYW5pbWVEYXRhKVxufVxuXG4vLyDmm7TmlrDnlarliacgIC5cbmV4cG9ydCBjb25zdCB1cGRhdGVBbmltZVNlcnZpY2UgPSAoYW5pbWVJZCxhbmltZURhdGEpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QucHV0KGAvYW5pbWUvJHthbmltZUlkfWAsIGFuaW1lRGF0YSlcbn1cblxuLy8g5Yig6Zmk55Wq5YmnXG5leHBvcnQgY29uc3QgZGVsZXRlQW5pbWVTZXJ2aWNlID0gKGlkKSA9PiB7XG4gIHJldHVybiByZXF1ZXN0LmRlbGV0ZShgL2FuaW1lLyR7aWR9YClcbn1cblxuLy8g5re75Yqg5Ymn6ZuGXG5leHBvcnQgY29uc3QgYWRkRXBpc29kZVNlcnZpY2UgPSAoYW5pbWVJZCwgZXBpc29kZURhdGEpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QucG9zdChgL2FuaW1lLyR7YW5pbWVJZH0vZXBpc29kZXNgLCBlcGlzb2RlRGF0YSlcbn1cbi4uLlxuUGF0aDogc3JjL2FwaS91c2VyVmlkZW8uanNcbi8v5a+85YWlcmVxdWVzdC5qc+ivt+axguW3peWFt1xuaW1wb3J0IHJlcXVlc3QgZnJvbSBcIkAvdXRpbHMvcmVxdWVzdFwiO1xuXG4vL+WPkeW4g+inhumikeaOpeWPo1xuZXhwb3J0IGNvbnN0IHB1Ymxpc2hWaWRlb1NlcnZpY2UgPSAodmlkZW9EYXRhKSA9PiB7XG4gICAgcmV0dXJuIHJlcXVlc3QucG9zdCgnL3VzZXIvdmlkZW8nLCB2aWRlb0RhdGEpXG59XG4vL+iOt+WPlueUqOaIt+inhumikeaOpeWPo1xuZXhwb3J0IGNvbnN0IGdldFVzZXJWaWRlb1NlcnZpY2UgPSAocGFyYW1zKSA9PiB7XG4gICAgcmV0dXJuIHJlcXVlc3QuZ2V0KCcvdXNlci92aWRlbycsIHtwYXJhbXM6IHBhcmFtc30pXG59XG4vL+e8lui+keinhumikeaOpeWPo1xuZXhwb3J0IGNvbnN0IGVkaXRWaWRlb1NlcnZpY2UgPSAodmlkZW9EYXRhKSA9PiB7XG4gICAgcmV0dXJuIHJlcXVlc3QucHV0KCcvdXNlci92aWRlbycsIHZpZGVvRGF0YSlcbn1cbi8v5Yig6Zmk6KeG6aKR5L+h5oGv5o6l5Y+jXG5leHBvcnQgY29uc3QgZGVsZXRlVmlkZW9TZXJ2aWNlID0gKHZpZGVvSWQpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5kZWxldGUoJy91c2VyL3ZpZGVvP2lkPScgKyB2aWRlb0lkKVxufS4uLlxuUGF0aDogc3JjL2FwaS91c2VyL3VzZXJ2aWRlby5qc1xuaW1wb3J0IHJlcXVlc3QgZnJvbSBcIkAvdXRpbHMvcmVxdWVzdFwiO1xuXG4vL+iOt+WPluinhumikeeCuei1nuOAgeaUtuiXj+OAgeaKleW4geeKtuaAgVxuZXhwb3J0IGNvbnN0IGdldFZpZGVvTGlrZVNlcnZpY2UgPSAodmlkZW9JZCxhY3Rpb24pID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QuZ2V0KGAvdXNlci92aWRlby8ke3ZpZGVvSWR9L2RvQWN0aW9uP2FjdGlvbj0ke2FjdGlvbn1gKTtcbn07XG5cbi8v54K56LWe44CB5pS26JeP44CB5oqV5biBXG5leHBvcnQgY29uc3QgdXNlckFjdGlvblNlcnZpY2UgPSAodmlkZW9JZCwgYWN0aW9uKSA9PiB7XG4gIHJldHVybiByZXF1ZXN0LnB1dChgL3VzZXIvdmlkZW8vJHt2aWRlb0lkfS9kb0FjdGlvbj9hY3Rpb249JHthY3Rpb259YCk7XG59O1xuXG4vL+eUqOaIt+aUtuiXj+WIl+ihqFxuZXhwb3J0IGNvbnN0IGdldFVzZXJDb2xsZWN0aW9uU2VydmljZSA9ICh1c2VySWQpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QuZ2V0KGAvdmlkZW8vY29sbGVjdExpc3Q/dXNlcklkPSR7dXNlcklkfWApO1xufTsuLi5cblBhdGg6IHNyYy9hcGkvY2hhdC5qc1xuaW1wb3J0IHJlcXVlc3QgZnJvbSBcIkAvdXRpbHMvcmVxdWVzdFwiO1xuXG4vL+iOt+WPluengeS/oeWvueWDj1xuZXhwb3J0IGNvbnN0IGdldFVzZXJDaGF0U2VydmljZSA9ICh1c2VybmFtZSkgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5nZXQoXCIvdXNlci9jaGF0P3VzZXJuYW1lPVwiK3VzZXJuYW1lKTtcbn07XG5cbi8vIOiOt+WPluiBiuWkqeWOhuWPsuiusOW9lVxuZXhwb3J0IGNvbnN0IGdldENoYXRIaXN0b3J5U2VydmljZSA9ICh1c2VyMSwgdXNlcjIpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QuZ2V0KGAvdXNlci9oaXN0b3J5P3VzZXIxPSR7dXNlcjF9JnVzZXIyPSR7dXNlcjJ9YCk7XG59O1xuXG4vLyDojrflj5bmiYDmnInmnKror7vmtojmga/mlbDph49cbmV4cG9ydCBjb25zdCBnZXRVbnJlYWRDb3VudFNlcnZpY2UgPSAodXNlcm5hbWUpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QuZ2V0KGAvdXNlci91bnJlYWQ/dXNlcm5hbWU9JHt1c2VybmFtZX1gKTtcbn07XG5cbi8vIOagh+iusOa2iOaBr+S4uuW3suivu1xuZXhwb3J0IGNvbnN0IG1hcmtBc1JlYWRTZXJ2aWNlID0gKGZyb21Vc2VyLCB0b1VzZXIpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QucG9zdChgL3VzZXIvbWFyay1yZWFkP2Zyb21Vc2VyPSR7ZnJvbVVzZXJ9JnRvVXNlcj0ke3RvVXNlcn1gKTtcbn07XG5cbi8vIOiOt+WPlueUqOaIt+WcqOe6v+eKtuaAgVxuZXhwb3J0IGNvbnN0IGdldE9ubGluZVN0YXR1c1NlcnZpY2UgPSAodXNlcm5hbWVzKSA9PiB7XG4gIHJldHVybiByZXF1ZXN0LmdldCgnL3VzZXIvb25saW5lLXN0YXR1cycsIHtcbiAgICBwYXJhbXM6IHtcbiAgICAgIHVzZXJuYW1lczogdXNlcm5hbWVzLmpvaW4oJywnKVxuICAgIH1cbiAgfSk7XG59Oy4uLlxuUGF0aDogc3JjL2FwaS92aWRvZWxpa2UuanNcbmltcG9ydCByZXF1ZXN0IGZyb20gXCJAL3V0aWxzL3JlcXVlc3RcIjtcblxuLy/nlKjmiLfngrnotZ7liJfooahcbmV4cG9ydCBjb25zdCBnZXRVc2VyTGlrZVNlcnZpY2UgPSAoaWQpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoJy92aWRlby9saWtlP2lkPScgKyBpZClcbn0uLi5cblBhdGg6IHNyYy9hcGkvQW5ub3VuY2VtZW50LmpzXG5pbXBvcnQgcmVxdWVzdCBmcm9tIFwiQC91dGlscy9yZXF1ZXN0XCI7XG5cbi8qKlxuICog5Y+R5biD5YWs5ZGKXG4gKi9cbmV4cG9ydCBjb25zdCBwdWJsaXNoQW5ub3VuY2VtZW50U2VydmljZSA9IChkYXRhKSA9PntcbiAgICByZXR1cm4gcmVxdWVzdC5wb3N0KFwiL2Fubm91bmNlbWVudFwiLGRhdGEpO1xufVxuXG4vKipcbiAqIOiOt+WPluWFrOWRiuWIl+ihqFxuICovXG5leHBvcnQgY29uc3QgZ2V0QW5ub3VuY2VtZW50TGlzdFNlcnZpY2UgPSAoKSA9PntcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoXCIvYW5ub3VuY2VtZW50XCIpO1xufVxuXG4vKipcbiAqIOWIoOmZpOWFrOWRilxuICovXG5leHBvcnQgY29uc3QgZGVsZXRlQW5ub3VuY2VtZW50U2VydmljZSA9IChhbm5vdW5jZW1lbnRJZCkgPT57XG4gICAgcmV0dXJuIHJlcXVlc3QuZGVsZXRlKGAvYW5ub3VuY2VtZW50P2Fubm91bmNlbWVudElkPWAgKyBhbm5vdW5jZW1lbnRJZCk7XG59XG4uLi5cblBhdGg6IHNyYy9hcGkvY29tbWVudHMuanNcbmltcG9ydCByZXF1ZXN0IGZyb20gXCJAL3V0aWxzL3JlcXVlc3RcIlxuXG4vLyDmt7vliqDor4TorrrmjqXlj6NcbmV4cG9ydCBjb25zdCBhZGRDb21tZW50U2VydmljZSA9IChpZCwgY29udGVudCkgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5wb3N0KCcvY29tbWVudHMvcHVibGlzaCcsIHtcbiAgICBpZCwgIC8vIOinhumikWlkXG4gICAgY29udGVudCAgIC8vIOivhOiuuuWGheWuuVxuICB9KVxufVxuLy8g6I635Y+W6K+E6K665YiX6KGo5o6l5Y+jXG5leHBvcnQgY29uc3QgZ2V0Q29tbWVudHNTZXJ2aWNlID0gKGlkKSA9PiB7XG4gICAgcmV0dXJuIHJlcXVlc3QuZ2V0KCcvY29tbWVudHM/aWQ9JytpZCApXG59Li4uXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxTW14dTVNSnR0Wm1vTFk4bzNiMjlvbyJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5qC55o2u5qOA57Si5Yiw55qE5Luj56CB77yM5oiR5Y+R546w6aG555uu5bey57uP6ZuG5oiQ5LqGIEFydFBsYXllciDmkq3mlL7lmajlkozlvLnluZXns7vnu5/jgILlnKggYFZpZGVvUGxheWVyLnZ1ZWAg57uE5Lu25Lit77yM5bey57uP6YWN572u5LqGIGBhcnRwbGF5ZXItcGx1Z2luLWRhbm11a3VgIOaPkuS7tu+8jOW5tuS4lOW3sue7j+WunueOsOS6huW8ueW5leeahOiOt+WPluWSjOWPkemAgeWKn+iDveOAglxuXG7orqnmiJHmo4Dmn6XkuIDkuIvlvZPliY3nmoTlvLnluZXns7vnu5/phY3nva7vvIznnIvnnIvmmK/lkKblt7Lnu4/lvIDlkK/vvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIyMjZjMDQ1Ni1hNzk4LTQ2MzYtYjczNC05OTJkZTk1ZWY0MGMiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxU1FYeXYxdDRpdWpYY0VlbjcyTEQyQyIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwidmlld1wiLCBcInBhdGhcIjogXCJzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWVcIiwgXCJ2aWV3X3JhbmdlXCI6IFsxMjAsIDIwMF19In19LHsiaWQiOjAsInR5cGUiOjAsImNvbnRlbnQiOiIifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHNyYy9jb21wb25lbnRzL3ZpZGVvL1ZpZGVvUGxheWVyLnZ1ZTpcbiAgICA1MFx0Ly8g6byg5qCH56e75Yqo5aSE55CGXG4gICAgNTFcdGNvbnN0IGhhbmRsZU1vdXNlTW92ZSA9ICgpID0+IHtcbiAgICA1Mlx0ICBpc0NvbnRyb2xWaXNpYmxlLnZhbHVlID0gdHJ1ZVxuICAgIDUzXHR9XG4gICAgNTRcdFxuICAgIDU1XHQvLyDpvKDmoIfnprvlvIDlpITnkIZcbiAgICA1Nlx0Y29uc3QgaGFuZGxlTW91c2VMZWF2ZSA9ICgpID0+IHtcbiAgICA1N1x0ICBpc0NvbnRyb2xWaXNpYmxlLnZhbHVlID0gZmFsc2VcbiAgICA1OFx0fVxuICAgIDU5XHRcbiAgICA2MFx0Ly8g5re75Yqg5a+5572R6aG15YWo5bGP54q25oCB55qE566h55CGXG4gICAgNjFcdGNvbnN0IGlzV2ViRnVsbHNjcmVlbiA9IHJlZihmYWxzZSlcbiAgICA2Mlx0XG4gICAgNjNcdC8vIOWIneWni+WMluaSreaUvuWZqFxuICAgIDY0XHRjb25zdCBpbml0UGxheWVyID0gKCkgPT4ge1xuICAgIDY1XHQgIGlmIChhcnQudmFsdWUpIHJldHVyblxuICAgIDY2XHRcbiAgICA2N1x0ICAvLyDmo4Dmn6Xop4bpopFVUkzmmK/lkKbmnInmlYhcbiAgICA2OFx0ICBpZiAoIXByb3BzLnZpZGVvVXJsIHx8ICFwbGF5ZXJDb250YWluZXIudmFsdWUpIHtcbiAgICA2OVx0ICAgIGNvbnNvbGUuZXJyb3IoJ+inhumikVVSTOaXoOaViOaIluWuueWZqOacquWwsee7qicpXG4gICAgNzBcdCAgICByZXR1cm5cbiAgICA3MVx0ICB9XG4gICAgNzJcdFxuICAgIDczXHQgIC8vIOehruS/neWuueWZqOWGheaciSBhcnRwbGF5ZXItYXBwIOWFg+e0oFxuICAgIDc0XHQgIGNvbnN0IGNvbnRhaW5lciA9IHBsYXllckNvbnRhaW5lci52YWx1ZS5xdWVyeVNlbGVjdG9yKCcuYXJ0cGxheWVyLWFwcCcpXG4gICAgNzVcdCAgaWYgKCFjb250YWluZXIpIHtcbiAgICA3Nlx0ICAgIGNvbnNvbGUuZXJyb3IoJ+aJvuS4jeWIsOaSreaUvuWZqOWuueWZqOWFg+e0oCcpXG4gICAgNzdcdCAgICByZXR1cm5cbiAgICA3OFx0ICB9XG4gICAgNzlcdFxuICAgIDgwXHQgIGFydC52YWx1ZSA9IG5ldyBBcnRwbGF5ZXIoe1xuICAgIDgxXHQgICAgY29udGFpbmVyOiBjb250YWluZXIsXG4gICAgODJcdCAgICB1cmw6IHByb3BzLnZpZGVvVXJsLFxuICAgIDgzXHQgICAgcG9zdGVyOiBwcm9wcy5wb3N0ZXIsXG4gICAgODRcdCAgICB0aXRsZTogcHJvcHMudGl0bGUsXG4gICAgODVcdCAgICB2b2x1bWU6IDAuNSxcbiAgICA4Nlx0ICAgIGlzTGl2ZTogZmFsc2UsXG4gICAgODdcdCAgICBtdXRlZDogZmFsc2UsXG4gICAgODhcdCAgICBhdXRvcGxheTogZmFsc2UsXG4gICAgODlcdCAgICBwaXA6IHRydWUsXG4gICAgOTBcdCAgICBhdXRvU2l6ZTogdHJ1ZSxcbiAgICA5MVx0ICAgIGF1dG9NaW5pOiB0cnVlLFxuICAgIDkyXHQgICAgc2NyZWVuc2hvdDogdHJ1ZSxcbiAgICA5M1x0ICAgIHNldHRpbmc6IHRydWUsXG4gICAgOTRcdCAgICBsb29wOiBmYWxzZSxcbiAgICA5NVx0ICAgIGZsaXA6IHRydWUsXG4gICAgOTZcdCAgICByb3RhdGU6IHRydWUsXG4gICAgOTdcdCAgICBwbGF5YmFja1JhdGU6IHRydWUsXG4gICAgOThcdCAgICBhc3BlY3RSYXRpbzogdHJ1ZSxcbiAgICA5OVx0ICAgIGZ1bGxzY3JlZW46IHRydWUsXG4gICAxMDBcdCAgICBmdWxsc2NyZWVuV2ViOiB0cnVlLFxuICAgMTAxXHQgICAgc3VidGl0bGVPZmZzZXQ6IHRydWUsXG4gICAxMDJcdCAgICBtaW5pUHJvZ3Jlc3NCYXI6IHRydWUsXG4gICAxMDNcdCAgICBtdXRleDogdHJ1ZSxcbiAgIDEwNFx0ICAgIGJhY2tkcm9wOiB0cnVlLFxuICAgMTA1XHQgICAgcGxheXNJbmxpbmU6IHRydWUsXG4gICAxMDZcdCAgICBhdXRvUGxheWJhY2s6IHRydWUsXG4gICAxMDdcdCAgICBhaXJwbGF5OiB0cnVlLFxuICAgMTA4XHQgICAgdGhlbWU6ICcjMDBhMWQ2JyxcbiAgIDEwOVx0ICAgIGxhbmc6ICd6aC1jbicsXG4gICAxMTBcdCAgICBtb3JlVmlkZW9BdHRyOiB7XG4gICAxMTFcdCAgICAgIGNyb3NzT3JpZ2luOiAnYW5vbnltb3VzJyxcbiAgIDExMlx0ICAgIH0sXG4gICAxMTNcdCAgICBjb250cm9sczogW1xuICAgMTE0XHQgICAgICB7XG4gICAxMTVcdCAgICAgICAgcG9zaXRpb246ICdyaWdodCcsXG4gICAxMTZcdCAgICAgICAgaHRtbDogJ+eUu+S4reeUuycsXG4gICAxMTdcdCAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgIDExOFx0ICAgICAgICAgIGFydC52YWx1ZS5waXAgPSAhYXJ0LnZhbHVlLnBpcFxuICAgMTE5XHQgICAgICAgIH0sXG4gICAxMjBcdCAgICAgIH0sXG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiA1NzBcbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFQMW9XeUF6azhkc2c1a05Tem1FdHJ4In19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiIiLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMWFhNzcxZjYtMDM4OS00MTczLWE3N2MtODJhNWM4MjYwOWJkIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMTZuRUNub1dSRWc3RVRaVmZhNmpWcnUiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL2NvbXBvbmVudHMvdmlkZW8vVmlkZW9QbGF5ZXIudnVlXCIsIFwidmlld19yYW5nZVwiOiBbMjAwLCAyNTBdfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWU6XG4gICAxMjBcdCAgICAgIH0sXG4gICAxMjFcdCAgICAgIHtcbiAgIDEyMlx0ICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0JyxcbiAgIDEyM1x0ICAgICAgICBodG1sOiBgPGRpdiBjbGFzcz1cIndpZGUtc2NyZWVuLWJ0blwiIHRpdGxlPVwi5a695bGP5qih5byPXCI+XG4gICAxMjRcdCAgICAgICAgICA8c3ZnIGNsYXNzPVwid2lkZS1zY3JlZW4taWNvblwiIHZpZXdCb3g9XCIwIDAgMTAyNCAxMDI0XCIgdmVyc2lvbj1cIjEuMVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjIwMFwiIGhlaWdodD1cIjIwMFwiPlxuICAgMTI1XHQgICAgICAgICAgICA8cGF0aCBkPVwiTTgyNC40NDggMTk5LjU1MkgxOTkuNTUyYy00OS4zMDEzMzMzMyAwLTg5LjI2OTMzMzMzIDM5Ljk2OC04OS4yNjkzMzMzMyA4OS4yNjkzMzMzM3Y0NDYuMzU3MzMzMzRjMCA0OS4zMDEzMzMzMyAzOS45NjggODkuMjY5MzMzMzMgODkuMjY5MzMzMzMgODkuMjY5MzMzMzNoNjI0Ljg5NmM0OS4zMDEzMzMzMyAwIDg5LjI2OTMzMzMzLTM5Ljk2OCA4OS4yNjkzMzMzMy04OS4yNjkzMzMzM1YyODguODIxMzMzMzNjMC00OS4zMDEzMzMzMy0zOS45NTczMzMzMy04OS4yNjkzMzMzMy04OS4yNjkzMzMzMy04OS4yNjkzMzMzM3pNMzM4Ljk4NjY2NjY3IDUyMS4zMjI2NjY2N2w0NS45MDkzMzMzMyA0NS45MDkzMzMzM2MxMy4wNzczMzMzMyAxMy4wNjY2NjY2NyAxMy4wNzczMzMzMyAzNC4yNzIgMCA0Ny4zMzg2NjY2Ny0xMy4wNzczMzMzMyAxMy4wNzczMzMzMy0zNC4yNzIgMTMuMDc3MzMzMzMtNDcuMzM4NjY2NjcgMGwtNTUuMjMyLTU1LjIzMi0zMS42MTYtMzEuNjE2Yy04LjY4MjY2NjY3LTguNjgyNjY2NjctOC42ODI2NjY2Ny0yMi43NjI2NjY2NyAwLTMxLjQ0NTMzMzM0bDMxLjYxNi0zMS42MTYgNTUuMjMyLTU1LjIzMmMxMy4wNzczMzMzMy0xMy4wNjY2NjY2NyAzNC4yNzItMTMuMDY2NjY2NjcgNDcuMzM4NjY2NjcgMCAxMy4wNzczMzMzMyAxMy4wNzczMzMzMyAxMy4wNzczMzMzMyAzNC4yNzIgMCA0Ny4zMzg2NjY2N2wtNDUuOTA5MzMzMzMgNDUuOTA5MzMzMzNjLTUuMTUyIDUuMTUyLTUuMTUyIDEzLjQ5MzMzMzMzIDAgMTguNjQ1MzMzMzR6IG00MTcuNDUwNjY2NjYgNi40bC0zMS42MjY2NjY2NiAzMS42MTYtNTUuMjMyIDU1LjIzMmMtMTMuMDc3MzMzMzMgMTMuMDc3MzMzMzMtMzQuMjcyIDEzLjA3NzMzMzMzLTQ3LjMzODY2NjY3IDAtMTMuMDY2NjY2NjctMTMuMDY2NjY2NjctMTMuMDY2NjY2NjctMzQuMjcyIDAtNDcuMzM4NjY2NjdsNDUuOTA5MzMzMzMtNDUuOTA5MzMzMzNjNS4xNDEzMzMzMy01LjE1MiA1LjE0MTMzMzMzLTEzLjQ5MzMzMzMzIDAtMTguNjQ1MzMzMzRsLTQ1LjkwOTMzMzMzLTQ1LjkwOTMzMzMzYy0xMy4wNjY2NjY2Ny0xMy4wNzczMzMzMy0xMy4wNjY2NjY2Ny0zNC4yNzIgMC00Ny4zMzg2NjY2NyAxMy4wNzczMzMzMy0xMy4wNjY2NjY2NyAzNC4yNzItMTMuMDY2NjY2NjcgNDcuMzM4NjY2NjcgMGw1NS4yMzIgNTUuMjMyIDMxLjYyNjY2NjY2IDMxLjYxNmM4LjY4MjY2NjY3IDguNjgyNjY2NjcgOC42ODI2NjY2NyAyMi43NjI2NjY2NyAwIDMxLjQ0NTMzMzM0elwiIC8+XG4gICAxMjZcdCAgICAgICAgICA8L3N2Zz5cbiAgIDEyN1x0ICAgICAgICA8L2Rpdj5gLFxuICAgMTI4XHQgICAgICAgIHRvb2x0aXA6ICflrr3lsY/mqKHlvI8nLFxuICAgMTI5XHQgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAxMzBcdCAgICAgICAgICBlbWl0KCd0b2dnbGUtY29sbGFwc2UnLCAhcHJvcHMuaXNDb2xsYXBzZWQpXG4gICAxMzFcdCAgICAgICAgfSxcbiAgIDEzMlx0ICAgICAgfSxcbiAgIDEzM1x0ICAgIF0sXG4gICAxMzRcdCAgICBzZXR0aW5nczogW1xuICAgMTM1XHQgICAgICB7XG4gICAxMzZcdCAgICAgICAgd2lkdGg6IDIwMCxcbiAgIDEzN1x0ICAgICAgICBodG1sOiAn55S76LSoJyxcbiAgIDEzOFx0ICAgICAgICBzZWxlY3RvcjogW1xuICAgMTM5XHQgICAgICAgICAge1xuICAgMTQwXHQgICAgICAgICAgICBodG1sOiAn6Ieq5YqoJyxcbiAgIDE0MVx0ICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgIDE0Mlx0ICAgICAgICAgICAgdXJsOiBwcm9wcy52aWRlb1VybFxuICAgMTQzXHQgICAgICAgICAgfVxuICAgMTQ0XHQgICAgICAgIF0sXG4gICAxNDVcdCAgICAgIH0sXG4gICAxNDZcdCAgICBdLFxuICAgMTQ3XHQgICAgaWNvbnM6IHtcbiAgIDE0OFx0ICAgICAgc3RhdGU6IGA8aW1nIHNyYz1cImh0dHBzOi8vczEuaGRzbGIuY29tL2Jmcy9zdGF0aWMvcGxheWVyL2ltZy9wbGF5LnN2Z1wiIGNsYXNzPVwiYXJ0LXN0YXRlLWljb25cIiBhbHQ9XCLliqDovb3kuK3jgILjgILjgIJcIj5gLFxuICAgMTQ5XHQgICAgfSxcbiAgIDE1MFx0ICAgIHF1YWxpdHk6IFtcbiAgIDE1MVx0ICAgICAge1xuICAgMTUyXHQgICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAxNTNcdCAgICAgICAgaHRtbDogJ+iHquWKqCcsXG4gICAxNTRcdCAgICAgICAgdXJsOiBwcm9wcy52aWRlb1VybFxuICAgMTU1XHQgICAgICB9XG4gICAxNTZcdCAgICBdLFxuICAgMTU3XHQgICAgdGh1bWJuYWlsczoge1xuICAgMTU4XHQgICAgICB1cmw6IHByb3BzLnBvc3RlcixcbiAgIDE1OVx0ICAgICAgbnVtYmVyOiA2MCxcbiAgIDE2MFx0ICAgICAgY29sdW1uOiAxMCxcbiAgIDE2MVx0ICAgIH0sXG4gICAxNjJcdCAgICBwbHVnaW5zOiBbXG4gICAxNjNcdCAgICAgIGFydHBsYXllclBsdWdpbkRhbm11a3Uoe1xuICAgMTY0XHQgICAgICAgIGNvbnRhaW5lcjogJy5hcnRwbGF5ZXItYXBwJyxcbiAgIDE2NVx0ICAgICAgICBzaG93SW5wdXQ6IHRydWUsXG4gICAxNjZcdCAgICAgICAgLy8g6I635Y+W5by55bmV5pWw5o2uXG4gICAxNjdcdCAgICAgICAgZGFubXVrdTogYXN5bmMgKCkgPT4ge1xuICAgMTY4XHQgICAgICAgICAgdHJ5IHtcbiAgIDE2OVx0ICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBnZXRCYXJyYWdlU2VydmljZShwcm9wcy52aWRlb0lkKVxuICAgMTcwXHQgICAgICAgICAgICBpZiAocmVzcG9uc2UuY29kZSA9PT0gMjAwKSB7XG4gICAxNzFcdCAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEubWFwKGl0ZW0gPT4gKHtcbiAgIDE3Mlx0ICAgICAgICAgICAgICAgIHRleHQ6IGl0ZW0udGV4dCxcbiAgIDE3M1x0ICAgICAgICAgICAgICAgIHRpbWU6IGl0ZW0udGltZSxcbiAgIDE3NFx0ICAgICAgICAgICAgICAgIGNvbG9yOiBpdGVtLmNvbG9yIHx8ICcjRkZGRkZGJyxcbiAgIDE3NVx0ICAgICAgICAgICAgICAgIHR5cGU6IGl0ZW0udHlwZSB8fCAwLFxuICAgMTc2XHQgICAgICAgICAgICAgICAgYm9yZGVyOiBmYWxzZSxcbiAgIDE3N1x0ICAgICAgICAgICAgICB9KSlcbiAgIDE3OFx0ICAgICAgICAgICAgfVxuICAgMTc5XHQgICAgICAgICAgICByZXR1cm4gW11cbiAgIDE4MFx0ICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAxODFcdCAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPluW8ueW5leWksei0pTonLCBlcnJvcilcbiAgIDE4Mlx0ICAgICAgICAgICAgRWxNZXNzYWdlLmVycm9yKCfojrflj5blvLnluZXlpLHotKUnKVxuICAgMTgzXHQgICAgICAgICAgICByZXR1cm4gW11cbiAgIDE4NFx0ICAgICAgICAgIH1cbiAgIDE4NVx0ICAgICAgICB9LFxuICAgMTg2XHQgICAgICAgIHNwZWVkOiA1LFxuICAgMTg3XHQgICAgICAgIG9wYWNpdHk6IDEsXG4gICAxODhcdCAgICAgICAgZm9udFNpemU6IDI1LFxuICAgMTg5XHQgICAgICAgIGNvbG9yOiAnI0ZGRkZGRicsXG4gICAxOTBcdCAgICAgICAgbW9kZTogMCxcbiAgIDE5MVx0ICAgICAgICBtYXJnaW46IFsxMCwgJzI1JSddLFxuICAgMTkyXHQgICAgICAgIGFudGlPdmVybGFwOiB0cnVlLFxuICAgMTkzXHQgICAgICAgIHVzZVdvcmtlcjogdHJ1ZSxcbiAgIDE5NFx0ICAgICAgICBzeW5jaHJvbm91c1BsYXliYWNrOiBmYWxzZSxcbiAgIDE5NVx0ICAgICAgICBtYXhMZW5ndGg6IDEwMCxcbiAgIDE5Nlx0ICAgICAgICBtaW5XaWR0aDogMjAwLFxuICAgMTk3XHQgICAgICAgIG1heFdpZHRoOiA0MDAsXG4gICAxOThcdCAgICAgICAgdGhlbWU6ICdkYXJrJyxcbiAgIDE5OVx0ICAgICAgICAvLyDovpPlhaXmoYbojrflvpfnhKbngrnml7bmmoLlgZzop4bpopFcbiAgIDIwMFx0ICAgICAgICBvbklucHV0OiAoKSA9PiB7XG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiA1NzBcbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFTUVh5djF0NGl1alhjRWVuNzJMRDJDIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiIiLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiZmZkZTFkYWItODlkZC00N2VkLTkwNmEtNmY3OTI2YTA5NzljIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjo1LCJjb250ZW50IjoiIiwidG9vbF91c2UiOnsidG9vbF91c2VfaWQiOiJ0b29sdV8wMUZnajgxQU0zeHQ5WlNaM2t0ZHk5TWgiLCJ0b29sX25hbWUiOiJzdHItcmVwbGFjZS1lZGl0b3IiLCJpbnB1dF9qc29uIjoie1wiY29tbWFuZFwiOiBcInZpZXdcIiwgXCJwYXRoXCI6IFwic3JjL2NvbXBvbmVudHMvdmlkZW8vVmlkZW9QbGF5ZXIudnVlXCIsIFwidmlld19yYW5nZVwiOiBbMjUwLCAzMDBdfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50IjoiIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWU6XG4gICAyMDBcdCAgICAgICAgb25JbnB1dDogKCkgPT4ge1xuICAgMjAxXHQgICAgICAgICAgaWYgKGFydC52YWx1ZSAmJiAhYXJ0LnZhbHVlLnBhdXNlZCkge1xuICAgMjAyXHQgICAgICAgICAgICBhcnQudmFsdWUucGF1c2UoKVxuICAgMjAzXHQgICAgICAgICAgfVxuICAgMjA0XHQgICAgICAgIH0sXG4gICAyMDVcdCAgICAgICAgLy8g5Y+R6YCB5by55bmV5ZCO5oGi5aSN5pKt5pS+XG4gICAyMDZcdCAgICAgICAgb25TZW5kOiAoKSA9PiB7XG4gICAyMDdcdCAgICAgICAgICBpZiAoYXJ0LnZhbHVlICYmIGFydC52YWx1ZS5wYXVzZWQpIHtcbiAgIDIwOFx0ICAgICAgICAgICAgYXJ0LnZhbHVlLnBsYXkoKVxuICAgMjA5XHQgICAgICAgICAgfVxuICAgMjEwXHQgICAgICAgIH0sXG4gICAyMTFcdCAgICAgICAgLy8g5Y+R6YCB5by55bmV5YmN55qE5aSE55CGXG4gICAyMTJcdCAgICAgICAgYmVmb3JlRW1pdDogYXN5bmMgKGRhbm11KSA9PiB7XG4gICAyMTNcdCAgICAgICAgICBjb25zdCBiYXJyYWdlRGF0YSA9IHtcbiAgIDIxNFx0ICAgICAgICAgICAgdmlkZW9JZDogcHJvcHMudmlkZW9JZCxcbiAgIDIxNVx0ICAgICAgICAgICAgdGV4dDogZGFubXUudGV4dCxcbiAgIDIxNlx0ICAgICAgICAgICAgdGltZTogYXJ0LnZhbHVlLmN1cnJlbnRUaW1lLFxuICAgMjE3XHQgICAgICAgICAgICBjb2xvcjogZGFubXUuY29sb3IsXG4gICAyMThcdCAgICAgICAgICAgIHR5cGU6IGRhbm11LnR5cGVcbiAgIDIxOVx0ICAgICAgICAgIH1cbiAgIDIyMFx0ICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgc2VuZEJhcnJhZ2VTZXJ2aWNlKGJhcnJhZ2VEYXRhKVxuICAgMjIxXHQgICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT09IDIwMCkge1xuICAgMjIyXHQgICAgICAgICAgICBFbE1lc3NhZ2Uuc3VjY2Vzcygn5Y+R6YCB5by55bmV5oiQ5YqfJylcbiAgIDIyM1x0ICAgICAgICAgICAgLy8g5Y+R6YCB5oiQ5Yqf5ZCO56uL5Y2z5bCG5paw5by55bmV5re75Yqg5Yiw5pKt5pS+5ZmoXG4gICAyMjRcdCAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAyMjVcdCAgICAgICAgICB9XG4gICAyMjZcdCAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IocmVzcG9uc2UubWVzc2FnZSB8fCAn5Y+R6YCB5by55bmV5aSx6LSlJylcbiAgIDIyN1x0ICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgMjI4XHQgICAgICAgIH1cbiAgIDIyOVx0ICAgICAgfSlcbiAgIDIzMFx0ICAgIF1cbiAgIDIzMVx0ICB9KVxuICAgMjMyXHRcbiAgIDIzM1x0ICAvLyDnm5HlkKzmkq3mlL7lmajkuovku7ZcbiAgIDIzNFx0ICBhcnQudmFsdWUub24oJ3JlYWR5JywgKCkgPT4ge1xuICAgMjM1XHQgICAgY29uc29sZS5sb2coJ+inhumikeaSreaUvuWZqOW3suWwsee7qicpXG4gICAyMzZcdCAgfSlcbiAgIDIzN1x0XG4gICAyMzhcdCAgYXJ0LnZhbHVlLm9uKCdwbGF5JywgKCkgPT4ge1xuICAgMjM5XHQgICAgY29uc29sZS5sb2coJ+inhumikeW8gOWni+aSreaUvicpXG4gICAyNDBcdCAgfSlcbiAgIDI0MVx0XG4gICAyNDJcdCAgYXJ0LnZhbHVlLm9uKCdwYXVzZScsICgpID0+IHtcbiAgIDI0M1x0ICAgIGNvbnNvbGUubG9nKCfop4bpopHmmoLlgZwnKVxuICAgMjQ0XHQgIH0pXG4gICAyNDVcdFxuICAgMjQ2XHQgIC8vIOmUmeivr+WkhOeQhlxuICAgMjQ3XHQgIGFydC52YWx1ZS5vbignZXJyb3InLCAoZXJyb3IpID0+IHtcbiAgIDI0OFx0ICAgIGNvbnNvbGUuZXJyb3IoJ+inhumikeaSreaUvumUmeivrzonLCBlcnJvcilcbiAgIDI0OVx0ICAgIEVsTWVzc2FnZS5lcnJvcign6KeG6aKR5Yqg6L295aSx6LSl77yM6K+356iN5ZCO6YeN6K+VJylcbiAgIDI1MFx0ICB9KVxuVG90YWwgbGluZXMgaW4gZmlsZTogNTcwXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxNm5FQ25vV1JFZzdFVFpWZmE2alZydSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0IjoiIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6Ijc3MDM2YjdhLWIwMjgtNDU5MC05ZDE1LTg4YTcyZDcxODNiNyIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDFQYm93RHVpWmltMTRKVFhlblFkZk5OIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiICAgICAgYXJ0cGxheWVyUGx1Z2luRGFubXVrdSh7XFxuICAgICAgICBjb250YWluZXI6ICcuYXJ0cGxheWVyLWFwcCcsXFxuICAgICAgICBzaG93SW5wdXQ6IHRydWUsXFxuICAgICAgICAvLyBcXHU4M2I3XFx1NTNkNlxcdTVmMzlcXHU1ZTU1XFx1NjU3MFxcdTYzNmVcXG4gICAgICAgIGRhbm11a3U6IGFzeW5jICgpID0+IHtcXG4gICAgICAgICAgdHJ5IHtcXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGdldEJhcnJhZ2VTZXJ2aWNlKHByb3BzLnZpZGVvSWQpXFxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT09IDIwMCkge1xcbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEubWFwKGl0ZW0gPT4gKHtcXG4gICAgICAgICAgICAgICAgdGV4dDogaXRlbS50ZXh0LFxcbiAgICAgICAgICAgICAgICB0aW1lOiBpdGVtLnRpbWUsXFxuICAgICAgICAgICAgICAgIGNvbG9yOiBpdGVtLmNvbG9yIHx8ICcjRkZGRkZGJyxcXG4gICAgICAgICAgICAgICAgdHlwZTogaXRlbS50eXBlIHx8IDAsXFxuICAgICAgICAgICAgICAgIGJvcmRlcjogZmFsc2UsXFxuICAgICAgICAgICAgICB9KSlcXG4gICAgICAgICAgICB9XFxuICAgICAgICAgICAgcmV0dXJuIFtdXFxuICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XFxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignXFx1ODNiN1xcdTUzZDZcXHU1ZjM5XFx1NWU1NVxcdTU5MzFcXHU4ZDI1OicsIGVycm9yKVxcbiAgICAgICAgICAgIEVsTWVzc2FnZS5lcnJvcignXFx1ODNiN1xcdTUzZDZcXHU1ZjM5XFx1NWU1NVxcdTU5MzFcXHU4ZDI1JylcXG4gICAgICAgICAgICByZXR1cm4gW11cXG4gICAgICAgICAgfVxcbiAgICAgICAgfSxcXG4gICAgICAgIHNwZWVkOiA1LFxcbiAgICAgICAgb3BhY2l0eTogMSxcXG4gICAgICAgIGZvbnRTaXplOiAyNSxcXG4gICAgICAgIGNvbG9yOiAnI0ZGRkZGRicsXFxuICAgICAgICBtb2RlOiAwLFxcbiAgICAgICAgbWFyZ2luOiBbMTAsICcyNSUnXSxcXG4gICAgICAgIGFudGlPdmVybGFwOiB0cnVlLFxcbiAgICAgICAgdXNlV29ya2VyOiB0cnVlLFxcbiAgICAgICAgc3luY2hyb25vdXNQbGF5YmFjazogZmFsc2UsXFxuICAgICAgICBtYXhMZW5ndGg6IDEwMCxcXG4gICAgICAgIG1pbldpZHRoOiAyMDAsXFxuICAgICAgICBtYXhXaWR0aDogNDAwLFxcbiAgICAgICAgdGhlbWU6ICdkYXJrJyxcXG4gICAgICAgIC8vIFxcdThmOTNcXHU1MTY1XFx1Njg0NlxcdTgzYjdcXHU1Zjk3XFx1NzEyNlxcdTcwYjlcXHU2NWY2XFx1NjY4MlxcdTUwNWNcXHU4OWM2XFx1OTg5MVxcbiAgICAgICAgb25JbnB1dDogKCkgPT4ge1xcbiAgICAgICAgICBpZiAoYXJ0LnZhbHVlICYmICFhcnQudmFsdWUucGF1c2VkKSB7XFxuICAgICAgICAgICAgYXJ0LnZhbHVlLnBhdXNlKClcXG4gICAgICAgICAgfVxcbiAgICAgICAgfSxcXG4gICAgICAgIC8vIFxcdTUzZDFcXHU5MDAxXFx1NWYzOVxcdTVlNTVcXHU1NDBlXFx1NjA2MlxcdTU5MGRcXHU2NGFkXFx1NjUzZVxcbiAgICAgICAgb25TZW5kOiAoKSA9PiB7XFxuICAgICAgICAgIGlmIChhcnQudmFsdWUgJiYgYXJ0LnZhbHVlLnBhdXNlZCkge1xcbiAgICAgICAgICAgIGFydC52YWx1ZS5wbGF5KClcXG4gICAgICAgICAgfVxcbiAgICAgICAgfSxcXG4gICAgICAgIC8vIFxcdTUzZDFcXHU5MDAxXFx1NWYzOVxcdTVlNTVcXHU1MjRkXFx1NzY4NFxcdTU5MDRcXHU3NDA2XFxuICAgICAgICBiZWZvcmVFbWl0OiBhc3luYyAoZGFubXUpID0+IHtcXG4gICAgICAgICAgY29uc3QgYmFycmFnZURhdGEgPSB7XFxuICAgICAgICAgICAgdmlkZW9JZDogcHJvcHMudmlkZW9JZCxcXG4gICAgICAgICAgICB0ZXh0OiBkYW5tdS50ZXh0LFxcbiAgICAgICAgICAgIHRpbWU6IGFydC52YWx1ZS5jdXJyZW50VGltZSxcXG4gICAgICAgICAgICBjb2xvcjogZGFubXUuY29sb3IsXFxuICAgICAgICAgICAgdHlwZTogZGFubXUudHlwZVxcbiAgICAgICAgICB9XFxuICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgc2VuZEJhcnJhZ2VTZXJ2aWNlKGJhcnJhZ2VEYXRhKVxcbiAgICAgICAgICBpZiAocmVzcG9uc2UuY29kZSA9PT0gMjAwKSB7XFxuICAgICAgICAgICAgRWxNZXNzYWdlLnN1Y2Nlc3MoJ1xcdTUzZDFcXHU5MDAxXFx1NWYzOVxcdTVlNTVcXHU2MjEwXFx1NTI5ZicpXFxuICAgICAgICAgICAgLy8gXFx1NTNkMVxcdTkwMDFcXHU2MjEwXFx1NTI5ZlxcdTU0MGVcXHU3YWNiXFx1NTM3M1xcdTVjMDZcXHU2NWIwXFx1NWYzOVxcdTVlNTVcXHU2ZGZiXFx1NTJhMFxcdTUyMzBcXHU2NGFkXFx1NjUzZVxcdTU2NjhcXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxcbiAgICAgICAgICB9XFxuICAgICAgICAgIEVsTWVzc2FnZS5lcnJvcihyZXNwb25zZS5tZXNzYWdlIHx8ICdcXHU1M2QxXFx1OTAwMVxcdTVmMzlcXHU1ZTU1XFx1NTkzMVxcdThkMjUnKVxcbiAgICAgICAgICByZXR1cm4gZmFsc2VcXG4gICAgICAgIH1cIiwgXCJuZXdfc3RyXCI6IFwiICAgICAgYXJ0cGxheWVyUGx1Z2luRGFubXVrdSh7XFxuICAgICAgICBjb250YWluZXI6ICcuYXJ0cGxheWVyLWFwcCcsXFxuICAgICAgICBzaG93SW5wdXQ6IHRydWUsXFxuICAgICAgICBvcGVuOiB0cnVlLCAvLyBcXHU5ZWQ4XFx1OGJhNFxcdTVmMDBcXHU1NDJmXFx1NWYzOVxcdTVlNTVcXG4gICAgICAgIC8vIFxcdTgzYjdcXHU1M2Q2XFx1NWYzOVxcdTVlNTVcXHU2NTcwXFx1NjM2ZVxcbiAgICAgICAgZGFubXVrdTogYXN5bmMgKCkgPT4ge1xcbiAgICAgICAgICB0cnkge1xcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZ2V0QmFycmFnZVNlcnZpY2UocHJvcHMudmlkZW9JZClcXG4gICAgICAgICAgICBpZiAocmVzcG9uc2UuY29kZSA9PT0gMjAwKSB7XFxuICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS5tYXAoaXRlbSA9PiAoe1xcbiAgICAgICAgICAgICAgICB0ZXh0OiBpdGVtLnRleHQsXFxuICAgICAgICAgICAgICAgIHRpbWU6IGl0ZW0udGltZSxcXG4gICAgICAgICAgICAgICAgY29sb3I6IGl0ZW0uY29sb3IgfHwgJyNGRkZGRkYnLFxcbiAgICAgICAgICAgICAgICB0eXBlOiBpdGVtLnR5cGUgfHwgMCxcXG4gICAgICAgICAgICAgICAgYm9yZGVyOiBmYWxzZSxcXG4gICAgICAgICAgICAgIH0pKVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICByZXR1cm4gW11cXG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTVmMzlcXHU1ZTU1XFx1NTkzMVxcdThkMjU6JywgZXJyb3IpXFxuICAgICAgICAgICAgRWxNZXNzYWdlLmVycm9yKCdcXHU4M2I3XFx1NTNkNlxcdTVmMzlcXHU1ZTU1XFx1NTkzMVxcdThkMjUnKVxcbiAgICAgICAgICAgIHJldHVybiBbXVxcbiAgICAgICAgICB9XFxuICAgICAgICB9LFxcbiAgICAgICAgc3BlZWQ6IDUsXFxuICAgICAgICBvcGFjaXR5OiAxLFxcbiAgICAgICAgZm9udFNpemU6IDI1LFxcbiAgICAgICAgY29sb3I6ICcjRkZGRkZGJyxcXG4gICAgICAgIG1vZGU6IDAsXFxuICAgICAgICBtYXJnaW46IFsxMCwgJzI1JSddLFxcbiAgICAgICAgYW50aU92ZXJsYXA6IHRydWUsXFxuICAgICAgICB1c2VXb3JrZXI6IHRydWUsXFxuICAgICAgICBzeW5jaHJvbm91c1BsYXliYWNrOiBmYWxzZSxcXG4gICAgICAgIG1heExlbmd0aDogMTAwLFxcbiAgICAgICAgbWluV2lkdGg6IDIwMCxcXG4gICAgICAgIG1heFdpZHRoOiA0MDAsXFxuICAgICAgICB0aGVtZTogJ2RhcmsnLFxcbiAgICAgICAgLy8gXFx1OGY5M1xcdTUxNjVcXHU2ODQ2XFx1ODNiN1xcdTVmOTdcXHU3MTI2XFx1NzBiOVxcdTY1ZjZcXHU2NjgyXFx1NTA1Y1xcdTg5YzZcXHU5ODkxXFxuICAgICAgICBvbklucHV0OiAoKSA9PiB7XFxuICAgICAgICAgIGlmIChhcnQudmFsdWUgJiYgIWFydC52YWx1ZS5wYXVzZWQpIHtcXG4gICAgICAgICAgICBhcnQudmFsdWUucGF1c2UoKVxcbiAgICAgICAgICB9XFxuICAgICAgICB9LFxcbiAgICAgICAgLy8gXFx1NTNkMVxcdTkwMDFcXHU1ZjM5XFx1NWU1NVxcdTU0MGVcXHU2MDYyXFx1NTkwZFxcdTY0YWRcXHU2NTNlXFxuICAgICAgICBvblNlbmQ6ICgpID0+IHtcXG4gICAgICAgICAgaWYgKGFydC52YWx1ZSAmJiBhcnQudmFsdWUucGF1c2VkKSB7XFxuICAgICAgICAgICAgYXJ0LnZhbHVlLnBsYXkoKVxcbiAgICAgICAgICB9XFxuICAgICAgICB9LFxcbiAgICAgICAgLy8gXFx1NTNkMVxcdTkwMDFcXHU1ZjM5XFx1NWU1NVxcdTUyNGRcXHU3Njg0XFx1NTkwNFxcdTc0MDZcXG4gICAgICAgIGJlZm9yZUVtaXQ6IGFzeW5jIChkYW5tdSkgPT4ge1xcbiAgICAgICAgICBjb25zdCBiYXJyYWdlRGF0YSA9IHtcXG4gICAgICAgICAgICB2aWRlb0lkOiBwcm9wcy52aWRlb0lkLFxcbiAgICAgICAgICAgIHRleHQ6IGRhbm11LnRleHQsXFxuICAgICAgICAgICAgdGltZTogYXJ0LnZhbHVlLmN1cnJlbnRUaW1lLFxcbiAgICAgICAgICAgIGNvbG9yOiBkYW5tdS5jb2xvcixcXG4gICAgICAgICAgICB0eXBlOiBkYW5tdS50eXBlXFxuICAgICAgICAgIH1cXG4gICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBzZW5kQmFycmFnZVNlcnZpY2UoYmFycmFnZURhdGEpXFxuICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHtcXG4gICAgICAgICAgICBFbE1lc3NhZ2Uuc3VjY2VzcygnXFx1NTNkMVxcdTkwMDFcXHU1ZjM5XFx1NWU1NVxcdTYyMTBcXHU1MjlmJylcXG4gICAgICAgICAgICAvLyBcXHU1M2QxXFx1OTAwMVxcdTYyMTBcXHU1MjlmXFx1NTQwZVxcdTdhY2JcXHU1MzczXFx1NWMwNlxcdTY1YjBcXHU1ZjM5XFx1NWU1NVxcdTZkZmJcXHU1MmEwXFx1NTIzMFxcdTY0YWRcXHU2NTNlXFx1NTY2OFxcbiAgICAgICAgICAgIHJldHVybiB0cnVlXFxuICAgICAgICAgIH1cXG4gICAgICAgICAgRWxNZXNzYWdlLmVycm9yKHJlc3BvbnNlLm1lc3NhZ2UgfHwgJ1xcdTUzZDFcXHU5MDAxXFx1NWYzOVxcdTVlNTVcXHU1OTMxXFx1OGQyNScpXFxuICAgICAgICAgIHJldHVybiBmYWxzZVxcbiAgICAgICAgfVwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMTYzLCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDIyOH1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5qC55o2u5qOA5p+l55qE5Luj56CB77yM5oiR5Y+R546wIEFydFBsYXllciDmkq3mlL7lmajlt7Lnu4/phY3nva7kuoblvLnluZXns7vnu5/vvIzlubbkuJTlt7Lnu4/lrp7njrDkuoblvLnluZXnmoTojrflj5blkozlj5HpgIHlip/og73jgILkvYbmmK/vvIzmiJHms6jmhI/liLDlvLnluZXns7vnu5/lj6/og73msqHmnInpu5jorqTlvIDlkK/vvIzmiJbogIXlj6/og73lrZjlnKjkuIDkupvphY3nva7pl67popjjgIJcblxu6K6p5oiR5Lus5L+u5pS55Luj56CB77yM56Gu5L+d5by55bmV57O757uf5q2j5bi45byA5ZCv77yaXG5cbjEuIOmmluWFiO+8jOaIkeS7rOmcgOimgeehruS/neW8ueW5leaPkuS7tueahOmFjee9ruato+ehrlxuMi4g5re75Yqg5LiA5Liq5by55bmV5byA5YWz5oyJ6ZKu5Yiw5pKt5pS+5Zmo5o6n5Yi25qCPXG4zLiDnoa7kv53lvLnluZXns7vnu5/pu5jorqTlvIDlkK9cblxu6K6p5oiR5Lus6L+b6KGM5L+u5pS577yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHNyYy9jb21wb25lbnRzL3ZpZGVvL1ZpZGVvUGxheWVyLnZ1ZTpcbiAgIDI1MFx0ICB9KVxuICAgMjUxXHRcbiAgIDI1Mlx0ICAvLyDnm5HlkKzlhajlsY/kuovku7ZcbiAgIDI1M1x0ICBhcnQudmFsdWUub24oJ2Z1bGxzY3JlZW4nLCAoc3RhdGUpID0+IHtcbiAgIDI1NFx0ICAgIGVtaXQoJ3RvZ2dsZS1jb2xsYXBzZScsIHN0YXRlKVxuICAgMjU1XHQgIH0pXG4gICAyNTZcdFxuICAgMjU3XHQgIC8vIOebkeWQrOe9kemhteWFqOWxj+S6i+S7tlxuICAgMjU4XHQgIGFydC52YWx1ZS5vbignZnVsbHNjcmVlbldlYicsIChzdGF0ZSkgPT4ge1xuICAgMjU5XHQgICAgaXNXZWJGdWxsc2NyZWVuLnZhbHVlID0gc3RhdGVcbiAgIDI2MFx0ICAgIC8vIOaOp+WItmJvZHnmu5rliqhcbiAgIDI2MVx0ICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSBzdGF0ZSA/ICdoaWRkZW4nIDogJydcbiAgIDI2Mlx0ICAgIGVtaXQoJ3RvZ2dsZS1jb2xsYXBzZScsIHN0YXRlKVxuICAgMjYzXHQgIH0pXG4gICAyNjRcdFxuICAgMjY1XHQgIC8vIOebkeWQrOW8ueW5leebuOWFs+S6i+S7tlxuICAgMjY2XHQgIGFydC52YWx1ZS5vbignYXJ0cGxheWVyUGx1Z2luRGFubXVrdTplbWl0JywgKGRhbm11KSA9PiB7XG4gICAyNjdcdCAgICBjb25zb2xlLmxvZygn5Y+R6YCB5by55bmVOicsIGRhbm11KVxuICAgMjY4XHQgIH0pXG4gICAyNjlcdFxuICAgMjcwXHQgIGFydC52YWx1ZS5vbignYXJ0cGxheWVyUGx1Z2luRGFubXVrdTpsb2FkZWQnLCAoZGFubXVzKSA9PiB7XG4gICAyNzFcdCAgICBjb25zb2xlLmxvZygn5by55bmV5Yqg6L295a6M5oiQLCDmgLvmlbA6JywgZGFubXVzPy5sZW5ndGggfHwgMClcbiAgIDI3Mlx0ICB9KVxuICAgMjczXHRcbiAgIDI3NFx0ICBhcnQudmFsdWUub24oJ2FydHBsYXllclBsdWdpbkRhbm11a3U6ZXJyb3InLCAoZXJyb3IpID0+IHtcbiAgIDI3NVx0ICAgIGNvbnNvbGUuZXJyb3IoJ+W8ueW5lemUmeivrzonLCBlcnJvcilcbiAgIDI3Nlx0ICAgIEVsTWVzc2FnZS5lcnJvcign5by55bmV57O757uf5Ye6546w6ZSZ6K+vJylcbiAgIDI3N1x0ICB9KVxuICAgMjc4XHR9XG4gICAyNzlcdFxuICAgMjgwXHQvLyDnm5HlkKwgVVJMIOWPmOWMllxuICAgMjgxXHR3YXRjaCgoKSA9PiBwcm9wcy52aWRlb1VybCwgKG5ld1VybCwgb2xkVXJsKSA9PiB7XG4gICAyODJcdCAgaWYgKG5ld1VybCAmJiBuZXdVcmwgIT09IG9sZFVybCkge1xuICAgMjgzXHQgICAgaWYgKGFydC52YWx1ZSkge1xuICAgMjg0XHQgICAgICAvLyDlpoLmnpzmkq3mlL7lmajlt7LlrZjlnKjvvIzmm7TmlrDop4bpopHmupBcbiAgIDI4NVx0ICAgICAgYXJ0LnZhbHVlLnVybCA9IG5ld1VybFxuICAgMjg2XHQgICAgICBhcnQudmFsdWUucG9zdGVyID0gcHJvcHMucG9zdGVyXG4gICAyODdcdCAgICAgIGFydC52YWx1ZS50aXRsZSA9IHByb3BzLnRpdGxlXG4gICAyODhcdCAgICB9IGVsc2Uge1xuICAgMjg5XHQgICAgICAvLyDlpoLmnpzmkq3mlL7lmajkuI3lrZjlnKjvvIzliJ3lp4vljJbmkq3mlL7lmahcbiAgIDI5MFx0ICAgICAgaW5pdFBsYXllcigpXG4gICAyOTFcdCAgICB9XG4gICAyOTJcdCAgfVxuICAgMjkzXHR9LCB7aW1tZWRpYXRlOiB0cnVlfSlcbiAgIDI5NFx0XG4gICAyOTVcdC8vIOe7hOS7tuaMgui9veaXtuWIneWni+WMluaSreaUvuWZqFxuICAgMjk2XHRvbk1vdW50ZWQoKCkgPT4ge1xuICAgMjk3XHQgIC8vIOS9v+eUqCBuZXh0VGljayDnoa7kv50gRE9NIOW3suabtOaWsFxuICAgMjk4XHQgIG5leHRUaWNrKCgpID0+IHtcbiAgIDI5OVx0ICAgIGlmIChwcm9wcy52aWRlb1VybCkge1xuICAgMzAwXHQgICAgICBpbml0UGxheWVyKClcblRvdGFsIGxpbmVzIGluIGZpbGU6IDU3MFxuIiwiaXNfZXJyb3IiOmZhbHNlLCJyZXF1ZXN0X2lkIjoiIiwidG9vbF91c2VfaWQiOiJ0b29sdV8wMUZnajgxQU0zeHQ5WlNaM2t0ZHk5TWgifX0seyJpZCI6MiwidHlwZSI6NCwiaWRlX3N0YXRlX25vZGUiOnsid29ya3NwYWNlRm9sZGVycyI6W3sicmVwb3NpdG9yeVJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkiLCJmb2xkZXJSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIn1dLCJ3b3Jrc3BhY2VGb2xkZXJzVW5jaGFuZ2VkIjpmYWxzZX19XSwicmVzcG9uc2VfdGV4dCI6IuagueaNruajgOafpeeahOS7o+egge+8jOaIkeWPkeeOsCBBcnRQbGF5ZXIg5pKt5pS+5Zmo5bey57uP6YWN572u5LqG5by55bmV57O757uf77yM5bm25LiU5bey57uP5a6e546w5LqG5by55bmV55qE6I635Y+W5ZKM5Y+R6YCB5Yqf6IO944CC5L2G5piv77yM5oiR5rOo5oSP5Yiw5by55bmV57O757uf5Y+v6IO95rKh5pyJ6buY6K6k5byA5ZCv77yM5oiW6ICF5Y+v6IO95a2Y5Zyo5LiA5Lqb6YWN572u6Zeu6aKY44CCXG5cbuiuqeaIkeS7rOS/ruaUueS7o+egge+8jOehruS/neW8ueW5leezu+e7n+ato+W4uOW8gOWQr++8mlxuXG4xLiDpppblhYjvvIzmiJHku6zpnIDopoHnoa7kv53lvLnluZXmj5Lku7bnmoTphY3nva7mraPnoa5cbjIuIOa3u+WKoOS4gOS4quW8ueW5leW8gOWFs+aMiemSruWIsOaSreaUvuWZqOaOp+WItuagj1xuMy4g56Gu5L+d5by55bmV57O757uf6buY6K6k5byA5ZCvXG5cbuiuqeaIkeS7rOi/m+ihjOS/ruaUue+8mlxuIiwid29ya3NwYWNlX2ZpbGVfY2h1bmtzIjpbXX0seyJzdGF0dXMiOiJzdWNjZXNzIiwicmVxdWVzdF9pZCI6IjU5OTJkZWIyLWNlNjMtNDIwMi05ODQyLTc4OTZhMjAzNjUwYiIsInJlcXVlc3RfbWVzc2FnZSI6IiIsInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6NSwiY29udGVudCI6IiIsInRvb2xfdXNlIjp7InRvb2xfdXNlX2lkIjoidG9vbHVfMDEzSnJKZnpISnp1c2lNVGJYa211VWhtIiwidG9vbF9uYW1lIjoic3RyLXJlcGxhY2UtZWRpdG9yIiwiaW5wdXRfanNvbiI6IntcImNvbW1hbmRcIjogXCJzdHJfcmVwbGFjZVwiLCBcInBhdGhcIjogXCJzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWVcIiwgXCJzdHJfcmVwbGFjZV9lbnRyaWVzXCI6IFt7XCJvbGRfc3RyXCI6IFwiICAgIGNvbnRyb2xzOiBbXFxuICAgICAge1xcbiAgICAgICAgcG9zaXRpb246ICdyaWdodCcsXFxuICAgICAgICBodG1sOiAnXFx1NzUzYlxcdTRlMmRcXHU3NTNiJyxcXG4gICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XFxuICAgICAgICAgIGFydC52YWx1ZS5waXAgPSAhYXJ0LnZhbHVlLnBpcFxcbiAgICAgICAgfSxcXG4gICAgICB9LFwiLCBcIm5ld19zdHJcIjogXCIgICAgY29udHJvbHM6IFtcXG4gICAgICB7XFxuICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0JyxcXG4gICAgICAgIGh0bWw6ICdcXHU1ZjM5XFx1NWU1NScsXFxuICAgICAgICB0b29sdGlwOiAnXFx1NWYwMFxcdTU0MmYvXFx1NTE3M1xcdTk1ZWRcXHU1ZjM5XFx1NWU1NScsXFxuICAgICAgICBjbGljazogZnVuY3Rpb24gKCkge1xcbiAgICAgICAgICAvLyBcXHU1MjA3XFx1NjM2MlxcdTVmMzlcXHU1ZTU1XFx1NjYzZVxcdTc5M2FcXHU3MmI2XFx1NjAwMVxcbiAgICAgICAgICBjb25zdCBkYW5tdWt1ID0gYXJ0LnZhbHVlLnBsdWdpbnMuYXJ0cGxheWVyUGx1Z2luRGFubXVrdVxcbiAgICAgICAgICBpZiAoZGFubXVrdSkge1xcbiAgICAgICAgICAgIGRhbm11a3UudG9nZ2xlKClcXG4gICAgICAgICAgICBFbE1lc3NhZ2UuaW5mbyhkYW5tdWt1LmlzT3BlbiA/ICdcXHU1ZjM5XFx1NWU1NVxcdTVkZjJcXHU1ZjAwXFx1NTQyZicgOiAnXFx1NWYzOVxcdTVlNTVcXHU1ZGYyXFx1NTE3M1xcdTk1ZWQnKVxcbiAgICAgICAgICB9XFxuICAgICAgICB9LFxcbiAgICAgIH0sXFxuICAgICAge1xcbiAgICAgICAgcG9zaXRpb246ICdyaWdodCcsXFxuICAgICAgICBodG1sOiAnXFx1NzUzYlxcdTRlMmRcXHU3NTNiJyxcXG4gICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XFxuICAgICAgICAgIGFydC52YWx1ZS5waXAgPSAhYXJ0LnZhbHVlLnBpcFxcbiAgICAgICAgfSxcXG4gICAgICB9LFwiLCBcIm9sZF9zdHJfc3RhcnRfbGluZV9udW1iZXJcIjogMTEzLCBcIm9sZF9zdHJfZW5kX2xpbmVfbnVtYmVyXCI6IDEyMH1dfSJ9fSx7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi546w5Zyo77yM6K6p5oiR5Lus5re75Yqg5LiA5Liq5by55bmV5byA5YWz5oyJ6ZKu5Yiw5pKt5pS+5Zmo5o6n5Yi25qCP77yM5Lul5L6/55So5oi35Y+v5Lul5pa55L6/5Zyw5byA5ZCv5oiW5YWz6Zet5by55bmV77yaXG4ifSx7ImlkIjoyLCJ0eXBlIjoyLCJjb250ZW50IjoiIn0seyJpZCI6MywidHlwZSI6MywiY29udGVudCI6IiJ9XSwic2Vlbl9zdGF0ZSI6InNlZW4iLCJzdHJ1Y3R1cmVkX3JlcXVlc3Rfbm9kZXMiOlt7ImlkIjoxLCJ0eXBlIjoxLCJ0b29sX3Jlc3VsdF9ub2RlIjp7ImNvbnRlbnQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy9jb21wb25lbnRzL3ZpZGVvL1ZpZGVvUGxheWVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTU5XHQgICAgICBudW1iZXI6IDYwLFxuICAgMTYwXHQgICAgICBjb2x1bW46IDEwLFxuICAgMTYxXHQgICAgfSxcbiAgIDE2Mlx0ICAgIHBsdWdpbnM6IFtcbiAgIDE2M1x0ICAgICAgYXJ0cGxheWVyUGx1Z2luRGFubXVrdSh7XG4gICAxNjRcdCAgICAgICAgY29udGFpbmVyOiAnLmFydHBsYXllci1hcHAnLFxuICAgMTY1XHQgICAgICAgIHNob3dJbnB1dDogdHJ1ZSxcbiAgIDE2Nlx0ICAgICAgICBvcGVuOiB0cnVlLCAvLyDpu5jorqTlvIDlkK/lvLnluZVcbiAgIDE2N1x0ICAgICAgICAvLyDojrflj5blvLnluZXmlbDmja5cbiAgIDE2OFx0ICAgICAgICBkYW5tdWt1OiBhc3luYyAoKSA9PiB7XG4gICAxNjlcdCAgICAgICAgICB0cnkge1xuICAgMTcwXHQgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGdldEJhcnJhZ2VTZXJ2aWNlKHByb3BzLnZpZGVvSWQpXG4gICAxNzFcdCAgICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHtcbiAgIDE3Mlx0ICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS5tYXAoaXRlbSA9PiAoe1xuICAgMTczXHQgICAgICAgICAgICAgICAgdGV4dDogaXRlbS50ZXh0LFxuICAgMTc0XHQgICAgICAgICAgICAgICAgdGltZTogaXRlbS50aW1lLFxuICAgMTc1XHQgICAgICAgICAgICAgICAgY29sb3I6IGl0ZW0uY29sb3IgfHwgJyNGRkZGRkYnLFxuICAgMTc2XHQgICAgICAgICAgICAgICAgdHlwZTogaXRlbS50eXBlIHx8IDAsXG4gICAxNzdcdCAgICAgICAgICAgICAgICBib3JkZXI6IGZhbHNlLFxuICAgMTc4XHQgICAgICAgICAgICAgIH0pKVxuICAgMTc5XHQgICAgICAgICAgICB9XG4gICAxODBcdCAgICAgICAgICAgIHJldHVybiBbXVxuICAgMTgxXHQgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgIDE4Mlx0ICAgICAgICAgICAgY29uc29sZS5lcnJvcign6I635Y+W5by55bmV5aSx6LSlOicsIGVycm9yKVxuICAgMTgzXHQgICAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IoJ+iOt+WPluW8ueW5leWksei0pScpXG4gICAxODRcdCAgICAgICAgICAgIHJldHVybiBbXVxuICAgMTg1XHQgICAgICAgICAgfVxuICAgMTg2XHQgICAgICAgIH0sXG4gICAxODdcdCAgICAgICAgc3BlZWQ6IDUsXG4gICAxODhcdCAgICAgICAgb3BhY2l0eTogMSxcbiAgIDE4OVx0ICAgICAgICBmb250U2l6ZTogMjUsXG4gICAxOTBcdCAgICAgICAgY29sb3I6ICcjRkZGRkZGJyxcbiAgIDE5MVx0ICAgICAgICBtb2RlOiAwLFxuICAgMTkyXHQgICAgICAgIG1hcmdpbjogWzEwLCAnMjUlJ10sXG4gICAxOTNcdCAgICAgICAgYW50aU92ZXJsYXA6IHRydWUsXG4gICAxOTRcdCAgICAgICAgdXNlV29ya2VyOiB0cnVlLFxuICAgMTk1XHQgICAgICAgIHN5bmNocm9ub3VzUGxheWJhY2s6IGZhbHNlLFxuICAgMTk2XHQgICAgICAgIG1heExlbmd0aDogMTAwLFxuICAgMTk3XHQgICAgICAgIG1pbldpZHRoOiAyMDAsXG4gICAxOThcdCAgICAgICAgbWF4V2lkdGg6IDQwMCxcbiAgIDE5OVx0ICAgICAgICB0aGVtZTogJ2RhcmsnLFxuICAgMjAwXHQgICAgICAgIC8vIOi+k+WFpeahhuiOt+W+l+eEpueCueaXtuaaguWBnOinhumikVxuICAgMjAxXHQgICAgICAgIG9uSW5wdXQ6ICgpID0+IHtcbiAgIDIwMlx0ICAgICAgICAgIGlmIChhcnQudmFsdWUgJiYgIWFydC52YWx1ZS5wYXVzZWQpIHtcbiAgIDIwM1x0ICAgICAgICAgICAgYXJ0LnZhbHVlLnBhdXNlKClcbiAgIDIwNFx0ICAgICAgICAgIH1cbiAgIDIwNVx0ICAgICAgICB9LFxuICAgMjA2XHQgICAgICAgIC8vIOWPkemAgeW8ueW5leWQjuaBouWkjeaSreaUvlxuICAgMjA3XHQgICAgICAgIG9uU2VuZDogKCkgPT4ge1xuICAgMjA4XHQgICAgICAgICAgaWYgKGFydC52YWx1ZSAmJiBhcnQudmFsdWUucGF1c2VkKSB7XG4gICAyMDlcdCAgICAgICAgICAgIGFydC52YWx1ZS5wbGF5KClcbiAgIDIxMFx0ICAgICAgICAgIH1cbiAgIDIxMVx0ICAgICAgICB9LFxuICAgMjEyXHQgICAgICAgIC8vIOWPkemAgeW8ueW5leWJjeeahOWkhOeQhlxuICAgMjEzXHQgICAgICAgIGJlZm9yZUVtaXQ6IGFzeW5jIChkYW5tdSkgPT4ge1xuICAgMjE0XHQgICAgICAgICAgY29uc3QgYmFycmFnZURhdGEgPSB7XG4gICAyMTVcdCAgICAgICAgICAgIHZpZGVvSWQ6IHByb3BzLnZpZGVvSWQsXG4gICAyMTZcdCAgICAgICAgICAgIHRleHQ6IGRhbm11LnRleHQsXG4gICAyMTdcdCAgICAgICAgICAgIHRpbWU6IGFydC52YWx1ZS5jdXJyZW50VGltZSxcbiAgIDIxOFx0ICAgICAgICAgICAgY29sb3I6IGRhbm11LmNvbG9yLFxuICAgMjE5XHQgICAgICAgICAgICB0eXBlOiBkYW5tdS50eXBlXG4gICAyMjBcdCAgICAgICAgICB9XG4gICAyMjFcdCAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHNlbmRCYXJyYWdlU2VydmljZShiYXJyYWdlRGF0YSlcbiAgIDIyMlx0ICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHtcbiAgIDIyM1x0ICAgICAgICAgICAgRWxNZXNzYWdlLnN1Y2Nlc3MoJ+WPkemAgeW8ueW5leaIkOWKnycpXG4gICAyMjRcdCAgICAgICAgICAgIC8vIOWPkemAgeaIkOWKn+WQjueri+WNs+WwhuaWsOW8ueW5lea3u+WKoOWIsOaSreaUvuWZqFxuICAgMjI1XHQgICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgMjI2XHQgICAgICAgICAgfVxuICAgMjI3XHQgICAgICAgICAgRWxNZXNzYWdlLmVycm9yKHJlc3BvbnNlLm1lc3NhZ2UgfHwgJ+WPkemAgeW8ueW5leWksei0pScpXG4gICAyMjhcdCAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgIDIyOVx0ICAgICAgICB9XG4gICAyMzBcdCAgICAgIH0pXG4gICAyMzFcdCAgICBdXG4gICAyMzJcdCAgfSlcbiAgIDIzM1x0XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzX2Vycm9yIjpmYWxzZSwicmVxdWVzdF9pZCI6IiIsInRvb2xfdXNlX2lkIjoidG9vbHVfMDFQYm93RHVpWmltMTRKVFhlblFkZk5OIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV0sInJlc3BvbnNlX3RleHQiOiLnjrDlnKjvvIzorqnmiJHku6zmt7vliqDkuIDkuKrlvLnluZXlvIDlhbPmjInpkq7liLDmkq3mlL7lmajmjqfliLbmoI/vvIzku6Xkvr/nlKjmiLflj6/ku6Xmlrnkvr/lnLDlvIDlkK/miJblhbPpl63lvLnluZXvvJpcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsic3RhdHVzIjoic3VjY2VzcyIsInJlcXVlc3RfaWQiOiIzNjc1NGY1Ni1kNmNmLTQyNzUtOThjOC1lZTUyZjJkZjVjYzQiLCJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJzdHJ1Y3R1cmVkX291dHB1dF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjUsImNvbnRlbnQiOiIiLCJ0b29sX3VzZSI6eyJ0b29sX3VzZV9pZCI6InRvb2x1XzAxMm1LQmhEVUVGSlVXeGt1NkV0R1plbyIsInRvb2xfbmFtZSI6InN0ci1yZXBsYWNlLWVkaXRvciIsImlucHV0X2pzb24iOiJ7XCJjb21tYW5kXCI6IFwic3RyX3JlcGxhY2VcIiwgXCJwYXRoXCI6IFwic3JjL2NvbXBvbmVudHMvdmlkZW8vVmlkZW9QbGF5ZXIudnVlXCIsIFwic3RyX3JlcGxhY2VfZW50cmllc1wiOiBbe1wib2xkX3N0clwiOiBcIiAgLy8gXFx1NzZkMVxcdTU0MmNcXHU2NGFkXFx1NjUzZVxcdTU2NjhcXHU0ZThiXFx1NGVmNlxcbiAgYXJ0LnZhbHVlLm9uKCdyZWFkeScsICgpID0+IHtcXG4gICAgY29uc29sZS5sb2coJ1xcdTg5YzZcXHU5ODkxXFx1NjRhZFxcdTY1M2VcXHU1NjY4XFx1NWRmMlxcdTVjMzFcXHU3ZWVhJylcXG4gIH0pXCIsIFwibmV3X3N0clwiOiBcIiAgLy8gXFx1NzZkMVxcdTU0MmNcXHU2NGFkXFx1NjUzZVxcdTU2NjhcXHU0ZThiXFx1NGVmNlxcbiAgYXJ0LnZhbHVlLm9uKCdyZWFkeScsICgpID0+IHtcXG4gICAgY29uc29sZS5sb2coJ1xcdTg5YzZcXHU5ODkxXFx1NjRhZFxcdTY1M2VcXHU1NjY4XFx1NWRmMlxcdTVjMzFcXHU3ZWVhJylcXG4gICAgXFxuICAgIC8vIFxcdTc4NmVcXHU0ZmRkXFx1NWYzOVxcdTVlNTVcXHU3Y2ZiXFx1N2VkZlxcdTVkZjJcXHU1ZjAwXFx1NTQyZlxcbiAgICBjb25zdCBkYW5tdWt1ID0gYXJ0LnZhbHVlLnBsdWdpbnMuYXJ0cGxheWVyUGx1Z2luRGFubXVrdVxcbiAgICBpZiAoZGFubXVrdSAmJiAhZGFubXVrdS5pc09wZW4pIHtcXG4gICAgICBkYW5tdWt1LnNob3coKVxcbiAgICAgIGNvbnNvbGUubG9nKCdcXHU1ZjM5XFx1NWU1NVxcdTdjZmJcXHU3ZWRmXFx1NWRmMlxcdTVmMDBcXHU1NDJmJylcXG4gICAgfVxcbiAgfSlcIiwgXCJvbGRfc3RyX3N0YXJ0X2xpbmVfbnVtYmVyXCI6IDIzMywgXCJvbGRfc3RyX2VuZF9saW5lX251bWJlclwiOiAyMzZ9XX0ifX0seyJpZCI6MCwidHlwZSI6MCwiY29udGVudCI6IuacgOWQju+8jOiuqeaIkeS7rOa3u+WKoOS4gOS4quWIneWni+WMluW8ueW5leezu+e7n+eahOS7o+egge+8jOehruS/neW8ueW5leezu+e7n+WcqOaSreaUvuWZqOWwsee7quWQjueri+WNs+W8gOWQr++8mlxuIn0seyJpZCI6MiwidHlwZSI6MiwiY29udGVudCI6IiJ9LHsiaWQiOjMsInR5cGUiOjMsImNvbnRlbnQiOiIifV0sInNlZW5fc3RhdGUiOiJzZWVuIiwic3RydWN0dXJlZF9yZXF1ZXN0X25vZGVzIjpbeyJpZCI6MSwidHlwZSI6MSwidG9vbF9yZXN1bHRfbm9kZSI6eyJjb250ZW50IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDEwOVx0ICAgIGxhbmc6ICd6aC1jbicsXG4gICAxMTBcdCAgICBtb3JlVmlkZW9BdHRyOiB7XG4gICAxMTFcdCAgICAgIGNyb3NzT3JpZ2luOiAnYW5vbnltb3VzJyxcbiAgIDExMlx0ICAgIH0sXG4gICAxMTNcdCAgICBjb250cm9sczogW1xuICAgMTE0XHQgICAgICB7XG4gICAxMTVcdCAgICAgICAgcG9zaXRpb246ICdyaWdodCcsXG4gICAxMTZcdCAgICAgICAgaHRtbDogJ+W8ueW5lScsXG4gICAxMTdcdCAgICAgICAgdG9vbHRpcDogJ+W8gOWQry/lhbPpl63lvLnluZUnLFxuICAgMTE4XHQgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAxMTlcdCAgICAgICAgICAvLyDliIfmjaLlvLnluZXmmL7npLrnirbmgIFcbiAgIDEyMFx0ICAgICAgICAgIGNvbnN0IGRhbm11a3UgPSBhcnQudmFsdWUucGx1Z2lucy5hcnRwbGF5ZXJQbHVnaW5EYW5tdWt1XG4gICAxMjFcdCAgICAgICAgICBpZiAoZGFubXVrdSkge1xuICAgMTIyXHQgICAgICAgICAgICBkYW5tdWt1LnRvZ2dsZSgpXG4gICAxMjNcdCAgICAgICAgICAgIEVsTWVzc2FnZS5pbmZvKGRhbm11a3UuaXNPcGVuID8gJ+W8ueW5leW3suW8gOWQrycgOiAn5by55bmV5bey5YWz6ZetJylcbiAgIDEyNFx0ICAgICAgICAgIH1cbiAgIDEyNVx0ICAgICAgICB9LFxuICAgMTI2XHQgICAgICB9LFxuICAgMTI3XHQgICAgICB7XG4gICAxMjhcdCAgICAgICAgcG9zaXRpb246ICdyaWdodCcsXG4gICAxMjlcdCAgICAgICAgaHRtbDogJ+eUu+S4reeUuycsXG4gICAxMzBcdCAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgIDEzMVx0ICAgICAgICAgIGFydC52YWx1ZS5waXAgPSAhYXJ0LnZhbHVlLnBpcFxuICAgMTMyXHQgICAgICAgIH0sXG4gICAxMzNcdCAgICAgIH0sXG4gICAxMzRcdCAgICAgIHtcbiAgIDEzNVx0ICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0JyxcbiAgIDEzNlx0ICAgICAgICBodG1sOiBgPGRpdiBjbGFzcz1cIndpZGUtc2NyZWVuLWJ0blwiIHRpdGxlPVwi5a695bGP5qih5byPXCI+XG4gICAxMzdcdCAgICAgICAgICA8c3ZnIGNsYXNzPVwid2lkZS1zY3JlZW4taWNvblwiIHZpZXdCb3g9XCIwIDAgMTAyNCAxMDI0XCIgdmVyc2lvbj1cIjEuMVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjIwMFwiIGhlaWdodD1cIjIwMFwiPlxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxM0pySmZ6SEp6dXNpTVRiWGttdVVobSJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5pyA5ZCO77yM6K6p5oiR5Lus5re75Yqg5LiA5Liq5Yid5aeL5YyW5by55bmV57O757uf55qE5Luj56CB77yM56Gu5L+d5by55bmV57O757uf5Zyo5pKt5pS+5Zmo5bCx57uq5ZCO56uL5Y2z5byA5ZCv77yaXG4iLCJ3b3Jrc3BhY2VfZmlsZV9jaHVua3MiOltdfSx7InN0YXR1cyI6InN1Y2Nlc3MiLCJyZXF1ZXN0X2lkIjoiMTE3ZjE0YWYtMTFmYy00MTNkLTllM2MtMTQ4ZDE4NmEzNTMzIiwicmVxdWVzdF9tZXNzYWdlIjoiIiwic3RydWN0dXJlZF9vdXRwdXRfbm9kZXMiOlt7ImlkIjowLCJ0eXBlIjowLCJjb250ZW50Ijoi5oiR5bey57uP5oiQ5Yqf5L+u5pS55LqG5Luj56CB77yM56Gu5L+dIEFydFBsYXllciDmkq3mlL7lmajnmoTlvLnluZXns7vnu5/mraPluLjlvIDlkK/jgILku6XkuIvmmK/miJHmiYDlgZrnmoTkv67mlLnvvJpcblxuIyMjIDEuIOiuvue9ruW8ueW5leezu+e7n+m7mOiupOW8gOWQr1xu5ZyoIGBhcnRwbGF5ZXJQbHVnaW5EYW5tdWt1YCDmj5Lku7bphY3nva7kuK3vvIzmt7vliqDkuoYgYG9wZW46IHRydWVgIOWPguaVsO+8jOehruS/neW8ueW5leezu+e7n+m7mOiupOW8gOWQr+OAglxuXG5gYGBqYXZhc2NyaXB0XG5hcnRwbGF5ZXJQbHVnaW5EYW5tdWt1KHtcbiAgY29udGFpbmVyOiAnLmFydHBsYXllci1hcHAnLFxuICBzaG93SW5wdXQ6IHRydWUsXG4gIG9wZW46IHRydWUsIC8vIOm7mOiupOW8gOWQr+W8ueW5lVxuICAvLyDlhbbku5bphY3nva4uLi5cbn0pXG5gYGBcblxuIyMjIDIuIOa3u+WKoOW8ueW5leW8gOWFs+aMiemSrlxu5Zyo5pKt5pS+5Zmo5o6n5Yi25qCP5Lit5re75Yqg5LqG5LiA5Liq5by55bmV5byA5YWz5oyJ6ZKu77yM55So5oi35Y+v5Lul6YCa6L+H54K55Ye76K+l5oyJ6ZKu5byA5ZCv5oiW5YWz6Zet5by55bmV77yaXG5cbmBgYGphdmFzY3JpcHRcbntcbiAgcG9zaXRpb246ICdyaWdodCcsXG4gIGh0bWw6ICflvLnluZUnLFxuICB0b29sdGlwOiAn5byA5ZCvL+WFs+mXreW8ueW5lScsXG4gIGNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgLy8g5YiH5o2i5by55bmV5pi+56S654q25oCBXG4gICAgY29uc3QgZGFubXVrdSA9IGFydC52YWx1ZS5wbHVnaW5zLmFydHBsYXllclBsdWdpbkRhbm11a3VcbiAgICBpZiAoZGFubXVrdSkge1xuICAgICAgZGFubXVrdS50b2dnbGUoKVxuICAgICAgRWxNZXNzYWdlLmluZm8oZGFubXVrdS5pc09wZW4gPyAn5by55bmV5bey5byA5ZCvJyA6ICflvLnluZXlt7LlhbPpl60nKVxuICAgIH1cbiAgfSxcbn1cbmBgYFxuXG4jIyMgMy4g56Gu5L+d5pKt5pS+5Zmo5bCx57uq5ZCO5by55bmV57O757uf5byA5ZCvXG7lnKjmkq3mlL7lmajnmoQgYHJlYWR5YCDkuovku7blpITnkIblh73mlbDkuK3vvIzmt7vliqDkuobku6PnoIHnoa7kv53lvLnluZXns7vnu5/lnKjmkq3mlL7lmajlsLHnu6rlkI7nq4vljbPlvIDlkK/vvJpcblxuYGBgamF2YXNjcmlwdFxuYXJ0LnZhbHVlLm9uKCdyZWFkeScsICgpID0+IHtcbiAgY29uc29sZS5sb2coJ+inhumikeaSreaUvuWZqOW3suWwsee7qicpXG4gIFxuICAvLyDnoa7kv53lvLnluZXns7vnu5/lt7LlvIDlkK9cbiAgY29uc3QgZGFubXVrdSA9IGFydC52YWx1ZS5wbHVnaW5zLmFydHBsYXllclBsdWdpbkRhbm11a3VcbiAgaWYgKGRhbm11a3UgJiYgIWRhbm11a3UuaXNPcGVuKSB7XG4gICAgZGFubXVrdS5zaG93KClcbiAgICBjb25zb2xlLmxvZygn5by55bmV57O757uf5bey5byA5ZCvJylcbiAgfVxufSlcbmBgYFxuXG4jIyMg546w5pyJ5Yqf6IO95Zue6aG+XG7mkq3mlL7lmajlt7Lnu4/lrp7njrDkuobku6XkuIvlvLnluZXnm7jlhbPlip/og73vvJpcblxuMS4gKirlvLnluZXojrflj5YqKu+8muS7juacjeWKoeWZqOiOt+WPluinhumikeeahOW8ueW5leaVsOaNrlxuMi4gKirlvLnluZXlj5HpgIEqKu+8mueUqOaIt+WPr+S7peWPkemAgeW8ueW5le+8jOW5tuS/neWtmOWIsOacjeWKoeWZqFxuMy4gKirlvLnluZXmmL7npLoqKu+8muWcqOinhumikeS4iuaYvuekuuW8ueW5lVxuNC4gKirlvLnluZXmjqfliLYqKu+8mueUqOaIt+WPr+S7peW8gOWQr+aIluWFs+mXreW8ueW5lVxuNS4gKirlvLnluZXmoLflvI8qKu+8muiuvue9ruS6huW8ueW5leeahOminOiJsuOAgeWkp+Wwj+OAgemAn+W6puetieagt+W8j1xuNi4gKirlvLnluZXkuqTkupIqKu+8mui+k+WFpeahhuiOt+W+l+eEpueCueaXtuaaguWBnOinhumike+8jOWPkemAgeW8ueW5leWQjuaBouWkjeaSreaUvlxuXG7ov5nkupvkv67mlLnnoa7kv53kuoblvLnluZXns7vnu5/lnKjmkq3mlL7lmajkuK3mraPluLjlvIDlkK/lkozlt6XkvZzjgILnlKjmiLfnjrDlnKjlj6/ku6XnnIvliLDlvLnluZXvvIzlj5HpgIHlvLnluZXvvIzku6Xlj4rpgJrov4fmjqfliLbmoI/kuIrnmoTmjInpkq7lvIDlkK/miJblhbPpl63lvLnluZXmmL7npLrjgIJcbiJ9LHsiaWQiOjIsInR5cGUiOjIsImNvbnRlbnQiOiIifSx7ImlkIjozLCJ0eXBlIjozLCJjb250ZW50IjoiIn1dLCJzZWVuX3N0YXRlIjoic2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjEsInRvb2xfcmVzdWx0X25vZGUiOnsiY29udGVudCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL2NvbXBvbmVudHMvdmlkZW8vVmlkZW9QbGF5ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAyNDNcdCAgICAgIH0pXG4gICAyNDRcdCAgICBdXG4gICAyNDVcdCAgfSlcbiAgIDI0Nlx0XG4gICAyNDdcdCAgLy8g55uR5ZCs5pKt5pS+5Zmo5LqL5Lu2XG4gICAyNDhcdCAgYXJ0LnZhbHVlLm9uKCdyZWFkeScsICgpID0+IHtcbiAgIDI0OVx0ICAgIGNvbnNvbGUubG9nKCfop4bpopHmkq3mlL7lmajlt7LlsLHnu6onKVxuICAgMjUwXHRcbiAgIDI1MVx0ICAgIC8vIOehruS/neW8ueW5leezu+e7n+W3suW8gOWQr1xuICAgMjUyXHQgICAgY29uc3QgZGFubXVrdSA9IGFydC52YWx1ZS5wbHVnaW5zLmFydHBsYXllclBsdWdpbkRhbm11a3VcbiAgIDI1M1x0ICAgIGlmIChkYW5tdWt1ICYmICFkYW5tdWt1LmlzT3Blbikge1xuICAgMjU0XHQgICAgICBkYW5tdWt1LnNob3coKVxuICAgMjU1XHQgICAgICBjb25zb2xlLmxvZygn5by55bmV57O757uf5bey5byA5ZCvJylcbiAgIDI1Nlx0ICAgIH1cbiAgIDI1N1x0ICB9KVxuICAgMjU4XHRcbiAgIDI1OVx0ICBhcnQudmFsdWUub24oJ3BsYXknLCAoKSA9PiB7XG4gICAyNjBcdCAgICBjb25zb2xlLmxvZygn6KeG6aKR5byA5aeL5pKt5pS+JylcbiAgIDI2MVx0ICB9KVxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc19lcnJvciI6ZmFsc2UsInJlcXVlc3RfaWQiOiIiLCJ0b29sX3VzZV9pZCI6InRvb2x1XzAxMm1LQmhEVUVGSlVXeGt1NkV0R1plbyJ9fSx7ImlkIjoyLCJ0eXBlIjo0LCJpZGVfc3RhdGVfbm9kZSI6eyJ3b3Jrc3BhY2VGb2xkZXJzIjpbeyJyZXBvc2l0b3J5Um9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSIsImZvbGRlclJvb3QiOiJEOi9FeHBsb2l0YXRpb24vSmF2YVdlYi9LSC9sb3ZlLXNwYWNlL0xvdmUtU3BhY2UtVWkifV0sIndvcmtzcGFjZUZvbGRlcnNVbmNoYW5nZWQiOmZhbHNlfX1dLCJyZXNwb25zZV90ZXh0Ijoi5oiR5bey57uP5oiQ5Yqf5L+u5pS55LqG5Luj56CB77yM56Gu5L+dIEFydFBsYXllciDmkq3mlL7lmajnmoTlvLnluZXns7vnu5/mraPluLjlvIDlkK/jgILku6XkuIvmmK/miJHmiYDlgZrnmoTkv67mlLnvvJpcblxuIyMjIDEuIOiuvue9ruW8ueW5leezu+e7n+m7mOiupOW8gOWQr1xu5ZyoIGBhcnRwbGF5ZXJQbHVnaW5EYW5tdWt1YCDmj5Lku7bphY3nva7kuK3vvIzmt7vliqDkuoYgYG9wZW46IHRydWVgIOWPguaVsO+8jOehruS/neW8ueW5leezu+e7n+m7mOiupOW8gOWQr+OAglxuXG5gYGBqYXZhc2NyaXB0XG5hcnRwbGF5ZXJQbHVnaW5EYW5tdWt1KHtcbiAgY29udGFpbmVyOiAnLmFydHBsYXllci1hcHAnLFxuICBzaG93SW5wdXQ6IHRydWUsXG4gIG9wZW46IHRydWUsIC8vIOm7mOiupOW8gOWQr+W8ueW5lVxuICAvLyDlhbbku5bphY3nva4uLi5cbn0pXG5gYGBcblxuIyMjIDIuIOa3u+WKoOW8ueW5leW8gOWFs+aMiemSrlxu5Zyo5pKt5pS+5Zmo5o6n5Yi25qCP5Lit5re75Yqg5LqG5LiA5Liq5by55bmV5byA5YWz5oyJ6ZKu77yM55So5oi35Y+v5Lul6YCa6L+H54K55Ye76K+l5oyJ6ZKu5byA5ZCv5oiW5YWz6Zet5by55bmV77yaXG5cbmBgYGphdmFzY3JpcHRcbntcbiAgcG9zaXRpb246ICdyaWdodCcsXG4gIGh0bWw6ICflvLnluZUnLFxuICB0b29sdGlwOiAn5byA5ZCvL+WFs+mXreW8ueW5lScsXG4gIGNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgLy8g5YiH5o2i5by55bmV5pi+56S654q25oCBXG4gICAgY29uc3QgZGFubXVrdSA9IGFydC52YWx1ZS5wbHVnaW5zLmFydHBsYXllclBsdWdpbkRhbm11a3VcbiAgICBpZiAoZGFubXVrdSkge1xuICAgICAgZGFubXVrdS50b2dnbGUoKVxuICAgICAgRWxNZXNzYWdlLmluZm8oZGFubXVrdS5pc09wZW4gPyAn5by55bmV5bey5byA5ZCvJyA6ICflvLnluZXlt7LlhbPpl60nKVxuICAgIH1cbiAgfSxcbn1cbmBgYFxuXG4jIyMgMy4g56Gu5L+d5pKt5pS+5Zmo5bCx57uq5ZCO5by55bmV57O757uf5byA5ZCvXG7lnKjmkq3mlL7lmajnmoQgYHJlYWR5YCDkuovku7blpITnkIblh73mlbDkuK3vvIzmt7vliqDkuobku6PnoIHnoa7kv53lvLnluZXns7vnu5/lnKjmkq3mlL7lmajlsLHnu6rlkI7nq4vljbPlvIDlkK/vvJpcblxuYGBgamF2YXNjcmlwdFxuYXJ0LnZhbHVlLm9uKCdyZWFkeScsICgpID0+IHtcbiAgY29uc29sZS5sb2coJ+inhumikeaSreaUvuWZqOW3suWwsee7qicpXG4gIFxuICAvLyDnoa7kv53lvLnluZXns7vnu5/lt7LlvIDlkK9cbiAgY29uc3QgZGFubXVrdSA9IGFydC52YWx1ZS5wbHVnaW5zLmFydHBsYXllclBsdWdpbkRhbm11a3VcbiAgaWYgKGRhbm11a3UgJiYgIWRhbm11a3UuaXNPcGVuKSB7XG4gICAgZGFubXVrdS5zaG93KClcbiAgICBjb25zb2xlLmxvZygn5by55bmV57O757uf5bey5byA5ZCvJylcbiAgfVxufSlcbmBgYFxuXG4jIyMg546w5pyJ5Yqf6IO95Zue6aG+XG7mkq3mlL7lmajlt7Lnu4/lrp7njrDkuobku6XkuIvlvLnluZXnm7jlhbPlip/og73vvJpcblxuMS4gKirlvLnluZXojrflj5YqKu+8muS7juacjeWKoeWZqOiOt+WPluinhumikeeahOW8ueW5leaVsOaNrlxuMi4gKirlvLnluZXlj5HpgIEqKu+8mueUqOaIt+WPr+S7peWPkemAgeW8ueW5le+8jOW5tuS/neWtmOWIsOacjeWKoeWZqFxuMy4gKirlvLnluZXmmL7npLoqKu+8muWcqOinhumikeS4iuaYvuekuuW8ueW5lVxuNC4gKirlvLnluZXmjqfliLYqKu+8mueUqOaIt+WPr+S7peW8gOWQr+aIluWFs+mXreW8ueW5lVxuNS4gKirlvLnluZXmoLflvI8qKu+8muiuvue9ruS6huW8ueW5leeahOminOiJsuOAgeWkp+Wwj+OAgemAn+W6puetieagt+W8j1xuNi4gKirlvLnluZXkuqTkupIqKu+8mui+k+WFpeahhuiOt+W+l+eEpueCueaXtuaaguWBnOinhumike+8jOWPkemAgeW8ueW5leWQjuaBouWkjeaSreaUvlxuXG7ov5nkupvkv67mlLnnoa7kv53kuoblvLnluZXns7vnu5/lnKjmkq3mlL7lmajkuK3mraPluLjlvIDlkK/lkozlt6XkvZzjgILnlKjmiLfnjrDlnKjlj6/ku6XnnIvliLDlvLnluZXvvIzlj5HpgIHlvLnluZXvvIzku6Xlj4rpgJrov4fmjqfliLbmoI/kuIrnmoTmjInpkq7lvIDlkK/miJblhbPpl63lvLnluZXmmL7npLrjgIJcbiIsIndvcmtzcGFjZV9maWxlX2NodW5rcyI6W119LHsicmVxdWVzdF9pZCI6IjdiYThiYjYxLTkzYmUtNDJhMC1iMjMyLWNiMDYzMDAwYjlmMiIsInV1aWQiOiJkM2IzZGVkYi1mODJmLTQ0NzUtOWNjNy05MTI5MGM5NWRjNmQiLCJjaGF0SXRlbVR5cGUiOiJhZ2VudGljLWNoZWNrcG9pbnQtZGVsaW1pdGVyIiwic3RhdHVzIjoic3VjY2VzcyIsImZyb21UaW1lc3RhbXAiOjE3NDQ4NzczMDY0ODQsInRvVGltZXN0YW1wIjoxNzQ0ODgyOTk5NzI4LCJzZWVuX3N0YXRlIjoic2VlbiJ9LHsicmVxdWVzdF9pZCI6IjU1MWM5ZjI5LTg4NjUtNDQ1Yi1iYmUwLTZkOWZlNGYzYjUwZCIsInV1aWQiOiIxNjRiNzU3YS0wMDc2LTQ3ODctYjQxMi02MzEyZDEzMGRhZmMiLCJjaGF0SXRlbVR5cGUiOiJhZ2VudGljLWNoZWNrcG9pbnQtZGVsaW1pdGVyIiwic3RhdHVzIjoic3VjY2VzcyIsImZyb21UaW1lc3RhbXAiOjE3NDQ4ODI5OTk3MjgsInRvVGltZXN0YW1wIjoxNzQ0ODgzMDI1NjM5LCJzZWVuX3N0YXRlIjoic2VlbiJ9LHsicmVxdWVzdF9pZCI6IjYyNWZiMDk2LWUyYWYtNDJhOC04M2E0LWZiYzc0ZmEyNDYzNyIsInV1aWQiOiJlNjQ4NGE0OC0wMjFmLTQ3ZTQtOTU0MS1hOWQ0ZTRlZTJjZDMiLCJjaGF0SXRlbVR5cGUiOiJhZ2VudGljLWNoZWNrcG9pbnQtZGVsaW1pdGVyIiwic3RhdHVzIjoic3VjY2VzcyIsImZyb21UaW1lc3RhbXAiOjE3NDQ4ODMwMjU2MzksInRvVGltZXN0YW1wIjoxNzQ0ODgzMDgwNTQyLCJyZXZlcnRUYXJnZXQiOnsidXVpZCI6ImQzYjNkZWRiLWY4MmYtNDQ3NS05Y2M3LTkxMjkwYzk1ZGM2ZCJ9LCJzZWVuX3N0YXRlIjoic2VlbiJ9LHsicmVxdWVzdF9pZCI6ImY2MDk4MDIwLWNiNzEtNDViOC05NjllLThlOTIzNmVmZDZlYyIsInV1aWQiOiJlODM4MWQxMy03MjA2LTQ0NzktODNiYS0wZDFmMTlhYjFiMjIiLCJjaGF0SXRlbVR5cGUiOiJhZ2VudGljLWNoZWNrcG9pbnQtZGVsaW1pdGVyIiwic3RhdHVzIjoic3VjY2VzcyIsImZyb21UaW1lc3RhbXAiOjE3NDQ4ODMwODA1NDIsInRvVGltZXN0YW1wIjoxNzQ0ODgzMDk3MzQwLCJzZWVuX3N0YXRlIjoic2VlbiJ9LHsicmVxdWVzdF9pZCI6ImVhOTRmNTQyLTdiODItNGEwMC05ZmNiLWY0YTE2ODY5Y2Y1YyIsInN0YXR1cyI6ImNhbmNlbGxlZCIsImNoYXRJdGVtVHlwZSI6ImFnZW50aWMtdHVybi1kZWxpbWl0ZXIifSx7InN0YXR1cyI6ImZhaWxlZCIsInJlcXVlc3RfbWVzc2FnZSI6IuS4jemcgOimgee7meaSreaUvuWZqOiHquWumuS5ieWGheWuue+8jOeOsOWcqOaSreaUvuWZqOaXoOazleeci+WIsOWumOaWueeahOW8ueW5lee7hOS7tu+8jOivt+ajgOafpemXrumimOW5tuS/ruWkjSIsInJpY2hfdGV4dF9qc29uX3JlcHIiOnsidHlwZSI6ImRvYyIsImNvbnRlbnQiOlt7InR5cGUiOiJwYXJhZ3JhcGgiLCJjb250ZW50IjpbeyJ0eXBlIjoidGV4dCIsInRleHQiOiLkuI3pnIDopoHnu5nmkq3mlL7lmajoh6rlrprkuYnlhoXlrrnvvIznjrDlnKjmkq3mlL7lmajml6Dms5XnnIvliLDlrpjmlrnnmoTlvLnluZXnu4Tku7bvvIzor7fmo4Dmn6Xpl67popjlubbkv67lpI0ifV19XX0sIm1lbnRpb25lZF9pdGVtcyI6W10sInN0cnVjdHVyZWRfb3V0cHV0X25vZGVzIjpbXSwic2Vlbl9zdGF0ZSI6InVuc2VlbiIsInN0cnVjdHVyZWRfcmVxdWVzdF9ub2RlcyI6W3siaWQiOjEsInR5cGUiOjAsInRleHRfbm9kZSI6eyJjb250ZW50Ijoi5LiN6ZyA6KaB57uZ5pKt5pS+5Zmo6Ieq5a6a5LmJ5YaF5a6577yM546w5Zyo5pKt5pS+5Zmo5peg5rOV55yL5Yiw5a6Y5pa555qE5by55bmV57uE5Lu277yM6K+35qOA5p+l6Zeu6aKY5bm25L+u5aSNIn19LHsiaWQiOjIsInR5cGUiOjQsImlkZV9zdGF0ZV9ub2RlIjp7IndvcmtzcGFjZUZvbGRlcnMiOlt7InJlcG9zaXRvcnlSb290IjoiRDovRXhwbG9pdGF0aW9uL0phdmFXZWIvS0gvbG92ZS1zcGFjZS9Mb3ZlLVNwYWNlLVVpIiwiZm9sZGVyUm9vdCI6IkQ6L0V4cGxvaXRhdGlvbi9KYXZhV2ViL0tIL2xvdmUtc3BhY2UvTG92ZS1TcGFjZS1VaSJ9XSwid29ya3NwYWNlRm9sZGVyc1VuY2hhbmdlZCI6ZmFsc2V9fV19XSwiZmVlZGJhY2tTdGF0ZXMiOnsidGVtcC1mZS04NTE1NWRjZS1hZjRmLTQyZTctODc1OS1jNmRlODc5NTZkN2YiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTZmNzgyNWRkLTVjYzQtNGRiYy04MzNkLTljODhkNjM1YjVlMiI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtNDgwMTU0ZGYtYjM3Yi00NTNjLTk1MzAtYzA1NzJkNzQ1ODkxIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1lZDI3ZmJiNi1iZTM3LTQ3OTktYTY1OS0wNDU1OTZlZDdjZjQiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTdmMmE1NmQyLTJjMTUtNDY0Ni05MzQ1LWZmNThjOTBiYjVmYiI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtZjcxNzk4ZDYtZTA2NC00OWM1LTgzYWQtM2U2MjIyMjQ5ODY3Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS0wMzUzNjA4Yi02ZmE0LTQ0NGEtODJlNi01NzVlYzU5YmYwMTIiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTE5ZTRlYzZiLTU3YTItNGE3Ny1hM2NhLWVkMjNjZjkyOGMwYyI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtNGM5MDY4MTMtOTkxNy00YzYzLWE4ZmYtMDdmMzE3ZDNlZDMyIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1lZTJjZTRjMS1mNzk2LTRiMDctYjE4OC0zYzg1MDU1Y2MwNGYiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWIwZWY0YzE2LTY2MTctNGFiYi04YjljLWExNzI3YzA2ZmZkYiI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMmQxYmVhOGEtOWI1MC00ZWFlLTk2NjctMTA4MzBiZmIzYjE5Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS00NTJiNTQwYi02MzNkLTRlYTgtOTI1Zi0xZmY1NzMxYWU2OTQiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWFkN2IzNjRkLTZkN2UtNDJlYi04NzFhLTRhOGRhMTRhNzFjOSI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtNDAxMTRiYWUtMWJiYy00YmUwLTg5MzMtYmE4N2I2OGQxZmE1Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS0zZmEwMWI0YS0wNGY1LTQyNWItYWYwMC1hZDgxZmQ4MzEwMTUiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWY1MTZiMzNmLWU5ZTQtNGNmOC1iNWI1LTM4ZjgzMmNmNDAxNCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMzBiMDRiZmEtYTM4Ni00MjNlLWE0NzEtZjc5NzAyZjQ5YzJkIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS04N2UxMGY3ZS1mYTIxLTRhN2QtYWI2MS0xMjNmMGQ3ZmRiZmEiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTJjZTIxNzAyLTA1MjMtNDQwZi05MDE4LWM5MzZiZGU4NjVlYyI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtYmJjYTc2MWEtY2Q4Mi00ZGQ1LTk2NzMtNWU2ZGYzYzljMjczIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1lNmEyNmQzYi1mZTAyLTRlMmUtOGIxMS0zMjFhNmVjYjE2ZTAiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTA2ZjY2MjgyLWU4M2MtNDNiYy05MGM5LTJiODM3MWE5YzkzYyI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMmY4NDIyNWItNGVmZS00ZWJiLTg3ZmUtOGQ0ZjQxODY5ODY4Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1jYTk3ZTY4Yi01ODU4LTRjOWUtOWYyYi1jYjNlNzJlZTUzYjgiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLThiYTVjNzFhLTg4Y2YtNDUzNS1hZGRhLTE2MjhmZjMwZDMyNSI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtYjhmMWU2NzktYjE4My00ZDVkLTg1NzctZjNhOThkMjY4NTFlIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1mNzkxYzdhMi1lMzIxLTQwZGMtODA5Yi1iZTM1NmU4N2VlNDkiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTQ0N2ZjNDM4LWRhZDQtNGQwOC1hNjFmLWQxZDc5ZjI0ZmMxNCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMThjOWE3YWItYmYyMi00ZDQ5LTgwMGMtZmRmZmExZGIzYzEwIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS0xMTkzNTJkYS1mYmM2LTRlMWQtYTFlYy0zMTA4NjIyNTJhYTgiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTQ0NGJlNTdjLTBkMDQtNGFmMy04Y2NlLWU4NTZmMDdjNWIzYiI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMjliODFlMGQtOTJjZS00YmFmLWFjMzUtNzQ0ODA4N2Q4ZDg2Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS03MWQ1N2VhMC1kZTRjLTQ0ZWUtYjY4Yy1mMDVkMTExMjQwYmMiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWQ2NDU4ODBlLTgxMDYtNDc3Yi04YzczLWYxZmRhMDVmMTMxMiI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtNzgxNTk4ZDgtYjk5NS00MmNiLTk4ZGYtMThhZWY0YWZjNDRiIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1kNTY4ZDYwMi1kMDUwLTQ0ZmYtYjg4YS0yYzM4NTI0NTgwNGMiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTAzYzYxMjZhLTg3NmUtNGM4NS1iYTA5LTgzMDc5YzYxODE2MCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMWVkNGM2NjMtOGFiZS00MGVkLWEyYTctMzU1NzFkNjgwZTYyIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS0wYmRkMjMxNC1jYmMyLTRlYzctYmU1Yi0zOGZhY2UzOTY1ODEiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWFjY2QxNzFmLWFmMjMtNGYxMi1iODI5LWYzOGU1YzcxNDliYyI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtNjJmOGZiMzktOWVkMC00ZWY2LTk3MmEtYWM5NzExMDQ0NDM5Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1mNGY1YzVlNC00M2I5LTRkZjUtOTRjOS04NjA3MDEyNTEyYjAiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWRjZDhiODYxLTViNjItNDkzZC1iMmQzLTE1NDRkYzRhNGZmMyI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMGQ0YmRmOGItNDM0Ny00NjMzLWE5ODctMzcwMDVlMzE1NzQ0Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS0zODQzNzJjNi1lMDNjLTQ3OTEtYTdiZi05ZDYyODdlYTYwMzUiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTFmNGEzMmYxLTkzMzQtNGZjYS04MDIxLTdjMjNlZWMyOGEwZiI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMDdjNjEzMzQtZWJjNy00YTI0LWFkNDItNzUwNTdkZjA0YjA0Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS02NjdlOGQ1MC02ZWY2LTQ3OGQtYWY2Yi03ZWI3N2MyZTMzMmYiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTBhZTI5MzlhLTA4NjQtNDM5NC04ZDVhLTgzMTNjNGI3NmNiNSI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMTRjYzExMzktZDk0OS00MjQ3LTk5NTAtMzQwMzM4MjY0NzI3Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS0xMjYxYmFhMy01YjYyLTQxOTQtOTYzMC0zMDdlOTA2ZWY2MjgiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWM4MDBmMmNhLTMwMTUtNGI1ZS1hYjI1LTM1YjhmNjQzYTFiMyI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtY2U0NzEyYjMtMDE1OS00MDVhLThjNWUtYjJhNThlYjZlNTUxIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS0wNGYzZTJhYy02YzAzLTRjMGMtOWIxNC01N2E3ZDA2OGJhYmYiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWEyOWRlYmJhLWEwMTUtNDY5MS1hOWRiLWJkYjUyMGI3M2VjZSI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtNDliMzRjZjMtNzBkNS00NTk3LTk2OTctZGZhM2RlZWJkYzhiIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS04MmE2MTJiNS0zMjFkLTQ4N2ItYjM2NC1kNzhkMzk4ZmYwZGMiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTAwNTM5YTgxLWRmMjItNDhiMi04MWIyLTA2YjlmNzhjZWEwMSI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMDEzNDY2OWQtNTNkMy00MThlLWI0YWUtZGUyOGMzYmM2MzU0Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS0xZjNjZGMzZi0xOTY4LTQwZDQtOTFkNS01YTYzMjU4ZTgzNWMiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTkxYTE2MjJkLWQwN2MtNDkyYS04NDQxLWU3NmRmYTVhM2JhMCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtODEyNjQ0NGQtMmU3MS00MTNiLTgxMzYtNTg3OTczYmZjZTVmIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS03ODNkYzc5Yi0xNWIzLTQzNjgtODg3Mi00ZjRmMDdiZGIxYjEiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTQ4MTBjY2JjLTk5YTAtNDMyYi1hYjliLTE1ODdkZTAzYjdkZSI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtZDg1MTc2MzktYjU1Yy00OGNjLThmNGEtNzY0NmIyN2QxNDEwIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1mZDc1YjUzNi03MTVkLTQ0OGItYmUwOC0zMWMxODdiYTRkZWMiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWVlZmVhMzZhLTA2NjYtNGM4OS1hZWIwLTJhZmZlNDU2MWQ1MCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtMTg0MDMwNmMtY2Y1MC00M2NhLWE2YTMtMmE2ZDU3MzZkZjQ2Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1kZjgwOGY3OC0xNjk4LTRmN2UtYmIzNy1iNzQyZjZiMjgzYTAiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTVkYzQ0NWMzLTM3NWQtNDQ4ZS05NjU0LTJiZWNlOWRkNmRkYyI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtYTNmNDY4MDEtMzU3OS00ZjVjLTg1MjktNjIxNjUxNmU4MzAwIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS04ODMzNTdkMS0yNTY3LTQwMjctOTRjMS1hNDY1YzczOTBhOWQiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTkzZWYzZDk1LWJmNWItNGZjMC1hM2VkLTBiMWM5ZDhiMjM0NSI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtM2ExMWVhYjItMTY2Ni00ZjFjLWIyMTEtNGQxMjUzZDljZDY3Ijp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS1jYTk1YjljNy1iZDFiLTQ5NDgtODEwNi1jOWYyOTkzZTlkYTkiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLWY2YTkyMDlmLTk3NzgtNDdhNC1iOTMxLThjMmI4NTA0OTFkOCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn0sInRlbXAtZmUtOTkyYWRjNTEtOWFhOS00ZmY4LTlmNmYtMmE1NGZjMTYwYWJmIjp7InNlbGVjdGVkUmF0aW5nIjowLCJmZWVkYmFja05vdGUiOiIifSwidGVtcC1mZS01MzVjNGM4Mi1jMTBmLTRlNWYtYWQ4NS1kODFmNjY2N2NjOTgiOnsic2VsZWN0ZWRSYXRpbmciOjAsImZlZWRiYWNrTm90ZSI6IiJ9LCJ0ZW1wLWZlLTE5MDdjMjI1LTk4NDgtNGRlNC1hNjdmLTNjMWVmOWRlZDhlOCI6eyJzZWxlY3RlZFJhdGluZyI6MCwiZmVlZGJhY2tOb3RlIjoiIn19LCJ0b29sVXNlU3RhdGVzIjp7IjQ5MGMwM2EzLTc3ZTgtNDhkZC05YTdjLTIxZDM4MDYzYTk2ODt0b29sdV8wMTluRVg2dmJQZzMzV3k3NGlvdEJqZzkiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiSGVyZSBhcmUgdGhlIHJlc3VsdHMgZnJvbSBleGVjdXRpbmcgdGhlIGNvbW1hbmQuXG4gICAgICAgIDxyZXR1cm4tY29kZT5cbiAgICAgICAgMVxuICAgICAgICA8L3JldHVybi1jb2RlPlxuICAgICAgICA8c3Rkb3V0PlxuICAgICAgICBcdTAwMWJbPzkwMDFoXHUwMDFiWz8xMDA0aFx1MDAxYls/MjVsXHUwMDFiWzJKXHUwMDFiW21cdTAwMWJbSFx1MDAxYl0wO+euoeeQhuWRmDogQzpcXFdpbmRvd3NcXFN5c3RlbTMyXFxXaW5kb3dzUG93ZXJTaGVsbFxcdjEuMFxccG93ZXJzaGVsbC5leGVcdTAwMDdcdTAwMWJbPzI1aFx1MDAxYlszODs1OzltR2V0LUNoaWxkSXRlbSA6IOaJvuS4jeWIsOaOpeWPl+WunumZheWPguaVsOKAnEQ6XFxFeHBsb2l0YXRpb25cXEphdmFXZWJcXEtIXFxsb3ZlLXNwYWNlXFxMb3ZlLVNwYWNlLVVp4oCd55qE5L2N572u5b2i5byP5Y+C5pWw44CCXG7miYDlnKjkvY3nva4g6KGMOjEg5a2X56ymOiAxXG4rIGRpciAvcyAvYiBEOlxcRXhwbG9pdGF0aW9uXFxKYXZhV2ViXFxLSFxcbG92ZS1zcGFjZVxcTG92ZS1TcGFjZS1VaVxuKyB+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+XG4gICAgKyBDYXRlZ29yeUluZm8gICAgICAgICAgOiBJbnZhbGlkQXJndW1lbnQ6ICg6KSBbR2V0LUNoaWxkSXRlbV3vvIxQYXJhbWV0ZXJCaW5kaW5nRXhjZXB0aW9uXG4gICAgKyBGdWxseVF1YWxpZmllZEVycm9ySWQgOiBQb3NpdGlvbmFsUGFyYW1ldGVyTm90Rm91bmQsTWljcm9zb2Z0LlBvd2VyU2hlbGwuQ29tbWFuZHMuR2V0Q2hpbGRJdGVtQ29tbWFuZFxuIFxuXHUwMDFiW21cbiAgICAgICAgPC9zdGRvdXQ+XG4gICAgICAgIDxzdGRlcnI+XG4gICAgICAgIFxuICAgICAgICA8L3N0ZGVycj4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCIyODIyYmQyMy02YjFhLTQ3ZGQtYjEyNi01OWQ5OGM1MWY5NzU7dG9vbHVfMDFGa2VuTWFXVnhjejhGdXI5emRxVXpQIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IkhlcmUgYXJlIHRoZSByZXN1bHRzIGZyb20gZXhlY3V0aW5nIHRoZSBjb21tYW5kLlxuICAgICAgICA8cmV0dXJuLWNvZGU+XG4gICAgICAgIDFcbiAgICAgICAgPC9yZXR1cm4tY29kZT5cbiAgICAgICAgPHN0ZG91dD5cbiAgICAgICAgXHUwMDFiWz85MDAxaFx1MDAxYls/MTAwNGhcdTAwMWJbPzI1bFx1MDAxYlsySlx1MDAxYlttXHUwMDFiW0hcdTAwMWJdMDvnrqHnkIblkZg6IEM6XFxXaW5kb3dzXFxTeXN0ZW0zMlxcV2luZG93c1Bvd2VyU2hlbGxcXHYxLjBcXHBvd2Vyc2hlbGwuZXhlXHUwMDA3XHUwMDFiWz8yNWhcdTAwMWJbMzg7NTs5bWRpciA6IOaJvuS4jeWIsOi3r+W+hOKAnEQ6XFxz4oCd77yM5Zug5Li66K+l6Lev5b6E5LiN5a2Y5Zyo44CCXG7miYDlnKjkvY3nva4g6KGMOjEg5a2X56ymOiAxXG4rIGRpciAvcyAvYlxuKyB+fn5+fn5+fn5cbiAgICArIENhdGVnb3J5SW5mbyAgICAgICAgICA6IE9iamVjdE5vdEZvdW5kOiAoRDpcXHM6U3RyaW5nKSBbR2V0LUNoaWxkSXRlbV0sIEl0ZW1Ob3RGb3VuZEV4Y2VwdGlvblxuICAgICsgRnVsbHlRdWFsaWZpZWRFcnJvcklkIDogUGF0aE5vdEZvdW5kLE1pY3Jvc29mdC5Qb3dlclNoZWxsLkNvbW1hbmRzLkdldENoaWxkSXRlbUNvbW1hbmRcbiBcblx1MDAxYlttXG4gICAgICAgIDwvc3Rkb3V0PlxuICAgICAgICA8c3RkZXJyPlxuICAgICAgICBcbiAgICAgICAgPC9zdGRlcnI+IiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiZDdmZGQ4OWUtY2M4Zi00NTQyLWEyMTItMGYzY2Q5MTNkMjNlO3Rvb2x1XzAxOWk5Y0NYTjk1b3FTemU1Y3Q5SHZmbyI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJIZXJlIGFyZSB0aGUgcmVzdWx0cyBmcm9tIGV4ZWN1dGluZyB0aGUgY29tbWFuZC5cbiAgICAgICAgPHJldHVybi1jb2RlPlxuICAgICAgICAwXG4gICAgICAgIDwvcmV0dXJuLWNvZGU+XG4gICAgICAgIDxzdGRvdXQ+XG4gICAgICAgIFx1MDAxYls/OTAwMWhcdTAwMWJbPzEwMDRoXHUwMDFiWz8yNWxcdTAwMWJbMkpcdTAwMWJbbVx1MDAxYltIXHUwMDFiXTA7566h55CG5ZGYOiBDOlxcV2luZG93c1xcU3lzdGVtMzJcXFdpbmRvd3NQb3dlclNoZWxsXFx2MS4wXFxwb3dlcnNoZWxsLmV4ZVx1MDAwN1x1MDAxYls/MjVoXHUwMDFiWz8yNWxcdTAwMWJbMzsxSCAgICDnm67lvZU6IEQ6XFxFeHBsb2l0YXRpb25cXEphdmFXZWJcXEtIXFxsb3ZlLXNwYWNlXFxMb3ZlLVNwYWNlLVVpXHUwMDFiWzY7MUhNb2RlICAgICAgICAgICAgICAgICBMYXN0V3JpdGVUaW1lICAgICAgICAgTGVuZ3RoIE5hbWVcdTAwMWJbNjVYXG4tLS0tICAgICAgICAgICAgICAgICAtLS0tLS0tLS0tLS0tICAgICAgICAgLS0tLS0tIC0tLS1cdTAwMWJbNjVYXG5kLS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEyOjU2ICAgICAgICAgICAgICAgIC5naXRodWJcdTAwMWJbNjJYXG5kLS0tLS0gICAgICAgICAyMDI1LzQvMTYgICAgIDE2OjQ4ICAgICAgICAgICAgICAgIC5pZGVhXHUwMDFiWzY0WFxuZC0tLS0tICAgICAgICAgMjAyNS80LzE2ICAgICAxNjoyMiAgICAgICAgICAgICAgICBub2RlX21vZHVsZXNcdTAwMWJbNTdYXG5kLS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEyOjU2ICAgICAgICAgICAgICAgIHNyY1x1MDAxYls2Nlhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTI6NTYgICAgICAgICAgICAgNDcgLmdpdGlnbm9yZVx1MDAxYls1OVhcblx1MDAxYls/MjVoXHUwMDFiWz8yNWwtYS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEyOjU2ICAgICAgICAgICAgMjg1IGJsaWJsaS12dWUuaW1sXHUwMDFiWzU1WFxuLWEtLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgIDM2MSBpbmRleC5odG1sXHUwMDFiWzU5WFxuLWEtLS0tICAgICAgICAgMjAyNS80LzE2ICAgICAxNjoyMiAgICAgICAgICA2MTY4MSBwYWNrYWdlLWxvY2suanNvblx1MDAxYls1Mlhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xNiAgICAgMTY6MjIgICAgICAgICAgICA3MTIgcGFja2FnZS5qc29uXHUwMDFiWzU3WFxuLWEtLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgMzU4NCBSRUFETUUubWRcdTAwMWJbNjBYXG4tYS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEyOjU2ICAgICAgICAgICAgNTcwIHZpdGUuY29uZmlnLmpzXHUwMDFiWzU1WFx1MDAxYlsyMTsxSFx1MDAxYls/MjVoXG4gICAgICAgIDwvc3Rkb3V0PlxuICAgICAgICA8c3RkZXJyPlxuICAgICAgICBcbiAgICAgICAgPC9zdGRlcnI+IiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiYzhiNDczZmQtM2Y3Ni00MjJlLWJiNWMtZGFjMWJiMTYwNjJlO3Rvb2x1XzAxOXA5dkNFVTk4aW5OblVaUTNZbzZnOCI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJIZXJlIGFyZSB0aGUgcmVzdWx0cyBmcm9tIGV4ZWN1dGluZyB0aGUgY29tbWFuZC5cbiAgICAgICAgPHJldHVybi1jb2RlPlxuICAgICAgICAxXG4gICAgICAgIDwvcmV0dXJuLWNvZGU+XG4gICAgICAgIDxzdGRvdXQ+XG4gICAgICAgIFx1MDAxYls/OTAwMWhcdTAwMWJbPzEwMDRoXHUwMDFiWz8yNWxcdTAwMWJbMkpcdTAwMWJbbVx1MDAxYltIXHUwMDFiXTA7566h55CG5ZGYOiBDOlxcV2luZG93c1xcU3lzdGVtMzJcXFdpbmRvd3NQb3dlclNoZWxsXFx2MS4wXFxwb3dlcnNoZWxsLmV4ZVx1MDAwN1x1MDAxYls/MjVoXHUwMDFiWzM4OzU7OW1kaXIgOiDnrKzkuozkuKrot6/lvoTmrrXkuI3lvpfkuLrpqbHliqjlmajmiJYgVU5DIOWQjeensOOAglxu5Y+C5pWw5ZCNOiBwYXRoMlxu5omA5Zyo5L2N572uIOihjDoxIOWtl+espjogMVxuKyBkaXIgc3JjIC9zXG4rIH5+fn5+fn5+fn5cbiAgICArIENhdGVnb3J5SW5mbyAgICAgICAgICA6IEludmFsaWRBcmd1bWVudDogKEQ6XFxFeHBsb2l0YXRpb24uLi52ZS1TcGFjZS1VaVxcc3JjOlN0cmluZykgW0dldC1DaGlsZEl0ZW1d77yMQXJndW1lbnRFeGNlXG4gICAgcHRpb25cbiAgICArIEZ1bGx5UXVhbGlmaWVkRXJyb3JJZCA6IERpckFyZ3VtZW50RXJyb3IsTWljcm9zb2Z0LlBvd2VyU2hlbGwuQ29tbWFuZHMuR2V0Q2hpbGRJdGVtQ29tbWFuZFxuIFxuXHUwMDFiW21cbiAgICAgICAgPC9zdGRvdXQ+XG4gICAgICAgIDxzdGRlcnI+XG4gICAgICAgIFxuICAgICAgICA8L3N0ZGVycj4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCJiYmJjOGI4YS1hNmI3LTQ0YzMtYTAxYi0xM2ZkYWI2MWExYzA7dG9vbHVfMDFQdVV6eG94c21kTGllZ3M4cXZnWG5UIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IkhlcmUgYXJlIHRoZSByZXN1bHRzIGZyb20gZXhlY3V0aW5nIHRoZSBjb21tYW5kLlxuICAgICAgICA8cmV0dXJuLWNvZGU+XG4gICAgICAgIDBcbiAgICAgICAgPC9yZXR1cm4tY29kZT5cbiAgICAgICAgPHN0ZG91dD5cbiAgICAgICAgXHUwMDFiWz85MDAxaFx1MDAxYls/MTAwNGhcdTAwMWJbPzI1bFx1MDAxYlsySlx1MDAxYlttXHUwMDFiW0hcdTAwMWJdMDvnrqHnkIblkZg6IEM6XFxXaW5kb3dzXFxTeXN0ZW0zMlxcV2luZG93c1Bvd2VyU2hlbGxcXHYxLjBcXHBvd2Vyc2hlbGwuZXhlXHUwMDA3XHUwMDFiWz8yNWhcdTAwMWJbPzI1bFx1MDAxYlszOzFIICAgIOebruW9lTogRDpcXEV4cGxvaXRhdGlvblxcSmF2YVdlYlxcS0hcXGxvdmUtc3BhY2VcXExvdmUtU3BhY2UtVWlcXHNyY1x1MDAxYls2OzFITW9kZSAgICAgICAgICAgICAgICAgTGFzdFdyaXRlVGltZSAgICAgICAgIExlbmd0aCBOYW1lXHUwMDFiWzY1WFxuLS0tLSAgICAgICAgICAgICAgICAgLS0tLS0tLS0tLS0tLSAgICAgICAgIC0tLS0tLSAtLS0tXHUwMDFiWzY1WFxuZC0tLS0tICAgICAgICAgMjAyNS80LzE2ICAgICAxNToyNyAgICAgICAgICAgICAgICBhcGlcdTAwMWJbNjZYXG5kLS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEzOjUyICAgICAgICAgICAgICAgIGFzc2V0c1x1MDAxYls2M1hcbmQtLS0tLSAgICAgICAgIDIwMjUvNC8xNiAgICAgMTY6NDAgICAgICAgICAgICAgICAgY29tcG9uZW50c1x1MDAxYls1OVhcbmQtLS0tLSAgICAgICAgIDIwMjUvNC8xNSAgICAgMTc6MjMgICAgICAgICAgICAgICAgcm91dGVyXHUwMDFiWzYzWFxuZC0tLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgICAgICBzdG9yZXNcdTAwMWJbNjNYXG5kLS0tLS0gICAgICAgICAyMDI1LzQvMTIgICAgICA5OjA5ICAgICAgICAgICAgICAgIHV0aWxzXHUwMDFiWzY0WFxuZC0tLS0tICAgICAgICAgMjAyNS80LzE2ICAgICAxNjo0MSAgICAgICAgICAgICAgICB2aWV3c1x1MDAxYls2NFhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTQ6MTEgICAgICAgICAgICAzNzIgQXBwLnZ1ZVx1MDAxYls2Mlhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xMSAgICAgMTI6NTYgICAgICAgICAgICA4OTEgbWFpbi5qc1x1MDAxYls2MlhcdTAwMWJbMTk7MUhcdTAwMWJbPzI1aFxuICAgICAgICA8L3N0ZG91dD5cbiAgICAgICAgPHN0ZGVycj5cbiAgICAgICAgXG4gICAgICAgIDwvc3RkZXJyPiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjIyNjZmYzM3LTAwZGEtNGEyYy04NmU1LTVkYjEzZjc0YjFlMzt0b29sdV8wMUpSdWtTZ01qeUQ1YUt0QXJNVmFBVmMiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvYXBpL1NlYXJjaC5qczpcbiAgICAgMVx0aW1wb3J0IHJlcXVlc3QgZnJvbSBcIkAvdXRpbHMvcmVxdWVzdFwiXG4gICAgIDJcdFxuICAgICAzXHQvLyDmkJzntKJcbiAgICAgNFx0ZXhwb3J0IGNvbnN0IGdldFNlYXJjaFJlc3VsdCA9IChwYXJhbXMpID0+IHtcbiAgICAgNVx0ICAgIHJldHVybiByZXF1ZXN0LmdldCgnL3NlYXJjaCcsIHtcbiAgICAgNlx0ICAgICAgICBwYXJhbXM6IHtcbiAgICAgN1x0ICAgICAgICAgICAga2V5d29yZDogcGFyYW1zLmtleXdvcmQsXG4gICAgIDhcdCAgICAgICAgICAgIHBhZ2VOdW06IHBhcmFtcy5wYWdlTnVtLFxuICAgICA5XHQgICAgICAgICAgICBwYWdlU2l6ZTogcGFyYW1zLnBhZ2VTaXplXG4gICAgMTBcdCAgICAgICAgfVxuICAgIDExXHQgICAgfSlcbiAgICAxMlx0fVxuVG90YWwgbGluZXMgaW4gZmlsZTogMTJcbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sImM5ZjY3NzY1LWIyYWEtNDc1ZS1hZGJiLTZmMjliYTUzZjU0Njt0b29sdV8wMTdFd2lEM0JRVEtVWGRtWHRiVmNpMzIiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiSGVyZSBhcmUgdGhlIHJlc3VsdHMgZnJvbSBleGVjdXRpbmcgdGhlIGNvbW1hbmQuXG4gICAgICAgIDxyZXR1cm4tY29kZT5cbiAgICAgICAgMFxuICAgICAgICA8L3JldHVybi1jb2RlPlxuICAgICAgICA8c3Rkb3V0PlxuICAgICAgICBcdTAwMWJbPzkwMDFoXHUwMDFiWz8xMDA0aFx1MDAxYls/MjVsXHUwMDFiWzJKXHUwMDFiW21cdTAwMWJbSFx1MDAxYl0wO+euoeeQhuWRmDogQzpcXFdpbmRvd3NcXFN5c3RlbTMyXFxXaW5kb3dzUG93ZXJTaGVsbFxcdjEuMFxccG93ZXJzaGVsbC5leGVcdTAwMDdcdTAwMWJbPzI1aFx1MDAxYls/MjVsXHUwMDFiWzM7MUggICAg55uu5b2VOiBEOlxcRXhwbG9pdGF0aW9uXFxKYXZhV2ViXFxLSFxcbG92ZS1zcGFjZVxcTG92ZS1TcGFjZS1VaVxcc3JjXFxhcGlcdTAwMWJbNjsxSE1vZGUgICAgICAgICAgICAgICAgIExhc3RXcml0ZVRpbWUgICAgICAgICBMZW5ndGggTmFtZVx1MDAxYls2NVhcbi0tLS0gICAgICAgICAgICAgICAgIC0tLS0tLS0tLS0tLS0gICAgICAgICAtLS0tLS0gLS0tLVx1MDAxYls2NVhcbmQtLS0tLSAgICAgICAgIDIwMjUvNC8xMiAgICAgMTg6NDIgICAgICAgICAgICAgICAgYWRtaW5cdTAwMWJbNjRYXG5kLS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEyOjU2ICAgICAgICAgICAgICAgIGFuaW1lXHUwMDFiWzY0WFxuZC0tLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgICAgICBiYW5ndW1pXHUwMDFiWzYyWFxuZC0tLS0tICAgICAgICAgMjAyNS80LzE1ICAgICAxNzowOSAgICAgICAgICAgICAgICB1c2VyXHUwMDFiWzY1WFxuLWEtLS0tICAgICAgICAgMjAyNS80LzE1ICAgICAxNzozNSAgICAgICAgICAgIDQ3NyBBbm5vdW5jZW1lbnQuanNcdTAwMWJbNTRYXG4tYS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEyOjU2ICAgICAgICAgICAgMjgwIGJhcnJhZ2UuanNcdTAwMWJbNTlYXG5cdTAwMWJbPzI1aFx1MDAxYls/MjVsLWEtLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgIDg2NyBjaGF0LmpzXHUwMDFiWzYyWFxuLWEtLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgIDM0NSBjb21tZW50cy5qc1x1MDAxYls1OFhcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xNSAgICAgMTQ6MTIgICAgICAgICAgICAyOTEgZm9sbG93LmpzXHUwMDFiWzYwWFxuLWEtLS0tICAgICAgICAgMjAyNS80LzExICAgICAxMjo1NiAgICAgICAgICAgIDI4OSBTZWFyY2guanNcdTAwMWJbNjBYXG4tYS0tLS0gICAgICAgICAyMDI1LzQvMTEgICAgIDEyOjU2ICAgICAgICAgICAgNjAxIHVzZXJWaWRlby5qc1x1MDAxYls1N1hcbi1hLS0tLSAgICAgICAgIDIwMjUvNC8xNCAgICAgMTU6MDQgICAgICAgICAgICA1MjIgdmlkZW8uanNcdTAwMWJbNjFYXG4tYS0tLS0gICAgICAgICAyMDI1LzQvMTYgICAgIDE1OjI3ICAgICAgICAgICAgMTU4IHZpZG9lbGlrZS5qc1x1MDAxYls1N1hcdTAwMWJbMjM7MUhcdTAwMWJbPzI1aFxuICAgICAgICA8L3N0ZG91dD5cbiAgICAgICAgPHN0ZGVycj5cbiAgICAgICAgXG4gICAgICAgIDwvc3RkZXJyPiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjZiZDA0NTIyLTcwNmEtNGE3My1iZWMyLWQ1ZjExOGI0ZTk3Njt0b29sdV8wMVRRYlVRYVk2RWF3dDRuYVhzdnRhMWgiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBwYWNrYWdlLmpzb246XG4gICAgIDFcdHtcbiAgICAgMlx0ICBcIm5hbWVcIjogXCJiaWxpYmlsaS1jbG9uZVwiLFxuICAgICAzXHQgIFwidmVyc2lvblwiOiBcIjEuMC4wXCIsXG4gICAgIDRcdCAgXCJwcml2YXRlXCI6IHRydWUsXG4gICAgIDVcdCAgXCJzY3JpcHRzXCI6IHtcbiAgICAgNlx0ICAgIFwiZGV2XCI6IFwidml0ZVwiLFxuICAgICA3XHQgICAgXCJidWlsZFwiOiBcInZpdGUgYnVpbGRcIixcbiAgICAgOFx0ICAgIFwicHJldmlld1wiOiBcInZpdGUgcHJldmlld1wiXG4gICAgIDlcdCAgfSxcbiAgICAxMFx0ICBcImRlcGVuZGVuY2llc1wiOiB7XG4gICAgMTFcdCAgICBcIkBlbGVtZW50LXBsdXMvaWNvbnMtdnVlXCI6IFwiXjIuMC4wXCIsXG4gICAgMTJcdCAgICBcImFydHBsYXllclwiOiBcIl41LjIuMVwiLFxuICAgIDEzXHQgICAgXCJhcnRwbGF5ZXItcGx1Z2luLWRhbm11a3VcIjogXCJeMy41LjMxXCIsXG4gICAgMTRcdCAgICBcImF4aW9zXCI6IFwiXjEuNy45XCIsXG4gICAgMTVcdCAgICBcImJpbGliaWxpLWNsb25lXCI6IFwiZmlsZTpcIixcbiAgICAxNlx0ICAgIFwiZGF5anNcIjogXCJeMS4xMS4xM1wiLFxuICAgIDE3XHQgICAgXCJlbGVtZW50LXBsdXNcIjogXCJeMi4wLjBcIixcbiAgICAxOFx0ICAgIFwibWl0dFwiOiBcIl4zLjAuMVwiLFxuICAgIDE5XHQgICAgXCJwaW5pYVwiOiBcIl4yLjMuMFwiLFxuICAgIDIwXHQgICAgXCJwaW5pYS1wZXJzaXN0ZWRzdGF0ZS1wbHVnaW5cIjogXCJeMC4xLjBcIixcbiAgICAyMVx0ICAgIFwidnVlXCI6IFwiXjMuMy4wXCIsXG4gICAgMjJcdCAgICBcInZ1ZS1yb3V0ZXJcIjogXCJeNC4wLjBcIlxuICAgIDIzXHQgIH0sXG4gICAgMjRcdCAgXCJkZXZEZXBlbmRlbmNpZXNcIjoge1xuICAgIDI1XHQgICAgXCJAdml0ZWpzL3BsdWdpbi12dWVcIjogXCJeNC4wLjBcIixcbiAgICAyNlx0ICAgIFwicGF0aFwiOiBcIl4wLjEyLjdcIixcbiAgICAyN1x0ICAgIFwic2Fzc1wiOiBcIl4xLjgzLjBcIixcbiAgICAyOFx0ICAgIFwidml0ZVwiOiBcIl40LjAuMFwiXG4gICAgMjlcdCAgfVxuICAgIDMwXHR9XG4gICAgMzFcdFxuVG90YWwgbGluZXMgaW4gZmlsZTogMzFcbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sImQ0ZTJhMTU1LTYwNDItNGE1Ny1hMWVhLTRiNzFmZjRjNWVmNjt0b29sdV8wMU11eWVNTHM2cDE5VlE0cDNCWlBvVWQiOnsicGhhc2UiOjYsInJlc3VsdCI6eyJ0ZXh0IjoiUmFuIGludG8gVW5rbm93biBlcnJvciB3aGlsZSB0cnlpbmcgdG8gcmVhZCBtYWluLmpzIiwiaXNFcnJvciI6dHJ1ZSwicmVxdWVzdElkIjoiIn19LCI2MzM5MjAzNS1kNmVkLTRkNGQtOTU2MC1jOTE1NjJmY2U3N2U7dG9vbHVfMDFTSlVDc1U5dXFCVnJYQzRUTjdpbXFoIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL21haW4uanM6XG4gICAgIDFcdGltcG9ydCB7IGNyZWF0ZUFwcCB9IGZyb20gJ3Z1ZSdcbiAgICAgMlx0aW1wb3J0IEVsZW1lbnRQbHVzIGZyb20gJ2VsZW1lbnQtcGx1cydcbiAgICAgM1x0aW1wb3J0ICogYXMgRWxlbWVudFBsdXNJY29uc1Z1ZSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcbiAgICAgNFx0aW1wb3J0ICdlbGVtZW50LXBsdXMvZGlzdC9pbmRleC5jc3MnXG4gICAgIDVcdGltcG9ydCBBcHAgZnJvbSAnQC9BcHAudnVlJ1xuICAgICA2XHRpbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyJ1xuICAgICA3XHRpbXBvcnQge2NyZWF0ZVBpbmlhfSBmcm9tIFwicGluaWFcIlxuICAgICA4XHRpbXBvcnQge2NyZWF0ZVBlcnNpc3RlZFN0YXRlfSBmcm9tIFwicGluaWEtcGVyc2lzdGVkc3RhdGUtcGx1Z2luXCJcbiAgICAgOVx0aW1wb3J0IHpoQ24gZnJvbSBcImVsZW1lbnQtcGx1cy9kaXN0L2xvY2FsZS96aC1jbi5tanNcIlxuICAgIDEwXHRpbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXG4gICAgMTFcdGltcG9ydCByZWxhdGl2ZVRpbWUgZnJvbSAnZGF5anMvcGx1Z2luL3JlbGF0aXZlVGltZSdcbiAgICAxMlx0aW1wb3J0ICdkYXlqcy9sb2NhbGUvemgtY24nXG4gICAgMTNcdFxuICAgIDE0XHRkYXlqcy5leHRlbmQocmVsYXRpdmVUaW1lKVxuICAgIDE1XHRkYXlqcy5sb2NhbGUoJ3poLWNuJylcbiAgICAxNlx0XG4gICAgMTdcdGNvbnN0IGFwcCA9IGNyZWF0ZUFwcChBcHApXG4gICAgMThcdGNvbnN0IHBpbmlhID0gY3JlYXRlUGluaWEoKVxuICAgIDE5XHRjb25zdCBwZXJzaXN0ID0gY3JlYXRlUGVyc2lzdGVkU3RhdGUoKTtcbiAgICAyMFx0Ly8g5rOo5YaM5omA5pyJ5Zu+5qCHXG4gICAgMjFcdGZvciAoY29uc3QgW2tleSwgY29tcG9uZW50XSBvZiBPYmplY3QuZW50cmllcyhFbGVtZW50UGx1c0ljb25zVnVlKSkge1xuICAgIDIyXHQgIGFwcC5jb21wb25lbnQoa2V5LCBjb21wb25lbnQpXG4gICAgMjNcdH1cbiAgICAyNFx0cGluaWEudXNlKHBlcnNpc3QpXG4gICAgMjVcdGFwcC51c2UocGluaWEpXG4gICAgMjZcdGFwcC51c2UoRWxlbWVudFBsdXMse2xvY2FsZTp6aENufSlcbiAgICAyN1x0YXBwLnVzZShyb3V0ZXIpXG4gICAgMjhcdGFwcC5tb3VudCgnI2FwcCcpIFxuVG90YWwgbGluZXMgaW4gZmlsZTogMjhcbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sImU1ZWNlNTU0LWY2MjQtNDdhZS1hYWJkLWU4YjE2ZDljM2YxMzt0b29sdV8wMVk1azV5M2J5aWtvc2p5dXBKTWlxTlIiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiB2aXRlLmNvbmZpZy5qczpcbiAgICAgMVx0aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndml0ZSdcbiAgICAgMlx0aW1wb3J0IHZ1ZSBmcm9tICdAdml0ZWpzL3BsdWdpbi12dWUnXG4gICAgIDNcdGltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG4gICAgIDRcdFxuICAgICA1XHRleHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xuICAgICA2XHQgIHBsdWdpbnM6IFt2dWUoKV0sXG4gICAgIDdcdCAgc2VydmVyOiB7XG4gICAgIDhcdCAgICBwb3J0OiA1MTczLFxuICAgICA5XHQgICAgcHJveHk6IHtcbiAgICAxMFx0ICAgICAgICAnL2FwaSc6IHsgLy/ojrflj5bot6/lvoTkuK3ljIXlkKthcGnnmoTor7fmsYJcbiAgICAxMVx0ICAgICAgICAgIHRhcmdldDogJ2h0dHA6Ly8xMjcuMC4wLjE6ODA4MCcsIC8v5ZCO5Y+w5pyN5Yqh5omA5Zyo55qE5rqQXG4gICAgMTJcdCAgICAgICAgICBjaGFuZ2VPcmlnaW46IHRydWUsXG4gICAgMTNcdCAgICAgICAgICAvLyByZXdyaXRlOiAocGF0aCkgPT4gcGF0aC5yZXBsYWNlKC9eXFwvYXBpLywgJycpIC8vIOWwhui3r+W+hOS4reeahGFwaeabv+aNouS4uuepulxuICAgIDE0XHQgICAgICAgIH1cbiAgICAxNVx0ICAgICAgfVxuICAgIDE2XHQgIH0sXG4gICAgMTdcdCAgcmVzb2x2ZToge1xuICAgIDE4XHQgICAgYWxpYXM6IHtcbiAgICAxOVx0ICAgICAgJ0AnOiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnc3JjJylcbiAgICAyMFx0ICAgIH0sXG4gICAgMjFcdCAgICBcbiAgICAyMlx0ICB9XG4gICAgMjNcdFxuICAgIDI0XHR9KSBcblRvdGFsIGxpbmVzIGluIGZpbGU6IDI0XG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCIzYzA0YzliOC1jY2Q5LTQ0OGEtOWY1ZC05YTBlODkxZjkxNWQ7dG9vbHVfMDFDTmpTUEFWTVdRZ1EyRTlNblRoNDFwIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL2NvbXBvbmVudHMvSGVhZGVyLnZ1ZTpcbiAgICAgMVx0PHRlbXBsYXRlPlxuICAgICAyXHQgIDxkaXYgY2xhc3M9XCJoZWFkZXJcIiA6Y2xhc3M9XCJ7ICdoZWFkZXItc2Nyb2xsZWQnOiBpc1Njcm9sbGVkIH1cIj5cbiAgICAgM1x0ICAgIDwhLS0g56e75Yqo56uv5pCc57Si5qGGIC0tPlxuICAgICA0XHQgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1zZWFyY2hcIiB2LWlmPVwic2hvd01vYmlsZVNlYXJjaCAmJiBpc01vYmlsZVwiPlxuICAgICA1XHQgICAgICA8ZGl2IGNsYXNzPVwibW9iaWxlLXNlYXJjaC1oZWFkZXJcIj5cbiAgICAgNlx0ICAgICAgICA8ZWwtaWNvbiBjbGFzcz1cImJhY2staWNvblwiIEBjbGljaz1cInNob3dNb2JpbGVTZWFyY2ggPSBmYWxzZVwiPjxBcnJvd0xlZnQgLz48L2VsLWljb24+XG4gICAgIDdcdCAgICAgICAgPFNlYXJjaEJhciBcbiAgICAgOFx0ICAgICAgICAgIEBzZWFyY2g9XCJoYW5kbGVNb2JpbGVTZWFyY2hcIiBcbiAgICAgOVx0ICAgICAgICAgIHYtbW9kZWw9XCJzZWFyY2hUZXh0XCJcbiAgICAxMFx0ICAgICAgICAgIDppcy1tb2JpbGU9XCJ0cnVlXCJcbiAgICAxMVx0ICAgICAgICAgIHJlZj1cIm1vYmlsZVNlYXJjaEJhclJlZlwiXG4gICAgMTJcdCAgICAgICAgLz5cbiAgICAxM1x0ICAgICAgPC9kaXY+XG4gICAgMTRcdCAgICA8L2Rpdj5cbiAgICAxNVx0XG4gICAgMTZcdCAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyLWNvbnRlbnRcIj5cbiAgICAxN1x0ICAgICAgPCEtLSDlt6bkvqdMb2dv5ZKM5a+86IiqIC0tPlxuICAgIDE4XHQgICAgICA8ZGl2IGNsYXNzPVwibGVmdC1zZWN0aW9uXCI+XG4gICAgMTlcdCAgICAgICAgPGRpdiBjbGFzcz1cImxvZ29cIiBAY2xpY2s9XCJyb3V0ZXIucHVzaCgnLycpXCI+XG4gICAgMjBcdCAgICAgICAgICA8ZGl2IGNsYXNzPVwidHYtaWNvblwiPlxuICAgIDIxXHQgICAgICAgICAgICA8ZWwtaWNvbj48TW9uaXRvciAvPjwvZWwtaWNvbj5cbiAgICAyMlx0ICAgICAgICAgIDwvZGl2PlxuICAgIDIzXHQgICAgICAgICAgPHNwYW4gY2xhc3M9XCJsb2dvLXRleHRcIj7lk5Tlk6nlk5Tlk6k8L3NwYW4+XG4gICAgMjRcdCAgICAgICAgPC9kaXY+XG4gICAgMjVcdCAgICAgICAgPCEtLSDnp7vliqjnq6/oj5zljZXmjInpkq4gLS0+XG4gICAgMjZcdCAgICAgICAgPGRpdiB2LWlmPVwiaXNNb2JpbGVcIiBjbGFzcz1cIm1vYmlsZS1tZW51LWJ0blwiIEBjbGljaz1cInNob3dNb2JpbGVNZW51ID0gdHJ1ZVwiPlxuICAgIDI3XHQgICAgICAgICAgPGVsLWljb24+PE1lbnUgLz48L2VsLWljb24+XG4gICAgMjhcdCAgICAgICAgPC9kaXY+XG4gICAgMjlcdCAgICAgICAgPGRpdiB2LWlmPVwiIWlzTW9iaWxlXCIgY2xhc3M9XCJuYXYtbGlua3NcIj5cbiAgICAzMFx0ICAgICAgICAgIDxyb3V0ZXItbGluayB0bz1cIi9cIiBjbGFzcz1cIm5hdi1pdGVtXCIgYWN0aXZlLWNsYXNzPVwiYWN0aXZlXCI+6aaW6aG1PC9yb3V0ZXItbGluaz5cbiAgICAzMVx0ICAgICAgICA8L2Rpdj5cbiAgICAzMlx0ICAgICAgPC9kaXY+XG4gICAgMzNcdFxuICAgIDM0XHQgICAgICA8IS0tIOS4remXtOaQnOe0ouahhiAtLT5cbiAgICAzNVx0ICAgICAgPGRpdiB2LWlmPVwiIWlzTW9iaWxlXCIgY2xhc3M9XCJjZW50ZXItc2VjdGlvblwiPlxuICAgIDM2XHQgICAgICAgIDxTZWFyY2hCYXIgXG4gICAgMzdcdCAgICAgICAgICBAc2VhcmNoPVwiaGFuZGxlU2VhcmNoXCIgXG4gICAgMzhcdCAgICAgICAgICB2LW1vZGVsPVwic2VhcmNoVGV4dFwiIFxuICAgIDM5XHQgICAgICAgICAgcmVmPVwic2VhcmNoQmFyUmVmXCJcbiAgICA0MFx0ICAgICAgICAvPlxuICAgIDQxXHQgICAgICA8L2Rpdj5cbiAgICA0Mlx0XG4gICAgNDNcdCAgICAgIDwhLS0g5Y+z5L6n55So5oi35Yy65Z+fIC0tPlxuICAgIDQ0XHQgICAgICA8ZGl2IGNsYXNzPVwicmlnaHQtc2VjdGlvblwiPlxuICAgIDQ1XHQgICAgICAgIDwhLS0g56e75Yqo56uv5pCc57Si5oyJ6ZKuIC0tPlxuICAgIDQ2XHQgICAgICAgIDxkaXYgdi1pZj1cImlzTW9iaWxlXCIgY2xhc3M9XCJtb2JpbGUtc2VhcmNoLWJ0blwiIEBjbGljaz1cIm9wZW5Nb2JpbGVTZWFyY2hcIj5cbiAgICA0N1x0ICAgICAgICAgIDxlbC1pY29uPjxTZWFyY2ggLz48L2VsLWljb24+XG4gICAgNDhcdCAgICAgICAgPC9kaXY+XG4gICAgNDlcdCAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItaW5mb1wiPlxuICAgIDUwXHQgICAgICAgICAgPFVzZXJQb3BvdmVyIHYtaWY9XCJpc0xvZ2luXCIgLz5cbiAgICA1MVx0ICAgICAgICAgIDxkaXYgdi1lbHNlIGNsYXNzPVwidXNlci1hdmF0YXJcIiBAY2xpY2s9XCJzaG93TG9naW5EaWFsb2dcIj5cbiAgICA1Mlx0ICAgICAgICAgICAgPGVsLWF2YXRhciA6c2l6ZT1cIjQyXCIgc3JjPVwiaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZ1wiIC8+XG4gICAgNTNcdCAgICAgICAgICA8L2Rpdj5cbiAgICA1NFx0ICAgICAgICAgIDxkaXYgdi1pZj1cIiFpc01vYmlsZVwiIGNsYXNzPVwidXNlci1pY29uc1wiPlxuICAgIDU1XHQgICAgICAgICAgICA8ZWwtaWNvbj48TWVzc2FnZSAvPjwvZWwtaWNvbj5cbiAgICA1Nlx0ICAgICAgICAgICAgPGVsLWljb24+PFN0YXIgLz48L2VsLWljb24+XG4gICAgNTdcdCAgICAgICAgICAgIDxlbC1pY29uPjxDb2xsZWN0aW9uIC8+PC9lbC1pY29uPlxuICAgIDU4XHQgICAgICAgICAgICA8ZWwtaWNvbj48Q2xvY2sgLz48L2VsLWljb24+XG4gICAgNTlcdCAgICAgICAgICA8L2Rpdj5cbiAgICA2MFx0ICAgICAgICA8L2Rpdj5cbiAgICA2MVx0ICAgICAgICA8ZGl2IGNsYXNzPVwidXBsb2FkLXNlY3Rpb25cIiB2LWlmPVwiIWlzTW9iaWxlICYmICFpc1VwbG9hZFBhZ2VcIj5cbiAgICA2Mlx0ICAgICAgICAgIDxlbC1idXR0b24gY2xhc3M9XCJ1cGxvYWQtYnRuXCIgdHlwZT1cInByaW1hcnlcIiBAY2xpY2s9XCJnb1RvVXBsb2FkXCI+XG4gICAgNjNcdCAgICAgICAgICAgIDxlbC1pY29uIGNsYXNzPVwiY2FtZXJhLWljb25cIj48VmlkZW9DYW1lcmEgLz48L2VsLWljb24+XG4gICAgNjRcdCAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYnRuLXRleHRcIj7mipXnqL88L3NwYW4+XG4gICAgNjVcdCAgICAgICAgICA8L2VsLWJ1dHRvbj5cbiAgICA2Nlx0ICAgICAgICA8L2Rpdj5cbiAgICA2N1x0ICAgICAgPC9kaXY+XG4gICAgNjhcdCAgICA8L2Rpdj5cbiAgICA2OVx0XG4gICAgNzBcdCAgICA8IS0tIOenu+WKqOerr+iPnOWNleaKveWxiSAtLT5cbiAgICA3MVx0ICAgIDxlbC1kcmF3ZXJcbiAgICA3Mlx0ICAgICAgdi1tb2RlbD1cInNob3dNb2JpbGVNZW51XCJcbiAgICA3M1x0ICAgICAgZGlyZWN0aW9uPVwibHRyXCJcbiAgICA3NFx0ICAgICAgc2l6ZT1cIjgwJVwiXG4gICAgNzVcdCAgICAgIDp3aXRoLWhlYWRlcj1cImZhbHNlXCJcbiAgICA3Nlx0ICAgICAgY2xhc3M9XCJtb2JpbGUtbWVudS1kcmF3ZXJcIlxuICAgIDc3XHQgICAgICA6c2hvdy1jbG9zZT1cImZhbHNlXCJcbiAgICA3OFx0ICAgID5cbiAgICA3OVx0ICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1tZW51LWNvbnRlbnRcIj5cbiAgICA4MFx0ICAgICAgICA8ZGl2IGNsYXNzPVwiZHJhd2VyLWhlYWRlclwiPlxuICAgIDgxXHQgICAgICAgICAgPGVsLWljb24gY2xhc3M9XCJjbG9zZS1pY29uXCIgQGNsaWNrPVwic2hvd01vYmlsZU1lbnUgPSBmYWxzZVwiPjxDbG9zZSAvPjwvZWwtaWNvbj5cbiAgICA4Mlx0ICAgICAgICA8L2Rpdj5cbiAgICA4M1x0ICAgICAgICA8ZGl2IGNsYXNzPVwibW9iaWxlLXVzZXItaW5mb1wiIHYtaWY9XCJpc0xvZ2luXCI+XG4gICAgODRcdCAgICAgICAgICA8VXNlclBvcG92ZXIgLz5cbiAgICA4NVx0ICAgICAgICA8L2Rpdj5cbiAgICA4Nlx0ICAgICAgICA8ZGl2IGNsYXNzPVwibW9iaWxlLXVzZXItaW5mb1wiIHYtZWxzZSBAY2xpY2s9XCJzaG93TG9naW5EaWFsb2dcIj5cbiAgICA4N1x0ICAgICAgICAgIDxlbC1hdmF0YXIgOnNpemU9XCI1MFwiIHNyYz1cImh0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmdcIiAvPlxuICAgIDg4XHQgICAgICAgICAgPHNwYW4+54K55Ye755m75b2VPC9zcGFuPlxuICAgIDg5XHQgICAgICAgIDwvZGl2PlxuICAgIDkwXHQgICAgICAgIDxkaXYgY2xhc3M9XCJtb2JpbGUtbmF2LWxpbmtzXCI+XG4gICAgOTFcdCAgICAgICAgICA8cm91dGVyLWxpbmsgXG4gICAgOTJcdCAgICAgICAgICAgIHYtZm9yPVwiKGl0ZW0sIGluZGV4KSBpbiBtb2JpbGVOYXZJdGVtc1wiIFxuICAgIDkzXHQgICAgICAgICAgICA6a2V5PVwiaW5kZXhcIlxuICAgIDk0XHQgICAgICAgICAgICA6dG89XCJpdGVtLnBhdGhcIiBcbiAgICA5NVx0ICAgICAgICAgICAgY2xhc3M9XCJtb2JpbGUtbmF2LWl0ZW1cIiBcbiAgICA5Nlx0ICAgICAgICAgICAgQGNsaWNrPVwic2hvd01vYmlsZU1lbnUgPSBmYWxzZVwiXG4gICAgOTdcdCAgICAgICAgICA+XG4gICAgOThcdCAgICAgICAgICAgIDxlbC1pY29uPjxjb21wb25lbnQgOmlzPVwiaXRlbS5pY29uXCIgLz48L2VsLWljb24+XG4gICAgOTlcdCAgICAgICAgICAgIDxzcGFuPnt7IGl0ZW0ubmFtZSB9fTwvc3Bhbj5cbiAgIDEwMFx0ICAgICAgICAgIDwvcm91dGVyLWxpbms+XG4gICAxMDFcdCAgICAgICAgPC9kaXY+XG4gICAxMDJcdCAgICAgIDwvZGl2PlxuICAgMTAzXHQgICAgPC9lbC1kcmF3ZXI+XG4gICAxMDRcdCAgPC9kaXY+XG4gICAxMDVcdFxuICAgMTA2XHQgIDwhLS0g5re75Yqg55m75b2V5a+56K+d5qGG57uE5Lu2IC0tPlxuICAgMTA3XHQgIDxMb2dpbkRpYWxvZyA6dmlzaWJsZT1cImxvZ2luRGlhbG9nVmlzaWJsZVwiIEB1cGRhdGU6dmlzaWJsZT1cImxvZ2luRGlhbG9nVmlzaWJsZSA9ICRldmVudFwiIC8+XG4gICAxMDhcdDwvdGVtcGxhdGU+XG4gICAxMDlcdFxuICAgMTEwXHQ8c2NyaXB0IHNldHVwPlxuICAgMTExXHRpbXBvcnQgeyByZWYsIG9uTW91bnRlZCwgb25Vbm1vdW50ZWQsIGNvbXB1dGVkLCB3YXRjaCwgbmV4dFRpY2sgfSBmcm9tICd2dWUnXG4gICAxMTJcdGltcG9ydCBTZWFyY2hCYXIgZnJvbSAnQC9jb21wb25lbnRzL1NlYXJjaEJhci52dWUnXG4gICAxMTNcdGltcG9ydCBMb2dpbkRpYWxvZyBmcm9tICdAL2NvbXBvbmVudHMvTG9naW5EaWFsb2cudnVlJ1xuICAgMTE0XHRpbXBvcnQgVXNlclBvcG92ZXIgZnJvbSAnQC9jb21wb25lbnRzL3VzZXIvVXNlclBvcG92ZXIudnVlJ1xuICAgMTE1XHRpbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXG4gICAxMTZcdGltcG9ydCB1c2VVc2VySW5mb1N0b3JlICBmcm9tICdAL3N0b3Jlcy91c2VySW5mbydcbiAgIDExN1x0aW1wb3J0IHsgZ2V0VXNlckluZm9TZXJ2aWNlIH0gZnJvbSAnQC9hcGkvdXNlci91c2VyJ1xuICAgMTE4XHRpbXBvcnQgeyBcbiAgIDExOVx0ICBWaWRlb0NhbWVyYSwgXG4gICAxMjBcdCAgTWVzc2FnZSwgXG4gICAxMjFcdCAgU3RhciwgXG4gICAxMjJcdCAgQ29sbGVjdGlvbiwgXG4gICAxMjNcdCAgQ2xvY2ssXG4gICAxMjRcdCAgTW9uaXRvcixcbiAgIDEyNVx0ICBNZW51LFxuICAgMTI2XHQgIEhvbWVGaWxsZWQsXG4gICAxMjdcdCAgVmlkZW9QbGF5LFxuICAgMTI4XHQgIFNlYXJjaCxcbiAgIDEyOVx0ICBBcnJvd0xlZnQsXG4gICAxMzBcdCAgQ2xvc2VcbiAgIDEzMVx0fSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcbiAgIDEzMlx0aW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAndnVlLXJvdXRlcidcbiAgIDEzM1x0aW1wb3J0IGV2ZW50QnVzIGZyb20gJ0AvdXRpbHMvZXZlbnRCdXMnXG4gICAxMzRcdGltcG9ydCB7RWxNZXNzYWdlfSBmcm9tIFwiZWxlbWVudC1wbHVzXCI7XG4gICAxMzVcdC8v6Lev55SxXG4gICAxMzZcdGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpXG4gICAxMzdcdGNvbnN0IGlzU2Nyb2xsZWQgPSByZWYoZmFsc2UpXG4gICAxMzhcdFxuICAgMTM5XHQvLyDnmbvlvZXlr7nor53moYbmmL7npLrnirbmgIFcbiAgIDE0MFx0Y29uc3QgbG9naW5EaWFsb2dWaXNpYmxlID0gcmVmKGZhbHNlKVxuICAgMTQxXHRcbiAgIDE0Mlx0Y29uc3QgdG9rZW5TdG9yZSA9IHVzZVRva2VuU3RvcmUoKVxuICAgMTQzXHRjb25zdCB1c2VySW5mb1N0b3JlID0gdXNlVXNlckluZm9TdG9yZSgpXG4gICAxNDRcdGNvbnN0IGlzTG9naW4gPSBjb21wdXRlZCgoKSA9PiAhIXRva2VuU3RvcmUudG9rZW4pXG4gICAxNDVcdFxuICAgMTQ2XHQvLyDojrflj5bnlKjmiLfkv6Hmga9cbiAgIDE0N1x0Y29uc3QgZ2V0VXNlckluZm8gPSBhc3luYyAoKSA9PiB7XG4gICAxNDhcdCAgaWYgKGlzTG9naW4udmFsdWUpIHtcbiAgIDE0OVx0ICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldFVzZXJJbmZvU2VydmljZSgpXG4gICAxNTBcdCAgICB1c2VySW5mb1N0b3JlLnNldEluZm8ocmVzLmRhdGEpXG4gICAxNTFcdCAgfVxuICAgMTUyXHR9XG4gICAxNTNcdFxuICAgMTU0XHQvLyDnm5HlkKznmbvlvZXnirbmgIHlj5jljJZcbiAgIDE1NVx0d2F0Y2goKCkgPT4gaXNMb2dpbi52YWx1ZSwgKG5ld1ZhbCkgPT4ge1xuICAgMTU2XHQgIGlmIChuZXdWYWwpIHtcbiAgIDE1N1x0ICAgIGdldFVzZXJJbmZvKClcbiAgIDE1OFx0ICB9XG4gICAxNTlcdH0pXG4gICAxNjBcdFxuICAgMTYxXHQvLyDnm5HlkKzmu5rliqjkuovku7ZcbiAgIDE2Mlx0Y29uc3QgaGFuZGxlU2Nyb2xsID0gKCkgPT4ge1xuICAgMTYzXHQgIGlzU2Nyb2xsZWQudmFsdWUgPSB3aW5kb3cuc2Nyb2xsWSA+IDBcbiAgIDE2NFx0fVxuICAgMTY1XHRcbiAgIDE2Nlx0Y29uc3Qgc2hvd01vYmlsZU1lbnUgPSByZWYoZmFsc2UpXG4gICAxNjdcdGNvbnN0IGlzTW9iaWxlID0gcmVmKHdpbmRvdy5pbm5lcldpZHRoIDw9IDc2OClcbiAgIDE2OFx0XG4gICAxNjlcdC8vIOebkeWQrOeql+WPo+Wkp+Wwj+WPmOWMllxuICAgMTcwXHRjb25zdCBoYW5kbGVSZXNpemUgPSAoKSA9PiB7XG4gICAxNzFcdCAgaXNNb2JpbGUudmFsdWUgPSB3aW5kb3cuaW5uZXJXaWR0aCA8PSA3NjhcbiAgIDE3Mlx0fVxuICAgMTczXHRcbiAgIDE3NFx0b25Nb3VudGVkKCgpID0+IHtcbiAgIDE3NVx0ICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgaGFuZGxlU2Nyb2xsKVxuICAgMTc2XHQgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVSZXNpemUpXG4gICAxNzdcdH0pXG4gICAxNzhcdFxuICAgMTc5XHRvblVubW91bnRlZCgoKSA9PiB7XG4gICAxODBcdCAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZVNjcm9sbClcbiAgIDE4MVx0ICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaGFuZGxlUmVzaXplKVxuICAgMTgyXHQgIGV2ZW50QnVzLm9mZignc2hvd0xvZ2luJylcbiAgIDE4M1x0fSlcbiAgIDE4NFx0XG4gICAxODVcdC8vIOaYvuekuueZu+W9leWvueivneahhlxuICAgMTg2XHRjb25zdCBzaG93TG9naW5EaWFsb2cgPSAoKSA9PiB7XG4gICAxODdcdCAgbG9naW5EaWFsb2dWaXNpYmxlLnZhbHVlID0gdHJ1ZVxuICAgMTg4XHR9XG4gICAxODlcdFxuICAgMTkwXHQvLyDnm5HlkKzmmL7npLrnmbvlvZXlvLnnqpfkuovku7ZcbiAgIDE5MVx0ZXZlbnRCdXMub24oJ3Nob3dMb2dpbicsICgpID0+IHtcbiAgIDE5Mlx0ICBsb2dpbkRpYWxvZ1Zpc2libGUudmFsdWUgPSB0cnVlXG4gICAxOTNcdH0pXG4gICAxOTRcdFxuICAgMTk1XHRjb25zdCBzZWFyY2hUZXh0ID0gcmVmKCcnKVxuICAgMTk2XHRjb25zdCBzZWFyY2hCYXJSZWYgPSByZWYobnVsbClcbiAgIDE5N1x0XG4gICAxOThcdGNvbnN0IGhhbmRsZVNlYXJjaCA9ICgpID0+IHtcbiAgIDE5OVx0ICBpZiAoIXNlYXJjaFRleHQudmFsdWUudHJpbSgpKSByZXR1cm5cbiAgIDIwMFx0ICBcbiAgIDIwMVx0ICAvLyDot7PovazliLDmkJzntKLpobXpnaJcbiAgIDIwMlx0ICByb3V0ZXIucHVzaCh7XG4gICAyMDNcdCAgICBwYXRoOiAnL3NlYXJjaCcsXG4gICAyMDRcdCAgICBxdWVyeToge1xuICAgMjA1XHQgICAgICBrZXl3b3JkOiBzZWFyY2hUZXh0LnZhbHVlLnRyaW0oKVxuICAgMjA2XHQgICAgfVxuICAgMjA3XHQgIH0pXG4gICAyMDhcdH1cbiAgIDIwOVx0XG4gICAyMTBcdGNvbnN0IHNob3dNb2JpbGVTZWFyY2ggPSByZWYoZmFsc2UpXG4gICAyMTFcdGNvbnN0IG1vYmlsZVNlYXJjaEJhclJlZiA9IHJlZihudWxsKVxuICAgMjEyXHRcbiAgIDIxM1x0Y29uc3Qgb3Blbk1vYmlsZVNlYXJjaCA9ICgpID0+IHtcbiAgIDIxNFx0ICBzaG93TW9iaWxlU2VhcmNoLnZhbHVlID0gdHJ1ZVxuICAgMjE1XHQgIG5leHRUaWNrKCgpID0+IHtcbiAgIDIxNlx0ICAgIG1vYmlsZVNlYXJjaEJhclJlZi52YWx1ZT8uZm9jdXMoKVxuICAgMjE3XHQgIH0pXG4gICAyMThcdH1cbiAgIDIxOVx0XG4gICAyMjBcdGNvbnN0IGhhbmRsZU1vYmlsZVNlYXJjaCA9ICgpID0+IHtcbiAgIDIyMVx0ICBoYW5kbGVTZWFyY2goKVxuICAgMjIyXHQgIHNob3dNb2JpbGVTZWFyY2gudmFsdWUgPSBmYWxzZVxuICAgMjIzXHR9XG4gICAyMjRcdFxuICAgMjI1XHQvLyDnp7vliqjnq6/lr7zoiKrpobnphY3nva5cbiAgIDIyNlx0Y29uc3QgbW9iaWxlTmF2SXRlbXMgPSBbXG4gICAyMjdcdCAgeyBuYW1lOiAn6aaW6aG1JywgcGF0aDogJy8nLCBpY29uOiAnSG9tZUZpbGxlZCcgfSxcbiAgIDIyOFx0ICB7IG5hbWU6ICfnlarliacnLCBwYXRoOiAnL2FuaW1lJywgaWNvbjogJ1ZpZGVvUGxheScgfSxcbiAgIDIyOVx0ICB7IG5hbWU6ICfnm7Tmkq0nLCBwYXRoOiAnL2xpdmUnLCBpY29uOiAnVmlkZW9DYW1lcmEnIH0sXG4gICAyMzBcdCAgeyBuYW1lOiAn5raI5oGvJywgcGF0aDogJy9tZXNzYWdlcycsIGljb246ICdNZXNzYWdlJyB9LFxuICAgMjMxXHQgIHsgbmFtZTogJ+aUtuiXjycsIHBhdGg6ICcvZmF2b3JpdGVzJywgaWNvbjogJ1N0YXInIH1cbiAgIDIzMlx0XVxuICAgMjMzXHRcbiAgIDIzNFx0Y29uc3QgZ29Ub1VwbG9hZCA9ICgpID0+IHtcbiAgIDIzNVx0ICBpZiAoIWlzTG9naW4udmFsdWUpIHtcbiAgIDIzNlx0ICAgIC8vIOWmguaenOacqueZu+W9le+8jOaYvuekuueZu+W9leWvueivneahhlxuICAgMjM3XHQgICAgRWxNZXNzYWdlLmVycm9yKCfor7flhYjnmbvlvZUnKVxuICAgMjM4XHQgICAgbG9naW5EaWFsb2dWaXNpYmxlLnZhbHVlID0gdHJ1ZVxuICAgMjM5XHQgICAgcmV0dXJuXG4gICAyNDBcdCAgfVxuICAgMjQxXHQgIC8vIOi3s+i9rOWIsOS4quS6uuS4reW/g+eahOinhumikeWPkeW4g+mhtemdolxuICAgMjQyXHQgIHJvdXRlci5wdXNoKCcvdXNlci1jZW50ZXInKVxuICAgMjQzXHQgIC8vIOmAmui/hyBldmVudEJ1cyDlj5HpgIHkuovku7bvvIzpgJrnn6UgVXNlckNlbnRlciDnu4Tku7bmiZPlvIDop4bpopHlj5HluIPmir3lsYlcbiAgIDI0NFx0ICBldmVudEJ1cy5lbWl0KCdvcGVuVXBsb2FkRHJhd2VyJylcbiAgIDI0NVx0fVxuICAgMjQ2XHRcbiAgIDI0N1x0Ly8g5ZyoIHNjcmlwdCBzZXR1cCDpg6jliIbmt7vliqDot6/nlLHnm7jlhbPnmoTorqHnrpflsZ7mgKdcbiAgIDI0OFx0Y29uc3QgaXNVcGxvYWRQYWdlID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgMjQ5XHQgIHJldHVybiByb3V0ZXIuY3VycmVudFJvdXRlLnZhbHVlLnBhdGggPT09ICcvdXNlci1jZW50ZXInXG4gICAyNTBcdH0pXG4gICAyNTFcdDwvc2NyaXB0PlxuICAgMjUyXHRcbiAgIDI1M1x0PHN0eWxlIHNjb3BlZD5cbiAgIDI1NFx0OnJvb3Qge1xuICAgMjU1XHQgIC0tdGV4dC1jb2xvcjogIzE4MTkxYztcbiAgIDI1Nlx0fVxuICAgMjU3XHRcbiAgIDI1OFx0LmhlYWRlciB7XG4gICAyNTlcdCAgcG9zaXRpb246IGZpeGVkO1xuICAgMjYwXHQgIHRvcDogMDtcbiAgIDI2MVx0ICBsZWZ0OiAwO1xuICAgMjYyXHQgIHdpZHRoOiAxMDAlO1xuICAgMjYzXHQgIHotaW5kZXg6IDEwMDA7XG4gICAyNjRcdCAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAyNjVcdCAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgIDI2Nlx0fVxuICAgMjY3XHRcbiAgIDI2OFx0Lyog56e76Zmk6aG26YOo5riQ5Y+Y6YGu572p77yM6K6p6IOM5pmv5Zu+5p2l6LSf6LSj6L+Z6YOo5YiG5pWI5p6cICovXG4gICAyNjlcdC8qIC5oZWFkZXI6OmJlZm9yZSB7XG4gICAyNzBcdCAgY29udGVudDogJyc7XG4gICAyNzFcdCAgcG9zaXRpb246IGFic29sdXRlO1xuICAgMjcyXHQgIHRvcDogMDtcbiAgIDI3M1x0ICBsZWZ0OiAwO1xuICAgMjc0XHQgIHJpZ2h0OiAwO1xuICAgMjc1XHQgIGhlaWdodDogMTAwcHg7XG4gICAyNzZcdCAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxcbiAgIDI3N1x0ICAgIHJnYmEoMCwgMCwgMCwgMC40KSAwJSxcbiAgIDI3OFx0ICAgIHJnYmEoMCwgMCwgMCwgMC4yKSA1MCUsXG4gICAyNzlcdCAgICB0cmFuc3BhcmVudCAxMDAlXG4gICAyODBcdCAgKTtcbiAgIDI4MVx0ICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgIDI4Mlx0ICB6LWluZGV4OiAtMTtcbiAgIDI4M1x0fSAqL1xuICAgMjg0XHRcbiAgIDI4NVx0LmhlYWRlci1zY3JvbGxlZCB7XG4gICAyODZcdCAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjk4KTtcbiAgIDI4N1x0ICBib3gtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLCAwLCAwLCAwLjA2KTtcbiAgIDI4OFx0fVxuICAgMjg5XHRcbiAgIDI5MFx0LmhlYWRlci1jb250ZW50IHtcbiAgIDI5MVx0ICBtYXgtd2lkdGg6IDE4MDBweDtcbiAgIDI5Mlx0ICBtYXJnaW46IDAgYXV0bztcbiAgIDI5M1x0ICBwYWRkaW5nOiAwIDQwcHg7XG4gICAyOTRcdCAgaGVpZ2h0OiA2NHB4O1xuICAgMjk1XHQgIGRpc3BsYXk6IGZsZXg7XG4gICAyOTZcdCAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDI5N1x0ICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAyOThcdCAgY29sb3I6ICNmZmY7XG4gICAyOTlcdCAgdGV4dC1zaGFkb3c6IDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAzMDBcdCAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgIDMwMVx0fVxuICAgMzAyXHRcbiAgIDMwM1x0LmhlYWRlci1zY3JvbGxlZCAuaGVhZGVyLWNvbnRlbnQge1xuICAgMzA0XHQgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yLCAjMTgxOTFjKTtcbiAgIDMwNVx0ICB0ZXh0LXNoYWRvdzogbm9uZTtcbiAgIDMwNlx0fVxuICAgMzA3XHRcbiAgIDMwOFx0Lyog5bem5L6n5Yy65Z+fICovXG4gICAzMDlcdC5sZWZ0LXNlY3Rpb24ge1xuICAgMzEwXHQgIGRpc3BsYXk6IGZsZXg7XG4gICAzMTFcdCAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDMxMlx0ICBmbGV4LXNocmluazogMDtcbiAgIDMxM1x0ICBtaW4td2lkdGg6IGZpdC1jb250ZW50O1xuICAgMzE0XHQgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgIDMxNVx0ICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICAgMzE2XHR9XG4gICAzMTdcdFxuICAgMzE4XHQvKiDkuK3pl7TljLrln58gKi9cbiAgIDMxOVx0LmNlbnRlci1zZWN0aW9uIHtcbiAgIDMyMFx0ICBmbGV4OiAwIDEgNTAwcHg7XG4gICAzMjFcdCAgbWluLXdpZHRoOiAzMDBweDtcbiAgIDMyMlx0ICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAzMjNcdH1cbiAgIDMyNFx0XG4gICAzMjVcdC8qIOWPs+S+p+WMuuWfnyAqL1xuICAgMzI2XHQucmlnaHQtc2VjdGlvbiB7XG4gICAzMjdcdCAgZGlzcGxheTogZmxleDtcbiAgIDMyOFx0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgMzI5XHQgIGdhcDogMjRweDtcbiAgIDMzMFx0ICBmbGV4LXNocmluazogMDtcbiAgIDMzMVx0ICBtaW4td2lkdGg6IGZpdC1jb250ZW50O1xuICAgMzMyXHQgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgMzMzXHR9XG4gICAzMzRcdFxuICAgMzM1XHQudXNlci1pbmZvIHtcbiAgIDMzNlx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMzM3XHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAzMzhcdCAgZ2FwOiAyNHB4O1xuICAgMzM5XHQgIGhlaWdodDogNjRweDtcbiAgIDM0MFx0ICBmbGV4LXNocmluazogMDtcbiAgIDM0MVx0fVxuICAgMzQyXHRcbiAgIDM0M1x0LnVzZXItYXZhdGFyIHtcbiAgIDM0NFx0ICBjdXJzb3I6IHBvaW50ZXI7XG4gICAzNDVcdCAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgIDM0Nlx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMzQ3XHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAzNDhcdCAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAzNDlcdCAgcGFkZGluZzogNHB4O1xuICAgMzUwXHQgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgIDM1MVx0ICB3aWR0aDogNTBweDtcbiAgIDM1Mlx0ICBoZWlnaHQ6IDUwcHg7XG4gICAzNTNcdH1cbiAgIDM1NFx0XG4gICAzNTVcdC5oZWFkZXI6bm90KC5oZWFkZXItc2Nyb2xsZWQpIC51c2VyLWF2YXRhcjpob3ZlciB7XG4gICAzNTZcdCAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDEsIDI0MiwgMjQzLCAwLjEpO1xuICAgMzU3XHR9XG4gICAzNThcdFxuICAgMzU5XHQuaGVhZGVyLXNjcm9sbGVkIC51c2VyLWF2YXRhcjpob3ZlciB7XG4gICAzNjBcdCAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjJmMztcbiAgIDM2MVx0fVxuICAgMzYyXHRcbiAgIDM2M1x0LnVzZXItaWNvbnMge1xuICAgMzY0XHQgIGRpc3BsYXk6IGZsZXg7XG4gICAzNjVcdCAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDM2Nlx0ICBnYXA6IDIwcHg7XG4gICAzNjdcdCAgaGVpZ2h0OiAxMDAlO1xuICAgMzY4XHQgIGZsZXgtc2hyaW5rOiAwO1xuICAgMzY5XHR9XG4gICAzNzBcdFxuICAgMzcxXHQudXNlci1pY29ucyAuZWwtaWNvbiB7XG4gICAzNzJcdCAgY3Vyc29yOiBwb2ludGVyO1xuICAgMzczXHQgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAzNzRcdCAgcGFkZGluZzogNHB4O1xuICAgMzc1XHQgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgIDM3Nlx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMzc3XHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAzNzhcdCAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAzNzlcdCAgY29sb3I6ICNmZmY7XG4gICAzODBcdCAgdGV4dC1zaGFkb3c6IDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAzODFcdH1cbiAgIDM4Mlx0XG4gICAzODNcdC5oZWFkZXI6bm90KC5oZWFkZXItc2Nyb2xsZWQpIC51c2VyLWljb25zIC5lbC1pY29uIHtcbiAgIDM4NFx0ICBjb2xvcjogI2ZmZjtcbiAgIDM4NVx0ICB0ZXh0LXNoYWRvdzogMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgIDM4Nlx0fVxuICAgMzg3XHRcbiAgIDM4OFx0LnVzZXItaWNvbnMgLmVsLWljb246aG92ZXIge1xuICAgMzg5XHQgIGNvbG9yOiAjMDBhZWVjO1xuICAgMzkwXHQgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQxLCAyNDIsIDI0MywgMC4xKTtcbiAgIDM5MVx0fVxuICAgMzkyXHRcbiAgIDM5M1x0LmhlYWRlci1zY3JvbGxlZCAudXNlci1pY29ucyAuZWwtaWNvbjpob3ZlciB7XG4gICAzOTRcdCAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjJmMztcbiAgIDM5NVx0fVxuICAgMzk2XHRcbiAgIDM5N1x0LnVwbG9hZC1zZWN0aW9uIHtcbiAgIDM5OFx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMzk5XHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICA0MDBcdCAgaGVpZ2h0OiA2NHB4O1xuICAgNDAxXHR9XG4gICA0MDJcdFxuICAgNDAzXHQudXBsb2FkLWJ0biB7XG4gICA0MDRcdCAgZGlzcGxheTogZmxleDtcbiAgIDQwNVx0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNDA2XHQgIGdhcDogNHB4O1xuICAgNDA3XHQgIGhlaWdodDogMzJweDtcbiAgIDQwOFx0ICBwYWRkaW5nOiAwIDEycHg7XG4gICA0MDlcdCAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgNDEwXHQgIGZvbnQtc2l6ZTogMTRweDtcbiAgIDQxMVx0ICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgNDEyXHQgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUxLCAxMTQsIDE1MywgMC45KTtcbiAgIDQxM1x0ICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgNDE0XHQgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig0cHgpO1xuICAgNDE1XHQgIGNvbG9yOiAjZmZmO1xuICAgNDE2XHR9XG4gICA0MTdcdFxuICAgNDE4XHQuaGVhZGVyLXNjcm9sbGVkIC51cGxvYWQtYnRuIHtcbiAgIDQxOVx0ICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmI3Mjk5O1xuICAgNDIwXHR9XG4gICA0MjFcdFxuICAgNDIyXHQubWVzc2FnZS1iYWRnZSA6ZGVlcCguZWwtYmFkZ2VfX2NvbnRlbnQpIHtcbiAgIDQyM1x0ICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmI3Mjk5O1xuICAgNDI0XHQgIGJvcmRlcjogbm9uZTtcbiAgIDQyNVx0ICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgzMCUsIC0zMCUpO1xuICAgNDI2XHR9XG4gICA0MjdcdFxuICAgNDI4XHQuY2FtZXJhLWljb24ge1xuICAgNDI5XHQgIGZvbnQtc2l6ZTogMTZweDtcbiAgIDQzMFx0fVxuICAgNDMxXHRcbiAgIDQzMlx0LmJ0bi10ZXh0IHtcbiAgIDQzM1x0ICBtYXJnaW4tbGVmdDogMnB4O1xuICAgNDM0XHR9XG4gICA0MzVcdFxuICAgNDM2XHQubG9nbyB7XG4gICA0MzdcdCAgZGlzcGxheTogZmxleDtcbiAgIDQzOFx0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNDM5XHQgIGdhcDogNnB4O1xuICAgNDQwXHQgIGN1cnNvcjogcG9pbnRlcjtcbiAgIDQ0MVx0fVxuICAgNDQyXHRcbiAgIDQ0M1x0LnR2LWljb24ge1xuICAgNDQ0XHQgIGJhY2tncm91bmQtY29sb3I6ICNmYjcyOTk7XG4gICA0NDVcdCAgd2lkdGg6IDI4cHg7XG4gICA0NDZcdCAgaGVpZ2h0OiAyOHB4O1xuICAgNDQ3XHQgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgIDQ0OFx0ICBkaXNwbGF5OiBmbGV4O1xuICAgNDQ5XHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICA0NTBcdCAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICA0NTFcdH1cbiAgIDQ1Mlx0XG4gICA0NTNcdC50di1pY29uIC5lbC1pY29uIHtcbiAgIDQ1NFx0ICBmb250LXNpemU6IDIwcHg7XG4gICA0NTVcdCAgY29sb3I6IHdoaXRlO1xuICAgNDU2XHR9XG4gICA0NTdcdFxuICAgNDU4XHQubG9nby10ZXh0IHtcbiAgIDQ1OVx0ICBmb250LXNpemU6IDIwcHg7XG4gICA0NjBcdCAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICA0NjFcdCAgY29sb3I6ICNmZmY7XG4gICA0NjJcdCAgZm9udC1mYW1pbHk6IFwiTWljcm9zb2Z0IFlhSGVpXCIsIHNhbnMtc2VyaWY7XG4gICA0NjNcdCAgdGV4dC1zaGFkb3c6IDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICA0NjRcdCAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlO1xuICAgNDY1XHR9XG4gICA0NjZcdFxuICAgNDY3XHQuaGVhZGVyOm5vdCguaGVhZGVyLXNjcm9sbGVkKSAubG9nby10ZXh0IHtcbiAgIDQ2OFx0ICBjb2xvcjogI2ZmZjtcbiAgIDQ2OVx0ICB0ZXh0LXNoYWRvdzogMCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgIDQ3MFx0fVxuICAgNDcxXHRcbiAgIDQ3Mlx0Lm5hdi1saW5rcyB7XG4gICA0NzNcdCAgZGlzcGxheTogZmxleDtcbiAgIDQ3NFx0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNDc1XHQgIG1hcmdpbi1sZWZ0OiA0MHB4O1xuICAgNDc2XHQgIGdhcDogMzBweDtcbiAgIDQ3N1x0ICBoZWlnaHQ6IDY0cHg7XG4gICA0NzhcdCAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgIDQ3OVx0fVxuICAgNDgwXHRcbiAgIDQ4MVx0Lm5hdi1pdGVtIHtcbiAgIDQ4Mlx0ICBmb250LXNpemU6IDE0cHg7XG4gICA0ODNcdCAgY29sb3I6ICNmZmY7XG4gICA0ODRcdCAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgNDg1XHQgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICA0ODZcdCAgaGVpZ2h0OiA2NHB4O1xuICAgNDg3XHQgIGxpbmUtaGVpZ2h0OiA2NHB4O1xuICAgNDg4XHQgIHBhZGRpbmc6IDAgMTJweDtcbiAgIDQ4OVx0ICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICA0OTBcdCAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgIDQ5MVx0ICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgNDkyXHQgIHRleHQtc2hhZG93OiAwIDFweCA0cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgNDkzXHR9XG4gICA0OTRcdFxuICAgNDk1XHQuaGVhZGVyOm5vdCguaGVhZGVyLXNjcm9sbGVkKSAubmF2LWl0ZW0ge1xuICAgNDk2XHQgIGNvbG9yOiAjZmZmO1xuICAgNDk3XHQgIHRleHQtc2hhZG93OiAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgNDk4XHR9XG4gICA0OTlcdFxuICAgNTAwXHQubmF2LWl0ZW06aG92ZXIge1xuICAgNTAxXHQgIGNvbG9yOiAjZmI3Mjk5O1xuICAgNTAyXHR9XG4gICA1MDNcdFxuICAgNTA0XHQubmF2LWl0ZW0uYWN0aXZlIHtcbiAgIDUwNVx0ICBjb2xvcjogI2ZiNzI5OTtcbiAgIDUwNlx0fVxuICAgNTA3XHRcbiAgIDUwOFx0Lm5hdi1pdGVtLmFjdGl2ZTo6YWZ0ZXIge1xuICAgNTA5XHQgIGNvbnRlbnQ6ICcnO1xuICAgNTEwXHQgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgIDUxMVx0ICBib3R0b206IDA7XG4gICA1MTJcdCAgbGVmdDogMDtcbiAgIDUxM1x0ICB3aWR0aDogMTAwJTtcbiAgIDUxNFx0ICBoZWlnaHQ6IDJweDtcbiAgIDUxNVx0ICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmI3Mjk5O1xuICAgNTE2XHQgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcbiAgIDUxN1x0fVxuICAgNTE4XHRcbiAgIDUxOVx0LnVzZXItYXZhdGFyOmhvdmVyIHtcbiAgIDUyMFx0ICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xuICAgNTIxXHQgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQxLCAyNDIsIDI0MywgMC4xKTtcbiAgIDUyMlx0fVxuICAgNTIzXHRcbiAgIDUyNFx0OmRlZXAoLmVsLW1lbnUtLWhvcml6b250YWwgPiAuZWwtbWVudS1pdGVtKSB7XG4gICA1MjVcdCAgaGVpZ2h0OiA2NHB4O1xuICAgNTI2XHQgIGxpbmUtaGVpZ2h0OiA2NHB4O1xuICAgNTI3XHQgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICA1MjhcdCAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgIDUyOVx0fVxuICAgNTMwXHRcbiAgIDUzMVx0OmRlZXAoLmVsLW1lbnUtLWhvcml6b250YWwgPiAuZWwtbWVudS1pdGVtLmlzLWFjdGl2ZSkge1xuICAgNTMyXHQgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmI3Mjk5O1xuICAgNTMzXHQgIGNvbG9yOiAjZmI3Mjk5O1xuICAgNTM0XHQgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgNTM1XHQgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcbiAgIDUzNlx0fVxuICAgNTM3XHRcbiAgIDUzOFx0OmRlZXAoLmVsLWJ1dHRvbi0tcHJpbWFyeSkge1xuICAgNTM5XHQgIGJhY2tncm91bmQtY29sb3I6ICNmYjcyOTk7XG4gICA1NDBcdCAgYm9yZGVyLWNvbG9yOiAjZmI3Mjk5O1xuICAgNTQxXHQgIGNvbG9yOiAjZmZmO1xuICAgNTQyXHR9XG4gICA1NDNcdFxuICAgNTQ0XHQ6ZGVlcCguZWwtYnV0dG9uLS1wcmltYXJ5OmhvdmVyKSB7XG4gICA1NDVcdCAgYmFja2dyb3VuZC1jb2xvcjogI2ZjOGJhYjtcbiAgIDU0Nlx0ICBib3JkZXItY29sb3I6ICNmYzhiYWI7XG4gICA1NDdcdH1cbiAgIDU0OFx0XG4gICA1NDlcdDpkZWVwKC5lbC1hdmF0YXIpIHtcbiAgIDU1MFx0ICBib3JkZXI6IDJweCBzb2xpZCAjZmZmO1xuICAgNTUxXHQgIGJveC1zaGFkb3c6IDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICA1NTJcdH1cbiAgIDU1M1x0XG4gICA1NTRcdC8qIOa3u+WKoOWTjeW6lOW8j+W4g+WxgCAqL1xuICAgNTU1XHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgIDU1Nlx0ICAuaGVhZGVyLWNvbnRlbnQge1xuICAgNTU3XHQgICAgcGFkZGluZzogMCAxNnB4O1xuICAgNTU4XHQgIH1cbiAgIDU1OVx0XG4gICA1NjBcdCAgLm5hdi1saW5rcyB7XG4gICA1NjFcdCAgICBnYXA6IDIwcHg7XG4gICA1NjJcdCAgfVxuICAgNTYzXHRcbiAgIDU2NFx0ICAvKiDlnKjovoPnqoTlsY/luZXkuIvpmpDol4/pg6jliIblr7zoiKrpobkgKi9cbiAgIDU2NVx0ICAubmF2LWxpbmtzIC5uYXYtaXRlbTpudGgtbGFzdC1jaGlsZChuKzMpIHtcbiAgIDU2Nlx0ICAgIGRpc3BsYXk6IG5vbmU7XG4gICA1NjdcdCAgfVxuICAgNTY4XHR9XG4gICA1NjlcdFxuICAgNTcwXHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICAgNTcxXHQgIC5sb2dvLXRleHQge1xuICAgNTcyXHQgICAgZGlzcGxheTogbm9uZTsgLyog6ZqQ6JePbG9nb+aWh+WtlyAqL1xuICAgNTczXHQgIH1cbiAgIDU3NFx0XG4gICA1NzVcdCAgLmNlbnRlci1zZWN0aW9uIHtcbiAgIDU3Nlx0ICAgIG1hcmdpbjogMCAxNnB4O1xuICAgNTc3XHQgICAgbWluLXdpZHRoOiAyMDBweDsgLyog5YeP5bCP5pyA5bCP5a695bqmICovXG4gICA1NzhcdCAgfVxuICAgNTc5XHRcbiAgIDU4MFx0ICAudXNlci1pY29ucyB7XG4gICA1ODFcdCAgICBnYXA6IDE2cHg7IC8qIOWHj+Wwj+Wbvuagh+mXtOi3nSAqL1xuICAgNTgyXHQgIH1cbiAgIDU4M1x0fVxuICAgNTg0XHRcbiAgIDU4NVx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgIDU4Nlx0ICAudXNlci1pY29ucyAuZWwtaWNvbjpudGgtbGFzdC1jaGlsZCgtbisyKSB7XG4gICA1ODdcdCAgICBkaXNwbGF5OiBub25lOyAvKiDpmpDol4/mnIDlkI7kuKTkuKrlm77moIcgKi9cbiAgIDU4OFx0ICB9XG4gICA1ODlcdFxuICAgNTkwXHQgIC5tb2JpbGUtc2VhcmNoLWJ0biB7XG4gICA1OTFcdCAgICBkaXNwbGF5OiBmbGV4O1xuICAgNTkyXHQgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgIDU5M1x0ICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgNTk0XHQgICAgd2lkdGg6IDQwcHg7XG4gICA1OTVcdCAgICBoZWlnaHQ6IDQwcHg7XG4gICA1OTZcdCAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgIDU5N1x0ICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgIDU5OFx0ICAgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yLCAjMTgxOTFjKTtcbiAgIDU5OVx0ICB9XG4gICA2MDBcdFxuICAgNjAxXHQgIC5tb2JpbGUtc2VhcmNoIHtcbiAgIDYwMlx0ICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgIDYwM1x0ICAgIHRvcDogMDtcbiAgIDYwNFx0ICAgIGxlZnQ6IDA7XG4gICA2MDVcdCAgICByaWdodDogMDtcbiAgIDYwNlx0ICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICA2MDdcdCAgICBwYWRkaW5nOiA4cHggMTZweDtcbiAgIDYwOFx0ICAgIHotaW5kZXg6IDEwMDI7XG4gICA2MDlcdCAgICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgNjEwXHQgIH1cbiAgIDYxMVx0XG4gICA2MTJcdCAgLm1vYmlsZS1zZWFyY2gtaGVhZGVyIHtcbiAgIDYxM1x0ICAgIGRpc3BsYXk6IGZsZXg7XG4gICA2MTRcdCAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNjE1XHQgICAgZ2FwOiAxMnB4O1xuICAgNjE2XHQgIH1cbiAgIDYxN1x0XG4gICA2MThcdCAgLmJhY2staWNvbiB7XG4gICA2MTlcdCAgICBmb250LXNpemU6IDI0cHg7XG4gICA2MjBcdCAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICA2MjFcdCAgICBjb2xvcjogIzE4MTkxYztcbiAgIDYyMlx0ICB9XG4gICA2MjNcdH1cbiAgIDYyNFx0XG4gICA2MjVcdC8qIOS/ruaUueWvvOiIqumTvuaOpeminOiJsiAqL1xuICAgNjI2XHQubmF2LWxpbmtzIGEge1xuICAgNjI3XHQgIGNvbG9yOiB2YXIoLS1oZWFkZXItdGV4dC1jb2xvciwgI2ZmZik7XG4gICA2MjhcdCAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgNjI5XHQgIHBhZGRpbmc6IDhweCAxNnB4O1xuICAgNjMwXHQgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgIDYzMVx0ICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgIDYzMlx0fVxuICAgNjMzXHRcbiAgIDYzNFx0Lm5hdi1saW5rcyBhOmhvdmVyLFxuICAgNjM1XHQubmF2LWxpbmtzIGEuYWN0aXZlIHtcbiAgIDYzNlx0ICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1oZWFkZXItaG92ZXItYmcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKSk7XG4gICA2MzdcdH1cbiAgIDYzOFx0XG4gICA2MzlcdC5oZWFkZXItc2Nyb2xsZWQgLm5hdi1saW5rcyBhOmhvdmVyLFxuICAgNjQwXHQuaGVhZGVyLXNjcm9sbGVkIC5uYXYtbGlua3MgYS5hY3RpdmUge1xuICAgNjQxXHQgIC0taGVhZGVyLWhvdmVyLWJnOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICAgNjQyXHR9XG4gICA2NDNcdFxuICAgNjQ0XHQvKiDmkJzntKLmoYbmoLflvI/pgILphY0gKi9cbiAgIDY0NVx0LmhlYWRlci1zY3JvbGxlZCA6ZGVlcCguc2VhcmNoLWlucHV0IC5lbC1pbnB1dF9faW5uZXIpIHtcbiAgIDY0Nlx0ICBiYWNrZ3JvdW5kOiAjZjFmMmYzO1xuICAgNjQ3XHQgIGNvbG9yOiAjMTgxOTFjO1xuICAgNjQ4XHR9XG4gICA2NDlcdFxuICAgNjUwXHQuaGVhZGVyLXNjcm9sbGVkIDpkZWVwKC5zZWFyY2gtaW5wdXQgLmVsLWlucHV0X19pbm5lcjo6cGxhY2Vob2xkZXIpIHtcbiAgIDY1MVx0ICBjb2xvcjogIzk0OTlhMDtcbiAgIDY1Mlx0fVxuICAgNjUzXHRcbiAgIDY1NFx0LyogTG9nbyDmloflrZfpopzoibLpgILphY0gKi9cbiAgIDY1NVx0LmhlYWRlci1zY3JvbGxlZCAubG9nby10ZXh0IHtcbiAgIDY1Nlx0ICBjb2xvcjogIzE4MTkxYztcbiAgIDY1N1x0fVxuICAgNjU4XHRcbiAgIDY1OVx0Lyog55So5oi35aS05YOP6L655qGG6YCC6YWNICovXG4gICA2NjBcdC5oZWFkZXItc2Nyb2xsZWQgOmRlZXAoLmVsLWF2YXRhcikge1xuICAgNjYxXHQgIGJvcmRlci1jb2xvcjogI2YxZjJmMztcbiAgIDY2Mlx0fVxuICAgNjYzXHRcbiAgIDY2NFx0LmhlYWRlci1zY3JvbGxlZCAubmF2LWl0ZW0ge1xuICAgNjY1XHQgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yLCAjMTgxOTFjKTtcbiAgIDY2Nlx0fVxuICAgNjY3XHRcbiAgIDY2OFx0Lyog5re75Yqg56e75Yqo56uv5qC35byPICovXG4gICA2NjlcdC5tb2JpbGUtbWVudS1idG4ge1xuICAgNjcwXHQgIGRpc3BsYXk6IG5vbmU7XG4gICA2NzFcdCAgZm9udC1zaXplOiAyNHB4O1xuICAgNjcyXHQgIGN1cnNvcjogcG9pbnRlcjtcbiAgIDY3M1x0ICBtYXJnaW4tbGVmdDogMTZweDtcbiAgIDY3NFx0fVxuICAgNjc1XHRcbiAgIDY3Nlx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgIDY3N1x0ICAuaGVhZGVyLWNvbnRlbnQge1xuICAgNjc4XHQgICAgcGFkZGluZzogMCAxNnB4O1xuICAgNjc5XHQgICAgZGlzcGxheTogZmxleDtcbiAgIDY4MFx0ICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICA2ODFcdCAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICA2ODJcdCAgfVxuICAgNjgzXHRcbiAgIDY4NFx0ICAubW9iaWxlLXNlYXJjaC1idG4ge1xuICAgNjg1XHQgICAgZGlzcGxheTogZmxleDtcbiAgIDY4Nlx0ICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICA2ODdcdCAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgIDY4OFx0ICAgIHdpZHRoOiA0MHB4O1xuICAgNjg5XHQgICAgaGVpZ2h0OiA0MHB4O1xuICAgNjkwXHQgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgNjkxXHQgICAgY29sb3I6IHZhcigtLXRleHQtY29sb3IsICMxODE5MWMpO1xuICAgNjkyXHQgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICA2OTNcdCAgfVxuICAgNjk0XHRcbiAgIDY5NVx0ICAubG9nby10ZXh0IHtcbiAgIDY5Nlx0ICAgIGRpc3BsYXk6IG5vbmU7XG4gICA2OTdcdCAgfVxuICAgNjk4XHRcbiAgIDY5OVx0ICAubGVmdC1zZWN0aW9uIHtcbiAgIDcwMFx0ICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgNzAxXHQgICAgZGlzcGxheTogZmxleDtcbiAgIDcwMlx0ICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICA3MDNcdCAgfVxuICAgNzA0XHRcbiAgIDcwNVx0ICAucmlnaHQtc2VjdGlvbiB7XG4gICA3MDZcdCAgICBmbGV4OiAwIDAgYXV0bztcbiAgIDcwN1x0ICAgIGRpc3BsYXk6IGZsZXg7XG4gICA3MDhcdCAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNzA5XHQgIH1cbiAgIDcxMFx0fVxuICAgNzExXHRcbiAgIDcxMlx0Lyog56e75Yqo56uv6I+c5Y2V5qC35byPICovXG4gICA3MTNcdC5tb2JpbGUtbWVudS1jb250ZW50IHtcbiAgIDcxNFx0ICBwYWRkaW5nOiAwO1xuICAgNzE1XHQgIGhlaWdodDogMTAwJTtcbiAgIDcxNlx0ICBkaXNwbGF5OiBmbGV4O1xuICAgNzE3XHQgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICA3MThcdH1cbiAgIDcxOVx0XG4gICA3MjBcdC5kcmF3ZXItaGVhZGVyIHtcbiAgIDcyMVx0ICBwYWRkaW5nOiAxNnB4O1xuICAgNzIyXHQgIGRpc3BsYXk6IGZsZXg7XG4gICA3MjNcdCAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgIDcyNFx0ICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2YxZjJmMztcbiAgIDcyNVx0fVxuICAgNzI2XHRcbiAgIDcyN1x0LmNsb3NlLWljb24ge1xuICAgNzI4XHQgIGZvbnQtc2l6ZTogMjRweDtcbiAgIDcyOVx0ICBjdXJzb3I6IHBvaW50ZXI7XG4gICA3MzBcdCAgY29sb3I6ICMxODE5MWM7XG4gICA3MzFcdCAgcGFkZGluZzogOHB4O1xuICAgNzMyXHQgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgIDczM1x0ICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgIDczNFx0fVxuICAgNzM1XHRcbiAgIDczNlx0LmNsb3NlLWljb246aG92ZXIge1xuICAgNzM3XHQgIGJhY2tncm91bmQtY29sb3I6ICNmMWYyZjM7XG4gICA3MzhcdH1cbiAgIDczOVx0XG4gICA3NDBcdC5tb2JpbGUtdXNlci1pbmZvIHtcbiAgIDc0MVx0ICBkaXNwbGF5OiBmbGV4O1xuICAgNzQyXHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICA3NDNcdCAgZ2FwOiAxNnB4O1xuICAgNzQ0XHQgIHBhZGRpbmc6IDIwcHg7XG4gICA3NDVcdCAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmMWYyZjM7XG4gICA3NDZcdH1cbiAgIDc0N1x0XG4gICA3NDhcdC5tb2JpbGUtbmF2LWxpbmtzIHtcbiAgIDc0OVx0ICBwYWRkaW5nOiAxNnB4O1xuICAgNzUwXHQgIGRpc3BsYXk6IGZsZXg7XG4gICA3NTFcdCAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgIDc1Mlx0ICBnYXA6IDhweDtcbiAgIDc1M1x0fVxuICAgNzU0XHRcbiAgIDc1NVx0Lm1vYmlsZS1uYXYtaXRlbSB7XG4gICA3NTZcdCAgZGlzcGxheTogZmxleDtcbiAgIDc1N1x0ICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgNzU4XHQgIGdhcDogMTJweDtcbiAgIDc1OVx0ICBwYWRkaW5nOiAxNnB4O1xuICAgNzYwXHQgIGNvbG9yOiAjMTgxOTFjO1xuICAgNzYxXHQgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgIDc2Mlx0ICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICA3NjNcdCAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICA3NjRcdCAgXG4gICA3NjVcdCAgLmVsLWljb24ge1xuICAgNzY2XHQgICAgZm9udC1zaXplOiAyMHB4O1xuICAgNzY3XHQgIH1cbiAgIDc2OFx0ICBcbiAgIDc2OVx0ICAmOmhvdmVyIHtcbiAgIDc3MFx0ICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY3Zjg7XG4gICA3NzFcdCAgfVxuICAgNzcyXHQgIFxuICAgNzczXHQgICYucm91dGVyLWxpbmstYWN0aXZlIHtcbiAgIDc3NFx0ICAgIGNvbG9yOiAjZmI3Mjk5O1xuICAgNzc1XHQgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjFmNTtcbiAgIDc3Nlx0ICAgIFxuICAgNzc3XHQgICAgLmVsLWljb24ge1xuICAgNzc4XHQgICAgICBjb2xvcjogI2ZiNzI5OTtcbiAgIDc3OVx0ICAgIH1cbiAgIDc4MFx0ICB9XG4gICA3ODFcdH1cbiAgIDc4Mlx0XG4gICA3ODNcdEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICA3ODRcdCAgLm1vYmlsZS1tZW51LWJ0biB7XG4gICA3ODVcdCAgICBkaXNwbGF5OiBibG9jaztcbiAgIDc4Nlx0ICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xuICAgNzg3XHQgIH1cbiAgIDc4OFx0ICBcbiAgIDc4OVx0ICA6ZGVlcCguZWwtZHJhd2VyKSB7XG4gICA3OTBcdCAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgNzkxXHQgIH1cbiAgIDc5Mlx0fVxuICAgNzkzXHQ8L3N0eWxlPlxuVG90YWwgbGluZXMgaW4gZmlsZTogNzkzXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCIzYTliYjY5Yi1jNTkyLTQzYmItOTVjMi0zNTVhZmZiNThmMTE7dG9vbHVfMDFDNEpnVG5IOEc2YTJSVnZoeWVENWZRIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL3JvdXRlci9pbmRleC5qczpcbiAgICAgMVx0aW1wb3J0IHsgY3JlYXRlUm91dGVyLCBjcmVhdGVXZWJIaXN0b3J5IH0gZnJvbSAndnVlLXJvdXRlcidcbiAgICAgMlx0aW1wb3J0IEhvbWUgZnJvbSAnQC92aWV3cy9Ib21lLnZ1ZSdcbiAgICAgM1x0aW1wb3J0IFVzZXJDZW50ZXIgZnJvbSAnQC9jb21wb25lbnRzL3VzZXIvVXNlckNlbnRlci52dWUnXG4gICAgIDRcdGltcG9ydCBTZWFyY2hSZXN1bHQgZnJvbSAnQC92aWV3cy9TZWFyY2hSZXN1bHQudnVlJ1xuICAgICA1XHRpbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXG4gICAgIDZcdFxuICAgICA3XHRjb25zdCByb3V0ZXMgPSBbXG4gICAgIDhcdCAge1xuICAgICA5XHQgICAgcGF0aDogJy8nLFxuICAgIDEwXHQgICAgbmFtZTogJ0hvbWUnLFxuICAgIDExXHQgICAgY29tcG9uZW50OiBIb21lXG4gICAgMTJcdCAgfSxcbiAgICAxM1x0ICB7XG4gICAgMTRcdCAgICBwYXRoOiAnL3NlYXJjaCcsXG4gICAgMTVcdCAgICBuYW1lOiAnU2VhcmNoUmVzdWx0JyxcbiAgICAxNlx0ICAgIGNvbXBvbmVudDogU2VhcmNoUmVzdWx0XG4gICAgMTdcdCAgfSxcbiAgICAxOFx0ICB7XG4gICAgMTlcdCAgICBwYXRoOiAnL3VzZXItY2VudGVyJyxcbiAgICAyMFx0ICAgIG5hbWU6ICd1c2VyQ2VudGVyJyxcbiAgICAyMVx0ICAgIGNvbXBvbmVudDogVXNlckNlbnRlcixcbiAgICAyMlx0ICAgIG1ldGE6IHsgcmVxdWlyZXNBdXRoOiB0cnVlIH1cbiAgICAyM1x0ICB9LFxuICAgIDI0XHQgIHtcbiAgICAyNVx0ICAgIHBhdGg6ICcvdmlkZW8vOmlkJyxcbiAgICAyNlx0ICAgIG5hbWU6ICdWaWRlb0RldGFpbCcsXG4gICAgMjdcdCAgICBjb21wb25lbnQ6ICgpID0+IGltcG9ydCgnQC9jb21wb25lbnRzL3ZpZGVvL1ZpZGVvRGV0YWlsLnZ1ZScpXG4gICAgMjhcdCAgfSxcbiAgICAyOVx0ICB7XG4gICAgMzBcdCAgICBwYXRoOiAnL3Jlc2V0LXBhc3N3b3JkJyxcbiAgICAzMVx0ICAgIG5hbWU6ICdSZXNldFBhc3N3b3JkJyxcbiAgICAzMlx0ICAgIGNvbXBvbmVudDogKCkgPT4gaW1wb3J0KCdAL2NvbXBvbmVudHMvUmVzZXRQYXNzd29yZC52dWUnKVxuICAgIDMzXHQgIH0sXG4gICAgMzRcdCAge1xuICAgIDM1XHQgICAgcGF0aDogJy9jaGF0JyxcbiAgICAzNlx0ICAgIG5hbWU6ICdDaGF0JyxcbiAgICAzN1x0ICAgIGNvbXBvbmVudDogKCkgPT4gaW1wb3J0KCdAL3ZpZXdzL1VzZXJDaGF0LnZ1ZScpLFxuICAgIDM4XHQgICAgbWV0YTogeyByZXF1aXJlc0F1dGg6IHRydWUgfVxuICAgIDM5XHQgIH0sXG4gICAgNDBcdCAge1xuICAgIDQxXHQgICAgcGF0aDogJy91c2VyJyxcbiAgICA0Mlx0ICAgIG5hbWU6ICdVc2VySG9tZScsXG4gICAgNDNcdCAgICBjb21wb25lbnQ6ICgpID0+IGltcG9ydCgnQC92aWV3cy9Vc2VySG9tZS52dWUnKVxuICAgIDQ0XHQgIH0sXG4gICAgNDVcdCAge1xuICAgIDQ2XHQgICAgcGF0aDogJy9hbm5vdW5jZW1lbnQvOmlkJyxcbiAgICA0N1x0ICAgIG5hbWU6ICdBbm5vdW5jZW1lbnREZXRhaWwnLFxuICAgIDQ4XHQgICAgY29tcG9uZW50OiAoKSA9PiBpbXBvcnQoJ0Avdmlld3MvQW5ub3VuY2VtZW50RGV0YWlsLnZ1ZScpXG4gICAgNDlcdCAgfVxuICAgIDUwXHRdXG4gICAgNTFcdFxuICAgIDUyXHRjb25zdCByb3V0ZXIgPSBjcmVhdGVSb3V0ZXIoe1xuICAgIDUzXHQgIGhpc3Rvcnk6IGNyZWF0ZVdlYkhpc3RvcnkoaW1wb3J0Lm1ldGEuZW52LkJBU0VfVVJMKSxcbiAgICA1NFx0ICByb3V0ZXNcbiAgICA1NVx0fSlcbiAgICA1Nlx0XG4gICAgNTdcdC8vIOi3r+eUseWuiOWNq1xuICAgIDU4XHRyb3V0ZXIuYmVmb3JlRWFjaCgodG8sIGZyb20sIG5leHQpID0+IHtcbiAgICA1OVx0ICBjb25zdCB0b2tlblN0b3JlID0gdXNlVG9rZW5TdG9yZSgpXG4gICAgNjBcdCAgaWYgKHRvLm1ldGEucmVxdWlyZXNBdXRoICYmICF0b2tlblN0b3JlLnRva2VuKSB7XG4gICAgNjFcdCAgICBuZXh0KCcvJykgLy8g5pyq55m75b2V5pe26YeN5a6a5ZCR5Yiw6aaW6aG1XG4gICAgNjJcdCAgfSBlbHNlIHtcbiAgICA2M1x0ICAgIG5leHQoKVxuICAgIDY0XHQgIH1cbiAgICA2NVx0fSlcbiAgICA2Nlx0XG4gICAgNjdcdGV4cG9ydCBkZWZhdWx0IHJvdXRlclxuVG90YWwgbGluZXMgaW4gZmlsZTogNjdcbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjBjNDNhMDE3LTMxNjYtNDBkZC05NWNmLTM0MDUzNTdlMTUzNzt0b29sdV8wMTk2Nlg2azhMVnY4RW1CZE5od3I5VUsiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiRmlsZSBzYXZlZCBzdWNjZXNzZnVsbHkuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiNjQ1YWZjZmItYThmZS00MzFjLTlhYmMtNjc4NDZkMGY5M2IxO3Rvb2x1XzAxSlJ5MldlRE5YUlhZN2Nja25mYUxZQyI6eyJwaGFzZSI6NiwicmVzdWx0Ijp7InRleHQiOiJJbnZhbGlkIHBhcmFtZXRlciBgc3RyX3JlcGxhY2VfZW50cmllc2AgZm9yIGBzdHJfcmVwbGFjZWAgY29tbWFuZC4gSXQgbXVzdCBiZSBhbiBhcnJheSBvZiBvYmplY3RzLiIsImlzRXJyb3IiOnRydWUsInJlcXVlc3RJZCI6IiJ9fSwiMzg3ZGI5NTAtMzY2OC00N2Y4LTg5YjYtZWQ2OWE4NjNiY2FiO3Rvb2x1XzAxWUtNaXRuYlMzTVNZR1lFNkg3dUZUTiI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy9yb3V0ZXIvaW5kZXguanMuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICAgMVx0aW1wb3J0IHsgY3JlYXRlUm91dGVyLCBjcmVhdGVXZWJIaXN0b3J5IH0gZnJvbSAndnVlLXJvdXRlcidcbiAgICAgMlx0aW1wb3J0IEhvbWUgZnJvbSAnQC92aWV3cy9Ib21lLnZ1ZSdcbiAgICAgM1x0aW1wb3J0IFVzZXJDZW50ZXIgZnJvbSAnQC9jb21wb25lbnRzL3VzZXIvVXNlckNlbnRlci52dWUnXG4gICAgIDRcdGltcG9ydCBTZWFyY2hSZXN1bHQgZnJvbSAnQC92aWV3cy9TZWFyY2hSZXN1bHQudnVlJ1xuICAgICA1XHRpbXBvcnQgTWVzc2FnZUNlbnRlciBmcm9tICdAL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlJ1xuICAgICA2XHRpbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXG4gICAgIDdcdFxuICAgICA4XHRjb25zdCByb3V0ZXMgPSBbXG4gICAgIDlcdCAge1xuICAgIDEwXHQgICAgcGF0aDogJy8nLFxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCJiNTBmMzM1Ny1lN2NmLTRmNGUtYWFiNS01ZjRhOWI1N2U5Mjk7dG9vbHVfMDFHUllvZVFlSGJqWldpSzIzTjZEVlJqIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3JvdXRlci9pbmRleC5qcy5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDQyXHQgICAgcGF0aDogJy91c2VyJyxcbiAgICA0M1x0ICAgIG5hbWU6ICdVc2VySG9tZScsXG4gICAgNDRcdCAgICBjb21wb25lbnQ6ICgpID0+IGltcG9ydCgnQC92aWV3cy9Vc2VySG9tZS52dWUnKVxuICAgIDQ1XHQgIH0sXG4gICAgNDZcdCAge1xuICAgIDQ3XHQgICAgcGF0aDogJy9hbm5vdW5jZW1lbnQvOmlkJyxcbiAgICA0OFx0ICAgIG5hbWU6ICdBbm5vdW5jZW1lbnREZXRhaWwnLFxuICAgIDQ5XHQgICAgY29tcG9uZW50OiAoKSA9PiBpbXBvcnQoJ0Avdmlld3MvQW5ub3VuY2VtZW50RGV0YWlsLnZ1ZScpXG4gICAgNTBcdCAgfSxcbiAgICA1MVx0ICB7XG4gICAgNTJcdCAgICBwYXRoOiAnL21lc3NhZ2VzJyxcbiAgICA1M1x0ICAgIG5hbWU6ICdNZXNzYWdlQ2VudGVyJyxcbiAgICA1NFx0ICAgIGNvbXBvbmVudDogTWVzc2FnZUNlbnRlcixcbiAgICA1NVx0ICAgIG1ldGE6IHsgcmVxdWlyZXNBdXRoOiB0cnVlIH1cbiAgICA1Nlx0ICB9XG4gICAgNTdcdF1cbiAgICA1OFx0XG4gICAgNTlcdGNvbnN0IHJvdXRlciA9IGNyZWF0ZVJvdXRlcih7XG4gICAgNjBcdCAgaGlzdG9yeTogY3JlYXRlV2ViSGlzdG9yeShpbXBvcnQubWV0YS5lbnYuQkFTRV9VUkwpLFxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCJjZDNkY2I1YS0yNjk4LTQ2OGMtYjYzNy0wYzU0ZTRmYTlhMzY7dG9vbHVfMDFDV2JBUEFMMUFaTTlTNUFmZ0NmRzg5Ijp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL2NvbXBvbmVudHMvSGVhZGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDUwXHQgICAgICAgICAgPFVzZXJQb3BvdmVyIHYtaWY9XCJpc0xvZ2luXCIgLz5cbiAgICA1MVx0ICAgICAgICAgIDxkaXYgdi1lbHNlIGNsYXNzPVwidXNlci1hdmF0YXJcIiBAY2xpY2s9XCJzaG93TG9naW5EaWFsb2dcIj5cbiAgICA1Mlx0ICAgICAgICAgICAgPGVsLWF2YXRhciA6c2l6ZT1cIjQyXCIgc3JjPVwiaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZ1wiIC8+XG4gICAgNTNcdCAgICAgICAgICA8L2Rpdj5cbiAgICA1NFx0ICAgICAgICAgIDxkaXYgdi1pZj1cIiFpc01vYmlsZVwiIGNsYXNzPVwidXNlci1pY29uc1wiPlxuICAgIDU1XHQgICAgICAgICAgICA8ZWwtaWNvbiBAY2xpY2s9XCJnb1RvTWVzc2FnZXNcIj48TWVzc2FnZSAvPjwvZWwtaWNvbj5cbiAgICA1Nlx0ICAgICAgICAgICAgPGVsLWljb24+PFN0YXIgLz48L2VsLWljb24+XG4gICAgNTdcdCAgICAgICAgICAgIDxlbC1pY29uPjxDb2xsZWN0aW9uIC8+PC9lbC1pY29uPlxuICAgIDU4XHQgICAgICAgICAgICA8ZWwtaWNvbj48Q2xvY2sgLz48L2VsLWljb24+XG4gICAgNTlcdCAgICAgICAgICA8L2Rpdj5cbiAgICA2MFx0ICAgICAgICA8L2Rpdj5cbiAgICA2MVx0ICAgICAgICA8ZGl2IGNsYXNzPVwidXBsb2FkLXNlY3Rpb25cIiB2LWlmPVwiIWlzTW9iaWxlICYmICFpc1VwbG9hZFBhZ2VcIj5cbiAgICA2Mlx0ICAgICAgICAgIDxlbC1idXR0b24gY2xhc3M9XCJ1cGxvYWQtYnRuXCIgdHlwZT1cInByaW1hcnlcIiBAY2xpY2s9XCJnb1RvVXBsb2FkXCI+XG4gICAgNjNcdCAgICAgICAgICAgIDxlbC1pY29uIGNsYXNzPVwiY2FtZXJhLWljb25cIj48VmlkZW9DYW1lcmEgLz48L2VsLWljb24+XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjM2ZDQyYTE2LTZkNmYtNDFhMS1hOTBkLTY0MmU3ZThhNjEwMjt0b29sdV8wMUZMU3FDa3IyOUEyOW1TTnB2UkcyQnAiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvY29tcG9uZW50cy9IZWFkZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAyMzBcdCAgeyBuYW1lOiAn5raI5oGvJywgcGF0aDogJy9tZXNzYWdlcycsIGljb246ICdNZXNzYWdlJyB9LFxuICAgMjMxXHQgIHsgbmFtZTogJ+aUtuiXjycsIHBhdGg6ICcvZmF2b3JpdGVzJywgaWNvbjogJ1N0YXInIH1cbiAgIDIzMlx0XVxuICAgMjMzXHRcbiAgIDIzNFx0Y29uc3QgZ29Ub1VwbG9hZCA9ICgpID0+IHtcbiAgIDIzNVx0ICBpZiAoIWlzTG9naW4udmFsdWUpIHtcbiAgIDIzNlx0ICAgIC8vIOWmguaenOacqueZu+W9le+8jOaYvuekuueZu+W9leWvueivneahhlxuICAgMjM3XHQgICAgRWxNZXNzYWdlLmVycm9yKCfor7flhYjnmbvlvZUnKVxuICAgMjM4XHQgICAgbG9naW5EaWFsb2dWaXNpYmxlLnZhbHVlID0gdHJ1ZVxuICAgMjM5XHQgICAgcmV0dXJuXG4gICAyNDBcdCAgfVxuICAgMjQxXHQgIC8vIOi3s+i9rOWIsOS4quS6uuS4reW/g+eahOinhumikeWPkeW4g+mhtemdolxuICAgMjQyXHQgIHJvdXRlci5wdXNoKCcvdXNlci1jZW50ZXInKVxuICAgMjQzXHQgIC8vIOmAmui/hyBldmVudEJ1cyDlj5HpgIHkuovku7bvvIzpgJrnn6UgVXNlckNlbnRlciDnu4Tku7bmiZPlvIDop4bpopHlj5HluIPmir3lsYlcbiAgIDI0NFx0ICBldmVudEJ1cy5lbWl0KCdvcGVuVXBsb2FkRHJhd2VyJylcbiAgIDI0NVx0fVxuICAgMjQ2XHRcbiAgIDI0N1x0Ly8g6Lez6L2s5Yiw5raI5oGv5Lit5b+DXG4gICAyNDhcdGNvbnN0IGdvVG9NZXNzYWdlcyA9ICgpID0+IHtcbiAgIDI0OVx0ICBpZiAoIWlzTG9naW4udmFsdWUpIHtcbiAgIDI1MFx0ICAgIC8vIOWmguaenOacqueZu+W9le+8jOaYvuekuueZu+W9leWvueivneahhlxuICAgMjUxXHQgICAgRWxNZXNzYWdlLmVycm9yKCfor7flhYjnmbvlvZUnKVxuICAgMjUyXHQgICAgbG9naW5EaWFsb2dWaXNpYmxlLnZhbHVlID0gdHJ1ZVxuICAgMjUzXHQgICAgcmV0dXJuXG4gICAyNTRcdCAgfVxuICAgMjU1XHQgIC8vIOi3s+i9rOWIsOa2iOaBr+S4reW/g+mhtemdolxuICAgMjU2XHQgIHJvdXRlci5wdXNoKCcvbWVzc2FnZXMnKVxuICAgMjU3XHR9XG4gICAyNThcdFxuICAgMjU5XHQvLyDlnKggc2NyaXB0IHNldHVwIOmDqOWIhua3u+WKoOi3r+eUseebuOWFs+eahOiuoeeul+WxnuaAp1xuICAgMjYwXHRjb25zdCBpc1VwbG9hZFBhZ2UgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAyNjFcdCAgcmV0dXJuIHJvdXRlci5jdXJyZW50Um91dGUudmFsdWUucGF0aCA9PT0gJy91c2VyLWNlbnRlcidcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiYjA4ODRhNmMtYWY5NS00ODI3LWJhYWYtMjVkZjA4NTBmYzQ4O3Rvb2x1XzAxMURjTHVTWmh1alNhMTlHSnlIWWpXMSI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHNyYy9jb21wb25lbnRzL0hlYWRlci52dWU6XG4gICAyMjZcdGNvbnN0IG1vYmlsZU5hdkl0ZW1zID0gW1xuICAgMjI3XHQgIHsgbmFtZTogJ+mmlumhtScsIHBhdGg6ICcvJywgaWNvbjogJ0hvbWVGaWxsZWQnIH0sXG4gICAyMjhcdCAgeyBuYW1lOiAn55Wq5YmnJywgcGF0aDogJy9hbmltZScsIGljb246ICdWaWRlb1BsYXknIH0sXG4gICAyMjlcdCAgeyBuYW1lOiAn55u05pKtJywgcGF0aDogJy9saXZlJywgaWNvbjogJ1ZpZGVvQ2FtZXJhJyB9LFxuICAgMjMwXHQgIHsgbmFtZTogJ+a2iOaBrycsIHBhdGg6ICcvbWVzc2FnZXMnLCBpY29uOiAnTWVzc2FnZScgfSxcbiAgIDIzMVx0ICB7IG5hbWU6ICfmlLbol48nLCBwYXRoOiAnL2Zhdm9yaXRlcycsIGljb246ICdTdGFyJyB9XG4gICAyMzJcdF1cblRvdGFsIGxpbmVzIGluIGZpbGU6IDgwNVxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiNjU5OWE3YzQtY2Q2MC00ZTRjLWI2NjAtNmFjODU5MDE2MjBmO3Rvb2x1XzAxRTk1Z2pqdnJZUkxvN3ZTOGE5Z21QQyI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHNyYy9hcGkvdXNlci91c2VybWVzc2FnZS5qczpcbiAgICAgMVx0aW1wb3J0IHJlcXVlc3QgZnJvbSBcIkAvdXRpbHMvcmVxdWVzdFwiO1xuICAgICAyXHRcbiAgICAgM1x0Ly8g6I635Y+W55So5oi35raI5oGv5YiX6KGoXG4gICAgIDRcdGV4cG9ydCBjb25zdCBnZXRVc2VyTWVzc2FnZUxpc3RTZXJ2aWNlID0gKCkgPT4ge1xuICAgICA1XHQgICAgcmV0dXJuIHJlcXVlc3QuZ2V0KFwiL3VzZXIvbWVzc2FnZVwiKVxuICAgICA2XHR9XG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiA2XG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCIzZTlmM2RjMS0wNTc3LTQ0NmYtYThhMS1mNTBiNDIwN2E1NmM7dG9vbHVfMDFOZHYycjU0N1lwOWJ1U1pNd1J4eEMyIjp7InBoYXNlIjo2LCJyZXN1bHQiOnsidGV4dCI6IkZhaWxlZCB0byBlZGl0IHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS4gU2VlIGJlbG93IGZvciBkZXRhaWxzLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuTm8gcmVwbGFjZW1lbnQgd2FzIHBlcmZvcm1lZCwgb2xkU3RyIGRpZCBub3QgYXBwZWFyIHZlcmJhdGltIGluIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblRoZSBjb250ZW50IGluIHRoZSBzcGVjaWZpZWQgcmVnaW9uIGlzOlxuICAgMTA2XHRcbiAgIDEwN1x0Y29uc3QgbGlrZXMgPSByZWYoW1xuICAgMTA4XHQgIHtcbiAgIDEwOVx0ICAgIGlkOiAxLFxuICAgMTEwXHQgICAgdXNlcm5hbWU6ICfnlKjmiLdDJyxcbiAgIDExMVx0ICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuICAgMTEyXHQgICAgdGltZTogJzPlsI/ml7bliY0nLFxuICAgMTEzXHQgICAgY29udGVudDogJ+i1nuS6huS9oOeahOinhumikScsXG4gICAxMTRcdCAgICBzb3VyY2U6IHtcbiAgIDExNVx0ICAgICAgdGl0bGU6ICdKYXZhU2NyaXB05Z+656GA5pWZ56iLJyxcbiAgIDExNlx0ICAgICAgY29udGVudDogJ0phdmFTY3JpcHTmmK/nvZHpobXlvIDlj5HnmoTln7rnoYAuLi4nXG4gICAxMTdcdCAgICB9XG4gICAxMThcdCAgfVxuICAgMTE5XHRdKVxuICAgMTIwXHRcbiAgIDEyMVx0Y29uc3QgcmVwbGllcyA9IHJlZihbXG4gICAxMjJcdCAge1xuICAgMTIzXHQgICAgaWQ6IDEsXG4gICAxMjRcdCAgICB1c2VybmFtZTogJ+eUqOaIt0QnLFxuICAgMTI1XHQgICAgYXZhdGFyOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsXG4gICAxMjZcdCAgICB0aW1lOiAnMeWkqeWJjScsXG4gICAxMjdcdCAgICBjb250ZW50OiAn6L+Z5Liq5pWZ56iL6Z2e5bi45pyJ5biu5Yqp77yM6LCi6LCi5YiG5Lqr77yBJyxcbiAgIDEyOFx0ICAgIHNvdXJjZToge1xuICAgMTI5XHQgICAgICB0aXRsZTogJ0NTU+W4g+WxgOaKgOW3pycsXG4gICAxMzBcdCAgICAgIGNvbnRlbnQ6ICdDU1PluIPlsYDmmK/liY3nq6/lvIDlj5HnmoTph43opoHpg6jliIYuLi4nXG4gICAxMzFcdCAgICB9XG4gICAxMzJcdCAgfSxcbiAgIDEzM1x0ICB7XG4gICAxMzRcdCAgICBpZDogMixcbiAgIDEzNVx0ICAgIHVzZXJuYW1lOiAn55So5oi3RScsXG4gICAxMzZcdCAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcbiAgIDEzN1x0ICAgIHRpbWU6ICcy5aSp5YmNJyxcbiAgIDEzOFx0ICAgIGNvbnRlbnQ6ICfmiJHmjInnhafmlZnnqIvlgZrkuobvvIzkvYbpgYfliLDkuobkuIDkupvpl67popjvvIzog73luK7miJHnnIvnnIvlkJfvvJ8nLFxuICAgMTM5XHQgICAgc291cmNlOiB7XG4gICAxNDBcdCAgICAgIHRpdGxlOiAnVnVl57uE5Lu26YCa5L+hJyxcbiAgIDE0MVx0ICAgICAgY29udGVudDogJ1Z1Zee7hOS7tuS5i+mXtOeahOmAmuS/oeaWueW8j+acieWkmuenjS4uLidcbiAgIDE0Mlx0ICAgIH1cbiAgIDE0M1x0ICB9XG4gICAxNDRcdF0pXG4gICAxNDVcdFxuICAgMTQ2XHRjb25zdCBzeXN0ZW1Ob3RpY2VzID0gcmVmKFtcbiAgIDE0N1x0ICB7XG4gICAxNDhcdCAgICBpZDogMSxcbiAgIDE0OVx0ICAgIHRpbWU6ICcyMDIzLTA0LTE1JyxcbiAgIDE1MFx0ICAgIGNvbnRlbnQ6ICfmgqjnmoTotKblj7flt7LlrozmiJDlrp7lkI3orqTor4HvvIzmhJ/osKLmgqjnmoTphY3lkIjjgIInXG4gICAxNTFcdCAgfSxcbiAgIDE1Mlx0ICB7XG4gICAxNTNcdCAgICBpZDogMixcbiAgIDE1NFx0ICAgIHRpbWU6ICcyMDIzLTA0LTEwJyxcbiAgIDE1NVx0ICAgIGNvbnRlbnQ6ICfns7vnu5/lsIbkuo405pyIMjDml6Xov5vooYznu7TmiqTljYfnuqfvvIzlsYrml7blj6/og73kvJrlvbHlk43pg6jliIblip/og73nmoTkvb/nlKjjgIInXG4gICAxNTZcdCAgfVxuICAgMTU3XHRdKVxuICAgMTU4XHRcbiAgIDE1OVx0Ly8g5qC55o2u5b2T5YmN6YCJ5Lit55qE5qCH562+5Yqo5oCB6I635Y+W5raI5oGvXG4gICAxNjBcdGNvbnN0IGN1cnJlbnRNZXNzYWdlcyA9IGNvbXB1dGVkKCgpID0+IHtcbiAgIDE2MVx0ICBzd2l0Y2ggKGFjdGl2ZVRhYi52YWx1ZSkge1xuICAgMTYyXHQgICAgY2FzZSAnbWVudGlvbnMnOlxuICAgMTYzXHQgICAgICByZXR1cm4gbWVudGlvbnMudmFsdWVcbiAgIDE2NFx0ICAgIGNhc2UgJ2xpa2VzJzpcbiAgIDE2NVx0ICAgICAgcmV0dXJuIGxpa2VzLnZhbHVlXG4gICAxNjZcdCAgICBjYXNlICdyZXBsaWVzJzpcbiAgIDE2N1x0ICAgICAgcmV0dXJuIHJlcGxpZXMudmFsdWVcbiAgIDE2OFx0ICAgIGNhc2UgJ3N5c3RlbSc6XG4gICAxNjlcdCAgICAgIHJldHVybiBzeXN0ZW1Ob3RpY2VzLnZhbHVlXG4gICAxNzBcdCAgICBkZWZhdWx0OlxuICAgMTcxXHQgICAgICByZXR1cm4gW11cbiAgIDE3Mlx0ICB9XG4gICAxNzNcdH0pXG4gICAxNzRcdFxuICAgMTc1XHQvLyDoj5zljZXliIfmjaLkuovku7ZcbiAgIDE3Nlx0Y29uc3QgaGFuZGxlTWVudVNlbGVjdCA9IChrZXkpID0+IHtcbiAgIDE3N1x0ICBhY3RpdmVUYWIudmFsdWUgPSBrZXlcbiAgIDE3OFx0fVxuICAgMTc5XHQ8L3NjcmlwdD5cbiAgIDE4MFx0XG4gICAxODFcdDxzdHlsZSBzY29wZWQ+XG4gICAxODJcdC5tZXNzYWdlLWNlbnRlciB7XG4gICAxODNcdCAgZGlzcGxheTogZmxleDtcbiAgIDE4NFx0ICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgIDE4NVx0ICBtYXJnaW46IDgwcHggYXV0byA0MHB4O1xuICAgMTg2XHQgIHBhZGRpbmc6IDAgMjBweDtcbiAgIDE4N1x0fVxuICAgMTg4XHRcbiAgIDE4OVx0Lm1lc3NhZ2Utc2lkZWJhciB7XG4gICAxOTBcdCAgd2lkdGg6IDIwMHB4O1xuICAgMTkxXHQgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAxOTJcdCAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgMTkzXHQgIGJveC1zaGFkb3c6IDAgMnB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgIDE5NFx0ICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAxOTVcdH1cbiAgIDE5Nlx0XG4gICAxOTdcdC5tZXNzYWdlLW1lbnUge1xuICAgMTk4XHQgIGJvcmRlci1yaWdodDogbm9uZTtcbiAgIDE5OVx0fVxuICAgMjAwXHRcblxuRGlmZiBiZXR3ZWVuIG9sZFN0ciBhbmQgdGhlIHNwZWNpZmllZCByZWdpb24gaXM6XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4tLS0gb2xkU3RyXG4rKysgcmVnaW9uQ29udGVudFxuQEAgLTEsNDkgKzEsMyBAQFxuLTxzY3JpcHQgc2V0dXA+XG4taW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJ1xuLWltcG9ydCB7IEJlbGwgfSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcbi1pbXBvcnQgeyB1c2VUb2tlblN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvdG9rZW4nXG4taW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAndnVlLXJvdXRlcidcbi1cbi1jb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuLWNvbnN0IHRva2VuU3RvcmUgPSB1c2VUb2tlblN0b3JlKClcbi1jb25zdCBhY3RpdmVUYWIgPSByZWYoJ21lbnRpb25zJylcbi1cbi0vLyDmo4Dmn6XnlKjmiLfmmK/lkKbnmbvlvZVcbi1jb25zdCBpc0xvZ2luID0gcmVmKCEhdG9rZW5TdG9yZS50b2tlbilcbi1pZiAoIWlzTG9naW4udmFsdWUpIHtcbi0gIC8vIOWmguaenOacqueZu+W9le+8jOmHjeWumuWQkeWIsOmmlumhtVxuLSAgcm91dGVyLnB1c2goJy8nKVxuLX1cbi1cbi0vLyDmqKHmi5/mlbDmja4gLSDlrp7pmYXpobnnm67kuK3lupTor6Xku45BUEnojrflj5Zcbi1jb25zdCBtZW50aW9ucyA9IHJlZihbXG4tICB7XG4tICAgIGlkOiAxLFxuLSAgICB1c2VybmFtZTogJ+eUqOaIt0EnLFxuLSAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcbi0gICAgdGltZTogJzLlsI/ml7bliY0nLFxuLSAgICBjb250ZW50OiAnQOS9oCDov5nkuKrop4bpopHnnJ/kuI3plJnvvIEnLFxuLSAgICBzb3VyY2U6IHtcbi0gICAgICB0aXRsZTogJ+WmguS9leWtpuS5oOWJjeerr+W8gOWPkScsXG4tICAgICAgY29udGVudDogJ+WJjeerr+W8gOWPkeaYr+S4gOS4quS4jeaWreWtpuS5oOeahOi/h+eoiy4uLidcbi0gICAgfVxuLSAgfSxcbi0gIHtcbi0gICAgaWQ6IDIsXG4tICAgIHVzZXJuYW1lOiAn55So5oi3QicsXG4tICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuLSAgICB0aW1lOiAn5pio5aSpJyxcbi0gICAgY29udGVudDogJ0DkvaAg6IO95YiG5Lqr5LiA5LiL5a2m5Lmg6LWE5paZ5ZCX77yfJyxcbi0gICAgc291cmNlOiB7XG4tICAgICAgdGl0bGU6ICdWdWUuanPlrp7miJjmlZnnqIsnLFxuLSAgICAgIGNvbnRlbnQ6ICdWdWUuanPmmK/kuIDkuKrmtYHooYznmoTliY3nq6/moYbmnrYuLi4nXG4tICAgIH1cbi0gIH1cbi1dKVxuLVxuLWNvbnN0IGxpa2VzID0gcmVmKFtcbi0gIHtcbi0gICAgaWQ6IDEsXG4gICAgIHVzZXJuYW1lOiAn55So5oi3QycsXG4gICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuICAgICB0aW1lOiAnM+Wwj+aXtuWJjScsXG5AQCAtOTIsMyArNDYsNDIgQEBcbiAgICAgY29udGVudDogJ+ezu+e7n+WwhuS6jjTmnIgyMOaXpei/m+ihjOe7tOaKpOWNh+e6p++8jOWxiuaXtuWPr+iDveS8muW9seWTjemDqOWIhuWKn+iDveeahOS9v+eUqOOAgidcbiAgIH1cbiBdKVxuK1xuKy8vIOagueaNruW9k+WJjemAieS4reeahOagh+etvuWKqOaAgeiOt+WPlua2iOaBr1xuK2NvbnN0IGN1cnJlbnRNZXNzYWdlcyA9IGNvbXB1dGVkKCgpID0+IHtcbisgIHN3aXRjaCAoYWN0aXZlVGFiLnZhbHVlKSB7XG4rICAgIGNhc2UgJ21lbnRpb25zJzpcbisgICAgICByZXR1cm4gbWVudGlvbnMudmFsdWVcbisgICAgY2FzZSAnbGlrZXMnOlxuKyAgICAgIHJldHVybiBsaWtlcy52YWx1ZVxuKyAgICBjYXNlICdyZXBsaWVzJzpcbisgICAgICByZXR1cm4gcmVwbGllcy52YWx1ZVxuKyAgICBjYXNlICdzeXN0ZW0nOlxuKyAgICAgIHJldHVybiBzeXN0ZW1Ob3RpY2VzLnZhbHVlXG4rICAgIGRlZmF1bHQ6XG4rICAgICAgcmV0dXJuIFtdXG4rICB9XG4rfSlcbitcbisvLyDoj5zljZXliIfmjaLkuovku7Zcbitjb25zdCBoYW5kbGVNZW51U2VsZWN0ID0gKGtleSkgPT4ge1xuKyAgYWN0aXZlVGFiLnZhbHVlID0ga2V5XG4rfVxuKzwvc2NyaXB0PlxuK1xuKzxzdHlsZSBzY29wZWQ+XG4rLm1lc3NhZ2UtY2VudGVyIHtcbisgIGRpc3BsYXk6IGZsZXg7XG4rICBtYXgtd2lkdGg6IDEyMDBweDtcbisgIG1hcmdpbjogODBweCBhdXRvIDQwcHg7XG4rICBwYWRkaW5nOiAwIDIwcHg7XG4rfVxuK1xuKy5tZXNzYWdlLXNpZGViYXIge1xuKyAgd2lkdGg6IDIwMHB4O1xuKyAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbisgIGJvcmRlci1yYWRpdXM6IDhweDtcbisgIGJveC1zaGFkb3c6IDAgMnB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbisgIG1hcmdpbi1yaWdodDogMjBweDtcbit9XG4rXG5cblxuRml4IGZhaWxlZCBzdHJfcmVwbGFjZV9lbnRyaWVzIGFjY29yZGluZ2x5IGFuZCB0cnkgYWdhaW4uXG4iLCJpc0Vycm9yIjp0cnVlLCJyZXF1ZXN0SWQiOiIifX0sIjcyYTA5MTQ5LTkxNTYtNDFmNy04OWFkLTBjYjUzODU5Y2FlMDt0b29sdV8wMUJhRFo0ZVZZcmVyQVBvRWJ4RXg2YjMiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWU6XG4gICAgIDFcdDx0ZW1wbGF0ZT5cbiAgICAgMlx0ICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1jZW50ZXJcIj5cbiAgICAgM1x0ICAgIDwhLS0g5bem5L6n6I+c5Y2VIC0tPlxuICAgICA0XHQgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2Utc2lkZWJhclwiPlxuICAgICA1XHQgICAgICA8ZWwtbWVudVxuICAgICA2XHQgICAgICAgIDpkZWZhdWx0LWFjdGl2ZT1cImFjdGl2ZVRhYlwiXG4gICAgIDdcdCAgICAgICAgY2xhc3M9XCJtZXNzYWdlLW1lbnVcIlxuICAgICA4XHQgICAgICAgIEBzZWxlY3Q9XCJoYW5kbGVNZW51U2VsZWN0XCJcbiAgICAgOVx0ICAgICAgPlxuICAgIDEwXHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJtZW50aW9uc1wiPlxuICAgIDExXHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAxMlx0ICAgICAgICAgICAgPHNwYW4+QOaIkeeahDwvc3Bhbj5cbiAgICAxM1x0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMTRcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMTVcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cImxpa2VzXCI+XG4gICAgMTZcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDE3XHQgICAgICAgICAgICA8c3Bhbj7ngrnotZ48L3NwYW4+XG4gICAgMThcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDE5XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDIwXHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJyZXBsaWVzXCI+XG4gICAgMjFcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDIyXHQgICAgICAgICAgICA8c3Bhbj7lm57lpI08L3NwYW4+XG4gICAgMjNcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDI0XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDI1XHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJzeXN0ZW1cIj5cbiAgICAyNlx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMjdcdCAgICAgICAgICAgIDxzcGFuPuezu+e7n+mAmuefpTwvc3Bhbj5cbiAgICAyOFx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMjlcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMzBcdCAgICAgIDwvZWwtbWVudT5cbiAgICAzMVx0ICAgIDwvZGl2PlxuICAgIDMyXHRcbiAgICAzM1x0ICAgIDwhLS0g5Y+z5L6n5YaF5a655Yy6IC0tPlxuICAgIDM0XHQgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtY29udGVudC1hcmVhXCI+XG4gICAgMzVcdCAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWhlYWRlclwiPlxuICAgIDM2XHQgICAgICAgIDxoMj7mtojmga/kuK3lv4M8L2gyPlxuICAgIDM3XHQgICAgICA8L2Rpdj5cbiAgICAzOFx0XG4gICAgMzlcdCAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWxpc3RcIiB2LWlmPVwiY3VycmVudE1lc3NhZ2VzLmxlbmd0aCA+IDBcIj5cbiAgICA0MFx0ICAgICAgICA8ZGl2IHYtZm9yPVwiKG1lc3NhZ2UsIGluZGV4KSBpbiBjdXJyZW50TWVzc2FnZXNcIiA6a2V5PVwiaW5kZXhcIiBjbGFzcz1cIm1lc3NhZ2UtaXRlbVwiPlxuICAgIDQxXHQgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtYXZhdGFyXCI+XG4gICAgNDJcdCAgICAgICAgICAgIDxlbC1hdmF0YXIgOnNpemU9XCI1MFwiIDpzcmM9XCJtZXNzYWdlLmF2YXRhclwiPjwvZWwtYXZhdGFyPlxuICAgIDQzXHQgICAgICAgICAgPC9kaXY+XG4gICAgNDRcdCAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1jb250ZW50XCI+XG4gICAgNDVcdCAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWluZm9cIj5cbiAgICA0Nlx0ICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1lc3NhZ2UtdXNlcm5hbWVcIj57eyBtZXNzYWdlLnVzZXJuYW1lIH19PC9zcGFuPlxuICAgIDQ3XHQgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWVzc2FnZS10aW1lXCI+e3sgbWVzc2FnZS50aW1lIH19PC9zcGFuPlxuICAgIDQ4XHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA0OVx0ICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtdGV4dFwiPnt7IG1lc3NhZ2UuY29udGVudCB9fTwvZGl2PlxuICAgIDUwXHQgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1zb3VyY2VcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2VcIj5cbiAgICA1MVx0ICAgICAgICAgICAgICA8ZWwtY2FyZCBzaGFkb3c9XCJob3ZlclwiIGNsYXNzPVwibWVzc2FnZS1zb3VyY2UtY2FyZFwiPlxuICAgIDUyXHQgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS10aXRsZVwiPnt7IG1lc3NhZ2Uuc291cmNlLnRpdGxlIH19PC9kaXY+XG4gICAgNTNcdCAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWNvbnRlbnRcIj57eyBtZXNzYWdlLnNvdXJjZS5jb250ZW50IH19PC9kaXY+XG4gICAgNTRcdCAgICAgICAgICAgICAgPC9lbC1jYXJkPlxuICAgIDU1XHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA1Nlx0ICAgICAgICAgIDwvZGl2PlxuICAgIDU3XHQgICAgICAgIDwvZGl2PlxuICAgIDU4XHQgICAgICA8L2Rpdj5cbiAgICA1OVx0ICAgICAgPGVsLWVtcHR5IHYtZWxzZSBkZXNjcmlwdGlvbj1cIuaaguaXoOa2iOaBr1wiPjwvZWwtZW1wdHk+XG4gICAgNjBcdCAgICA8L2Rpdj5cbiAgICA2MVx0ICA8L2Rpdj5cbiAgICA2Mlx0PC90ZW1wbGF0ZT5cbiAgICA2M1x0XG4gICAgNjRcdDxzY3JpcHQgc2V0dXA+XG4gICAgNjVcdGltcG9ydCB7IHJlZiwgY29tcHV0ZWQgfSBmcm9tICd2dWUnXG4gICAgNjZcdGltcG9ydCB7IEJlbGwgfSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcbiAgICA2N1x0aW1wb3J0IHsgdXNlVG9rZW5TdG9yZSB9IGZyb20gJ0Avc3RvcmVzL3Rva2VuJ1xuICAgIDY4XHRpbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICd2dWUtcm91dGVyJ1xuICAgIDY5XHRcbiAgICA3MFx0Y29uc3Qgcm91dGVyID0gdXNlUm91dGVyKClcbiAgICA3MVx0Y29uc3QgdG9rZW5TdG9yZSA9IHVzZVRva2VuU3RvcmUoKVxuICAgIDcyXHRjb25zdCBhY3RpdmVUYWIgPSByZWYoJ21lbnRpb25zJylcbiAgICA3M1x0XG4gICAgNzRcdC8vIOajgOafpeeUqOaIt+aYr+WQpueZu+W9lVxuICAgIDc1XHRjb25zdCBpc0xvZ2luID0gcmVmKCEhdG9rZW5TdG9yZS50b2tlbilcbiAgICA3Nlx0aWYgKCFpc0xvZ2luLnZhbHVlKSB7XG4gICAgNzdcdCAgLy8g5aaC5p6c5pyq55m75b2V77yM6YeN5a6a5ZCR5Yiw6aaW6aG1XG4gICAgNzhcdCAgcm91dGVyLnB1c2goJy8nKVxuICAgIDc5XHR9XG4gICAgODBcdFxuICAgIDgxXHQvLyDmqKHmi5/mlbDmja4gLSDlrp7pmYXpobnnm67kuK3lupTor6Xku45BUEnojrflj5ZcbiAgICA4Mlx0Y29uc3QgbWVudGlvbnMgPSByZWYoW1xuICAgIDgzXHQgIHtcbiAgICA4NFx0ICAgIGlkOiAxLFxuICAgIDg1XHQgICAgdXNlcm5hbWU6ICfnlKjmiLdBJyxcbiAgICA4Nlx0ICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuICAgIDg3XHQgICAgdGltZTogJzLlsI/ml7bliY0nLFxuICAgIDg4XHQgICAgY29udGVudDogJ0DkvaAg6L+Z5Liq6KeG6aKR55yf5LiN6ZSZ77yBJyxcbiAgICA4OVx0ICAgIHNvdXJjZToge1xuICAgIDkwXHQgICAgICB0aXRsZTogJ+WmguS9leWtpuS5oOWJjeerr+W8gOWPkScsXG4gICAgOTFcdCAgICAgIGNvbnRlbnQ6ICfliY3nq6/lvIDlj5HmmK/kuIDkuKrkuI3mlq3lrabkuaDnmoTov4fnqIsuLi4nXG4gICAgOTJcdCAgICB9XG4gICAgOTNcdCAgfSxcbiAgICA5NFx0ICB7XG4gICAgOTVcdCAgICBpZDogMixcbiAgICA5Nlx0ICAgIHVzZXJuYW1lOiAn55So5oi3QicsXG4gICAgOTdcdCAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcbiAgICA5OFx0ICAgIHRpbWU6ICfmmKjlpKknLFxuICAgIDk5XHQgICAgY29udGVudDogJ0DkvaAg6IO95YiG5Lqr5LiA5LiL5a2m5Lmg6LWE5paZ5ZCX77yfJyxcbiAgIDEwMFx0ICAgIHNvdXJjZToge1xuICAgMTAxXHQgICAgICB0aXRsZTogJ1Z1ZS5qc+WunuaImOaVmeeoiycsXG4gICAxMDJcdCAgICAgIGNvbnRlbnQ6ICdWdWUuanPmmK/kuIDkuKrmtYHooYznmoTliY3nq6/moYbmnrYuLi4nXG4gICAxMDNcdCAgICB9XG4gICAxMDRcdCAgfVxuICAgMTA1XHRdKVxuICAgMTA2XHRcbiAgIDEwN1x0Y29uc3QgbGlrZXMgPSByZWYoW1xuICAgMTA4XHQgIHtcbiAgIDEwOVx0ICAgIGlkOiAxLFxuICAgMTEwXHQgICAgdXNlcm5hbWU6ICfnlKjmiLdDJyxcbiAgIDExMVx0ICAgIGF2YXRhcjogJ2h0dHBzOi8vY3ViZS5lbGVtZWNkbi5jb20vMy83Yy8zZWE2YmVlYzY0MzY5YzI2NDJiOTJjNjcyNmYxZXBuZy5wbmcnLFxuICAgMTEyXHQgICAgdGltZTogJzPlsI/ml7bliY0nLFxuICAgMTEzXHQgICAgY29udGVudDogJ+i1nuS6huS9oOeahOinhumikScsXG4gICAxMTRcdCAgICBzb3VyY2U6IHtcbiAgIDExNVx0ICAgICAgdGl0bGU6ICdKYXZhU2NyaXB05Z+656GA5pWZ56iLJyxcbiAgIDExNlx0ICAgICAgY29udGVudDogJ0phdmFTY3JpcHTmmK/nvZHpobXlvIDlj5HnmoTln7rnoYAuLi4nXG4gICAxMTdcdCAgICB9XG4gICAxMThcdCAgfVxuICAgMTE5XHRdKVxuICAgMTIwXHRcbiAgIDEyMVx0Y29uc3QgcmVwbGllcyA9IHJlZihbXG4gICAxMjJcdCAge1xuICAgMTIzXHQgICAgaWQ6IDEsXG4gICAxMjRcdCAgICB1c2VybmFtZTogJ+eUqOaIt0QnLFxuICAgMTI1XHQgICAgYXZhdGFyOiAnaHR0cHM6Ly9jdWJlLmVsZW1lY2RuLmNvbS8zLzdjLzNlYTZiZWVjNjQzNjljMjY0MmI5MmM2NzI2ZjFlcG5nLnBuZycsXG4gICAxMjZcdCAgICB0aW1lOiAnMeWkqeWJjScsXG4gICAxMjdcdCAgICBjb250ZW50OiAn6L+Z5Liq5pWZ56iL6Z2e5bi45pyJ5biu5Yqp77yM6LCi6LCi5YiG5Lqr77yBJyxcbiAgIDEyOFx0ICAgIHNvdXJjZToge1xuICAgMTI5XHQgICAgICB0aXRsZTogJ0NTU+W4g+WxgOaKgOW3pycsXG4gICAxMzBcdCAgICAgIGNvbnRlbnQ6ICdDU1PluIPlsYDmmK/liY3nq6/lvIDlj5HnmoTph43opoHpg6jliIYuLi4nXG4gICAxMzFcdCAgICB9XG4gICAxMzJcdCAgfSxcbiAgIDEzM1x0ICB7XG4gICAxMzRcdCAgICBpZDogMixcbiAgIDEzNVx0ICAgIHVzZXJuYW1lOiAn55So5oi3RScsXG4gICAxMzZcdCAgICBhdmF0YXI6ICdodHRwczovL2N1YmUuZWxlbWVjZG4uY29tLzMvN2MvM2VhNmJlZWM2NDM2OWMyNjQyYjkyYzY3MjZmMWVwbmcucG5nJyxcbiAgIDEzN1x0ICAgIHRpbWU6ICcy5aSp5YmNJyxcbiAgIDEzOFx0ICAgIGNvbnRlbnQ6ICfmiJHmjInnhafmlZnnqIvlgZrkuobvvIzkvYbpgYfliLDkuobkuIDkupvpl67popjvvIzog73luK7miJHnnIvnnIvlkJfvvJ8nLFxuICAgMTM5XHQgICAgc291cmNlOiB7XG4gICAxNDBcdCAgICAgIHRpdGxlOiAnVnVl57uE5Lu26YCa5L+hJyxcbiAgIDE0MVx0ICAgICAgY29udGVudDogJ1Z1Zee7hOS7tuS5i+mXtOeahOmAmuS/oeaWueW8j+acieWkmuenjS4uLidcbiAgIDE0Mlx0ICAgIH1cbiAgIDE0M1x0ICB9XG4gICAxNDRcdF0pXG4gICAxNDVcdFxuICAgMTQ2XHRjb25zdCBzeXN0ZW1Ob3RpY2VzID0gcmVmKFtcbiAgIDE0N1x0ICB7XG4gICAxNDhcdCAgICBpZDogMSxcbiAgIDE0OVx0ICAgIHRpbWU6ICcyMDIzLTA0LTE1JyxcbiAgIDE1MFx0ICAgIGNvbnRlbnQ6ICfmgqjnmoTotKblj7flt7LlrozmiJDlrp7lkI3orqTor4HvvIzmhJ/osKLmgqjnmoTphY3lkIjjgIInXG4gICAxNTFcdCAgfSxcbiAgIDE1Mlx0ICB7XG4gICAxNTNcdCAgICBpZDogMixcbiAgIDE1NFx0ICAgIHRpbWU6ICcyMDIzLTA0LTEwJyxcbiAgIDE1NVx0ICAgIGNvbnRlbnQ6ICfns7vnu5/lsIbkuo405pyIMjDml6Xov5vooYznu7TmiqTljYfnuqfvvIzlsYrml7blj6/og73kvJrlvbHlk43pg6jliIblip/og73nmoTkvb/nlKjjgIInXG4gICAxNTZcdCAgfVxuICAgMTU3XHRdKVxuICAgMTU4XHRcbiAgIDE1OVx0Ly8g5qC55o2u5b2T5YmN6YCJ5Lit55qE5qCH562+5Yqo5oCB6I635Y+W5raI5oGvXG4gICAxNjBcdGNvbnN0IGN1cnJlbnRNZXNzYWdlcyA9IGNvbXB1dGVkKCgpID0+IHtcbiAgIDE2MVx0ICBzd2l0Y2ggKGFjdGl2ZVRhYi52YWx1ZSkge1xuICAgMTYyXHQgICAgY2FzZSAnbWVudGlvbnMnOlxuICAgMTYzXHQgICAgICByZXR1cm4gbWVudGlvbnMudmFsdWVcbiAgIDE2NFx0ICAgIGNhc2UgJ2xpa2VzJzpcbiAgIDE2NVx0ICAgICAgcmV0dXJuIGxpa2VzLnZhbHVlXG4gICAxNjZcdCAgICBjYXNlICdyZXBsaWVzJzpcbiAgIDE2N1x0ICAgICAgcmV0dXJuIHJlcGxpZXMudmFsdWVcbiAgIDE2OFx0ICAgIGNhc2UgJ3N5c3RlbSc6XG4gICAxNjlcdCAgICAgIHJldHVybiBzeXN0ZW1Ob3RpY2VzLnZhbHVlXG4gICAxNzBcdCAgICBkZWZhdWx0OlxuICAgMTcxXHQgICAgICByZXR1cm4gW11cbiAgIDE3Mlx0ICB9XG4gICAxNzNcdH0pXG4gICAxNzRcdFxuICAgMTc1XHQvLyDoj5zljZXliIfmjaLkuovku7ZcbiAgIDE3Nlx0Y29uc3QgaGFuZGxlTWVudVNlbGVjdCA9IChrZXkpID0+IHtcbiAgIDE3N1x0ICBhY3RpdmVUYWIudmFsdWUgPSBrZXlcbiAgIDE3OFx0fVxuICAgMTc5XHQ8L3NjcmlwdD5cbiAgIDE4MFx0XG4gICAxODFcdDxzdHlsZSBzY29wZWQ+XG4gICAxODJcdC5tZXNzYWdlLWNlbnRlciB7XG4gICAxODNcdCAgZGlzcGxheTogZmxleDtcbiAgIDE4NFx0ICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgIDE4NVx0ICBtYXJnaW46IDgwcHggYXV0byA0MHB4O1xuICAgMTg2XHQgIHBhZGRpbmc6IDAgMjBweDtcbiAgIDE4N1x0fVxuICAgMTg4XHRcbiAgIDE4OVx0Lm1lc3NhZ2Utc2lkZWJhciB7XG4gICAxOTBcdCAgd2lkdGg6IDIwMHB4O1xuICAgMTkxXHQgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAxOTJcdCAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgMTkzXHQgIGJveC1zaGFkb3c6IDAgMnB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgIDE5NFx0ICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAxOTVcdH1cbiAgIDE5Nlx0XG4gICAxOTdcdC5tZXNzYWdlLW1lbnUge1xuICAgMTk4XHQgIGJvcmRlci1yaWdodDogbm9uZTtcbiAgIDE5OVx0fVxuICAgMjAwXHRcbiAgIDIwMVx0Lm1lc3NhZ2UtY29udGVudC1hcmVhIHtcbiAgIDIwMlx0ICBmbGV4OiAxO1xuICAgMjAzXHQgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAyMDRcdCAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgMjA1XHQgIGJveC1zaGFkb3c6IDAgMnB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgIDIwNlx0ICBwYWRkaW5nOiAyMHB4O1xuICAgMjA3XHR9XG4gICAyMDhcdFxuICAgMjA5XHQubWVzc2FnZS1oZWFkZXIge1xuICAgMjEwXHQgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAyMTFcdH1cbiAgIDIxMlx0XG4gICAyMTNcdC5tZXNzYWdlLWhlYWRlciBoMiB7XG4gICAyMTRcdCAgZm9udC1zaXplOiAyNHB4O1xuICAgMjE1XHQgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgMjE2XHQgIGNvbG9yOiAjMTgxOTFjO1xuICAgMjE3XHR9XG4gICAyMThcdFxuICAgMjE5XHQubWVzc2FnZS1saXN0IHtcbiAgIDIyMFx0ICBwYWRkaW5nOiAyMHB4IDA7XG4gICAyMjFcdH1cbiAgIDIyMlx0XG4gICAyMjNcdC5tZXNzYWdlLWl0ZW0ge1xuICAgMjI0XHQgIGRpc3BsYXk6IGZsZXg7XG4gICAyMjVcdCAgcGFkZGluZzogMTZweCAwO1xuICAgMjI2XHQgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjFmMmYzO1xuICAgMjI3XHR9XG4gICAyMjhcdFxuICAgMjI5XHQubWVzc2FnZS1pdGVtOmxhc3QtY2hpbGQge1xuICAgMjMwXHQgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAyMzFcdH1cbiAgIDIzMlx0XG4gICAyMzNcdC5tZXNzYWdlLWF2YXRhciB7XG4gICAyMzRcdCAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xuICAgMjM1XHQgIGZsZXgtc2hyaW5rOiAwO1xuICAgMjM2XHR9XG4gICAyMzdcdFxuICAgMjM4XHQubWVzc2FnZS1jb250ZW50IHtcbiAgIDIzOVx0ICBmbGV4OiAxO1xuICAgMjQwXHR9XG4gICAyNDFcdFxuICAgMjQyXHQubWVzc2FnZS1pbmZvIHtcbiAgIDI0M1x0ICBkaXNwbGF5OiBmbGV4O1xuICAgMjQ0XHQgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgIDI0NVx0ICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAyNDZcdH1cbiAgIDI0N1x0XG4gICAyNDhcdC5tZXNzYWdlLXVzZXJuYW1lIHtcbiAgIDI0OVx0ICBmb250LXdlaWdodDogYm9sZDtcbiAgIDI1MFx0ICBjb2xvcjogIzE4MTkxYztcbiAgIDI1MVx0fVxuICAgMjUyXHRcbiAgIDI1M1x0Lm1lc3NhZ2UtdGltZSB7XG4gICAyNTRcdCAgY29sb3I6ICM5NDk5YTA7XG4gICAyNTVcdCAgZm9udC1zaXplOiAxNHB4O1xuICAgMjU2XHR9XG4gICAyNTdcdFxuICAgMjU4XHQubWVzc2FnZS10ZXh0IHtcbiAgIDI1OVx0ICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuICAgMjYwXHQgIGNvbG9yOiAjMTgxOTFjO1xuICAgMjYxXHQgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAyNjJcdH1cbiAgIDI2M1x0XG4gICAyNjRcdC5tZXNzYWdlLXNvdXJjZSB7XG4gICAyNjVcdCAgbWFyZ2luLXRvcDogMTJweDtcbiAgIDI2Nlx0fVxuICAgMjY3XHRcbiAgIDI2OFx0Lm1lc3NhZ2Utc291cmNlLWNhcmQge1xuICAgMjY5XHQgIGJhY2tncm91bmQtY29sb3I6ICNmNmY3Zjg7XG4gICAyNzBcdCAgYm9yZGVyOiBub25lO1xuICAgMjcxXHR9XG4gICAyNzJcdFxuICAgMjczXHQuc291cmNlLXRpdGxlIHtcbiAgIDI3NFx0ICBmb250LXdlaWdodDogYm9sZDtcbiAgIDI3NVx0ICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAyNzZcdCAgY29sb3I6ICMxODE5MWM7XG4gICAyNzdcdH1cbiAgIDI3OFx0XG4gICAyNzlcdC5zb3VyY2UtY29udGVudCB7XG4gICAyODBcdCAgY29sb3I6ICM2MTY2NmQ7XG4gICAyODFcdCAgZm9udC1zaXplOiAxNHB4O1xuICAgMjgyXHQgIG92ZXJmbG93OiBoaWRkZW47XG4gICAyODNcdCAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAyODRcdCAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAyODVcdCAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAgMjg2XHQgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAyODdcdH1cbiAgIDI4OFx0XG4gICAyODlcdC5zeXN0ZW0tbWVzc2FnZSAubWVzc2FnZS11c2VybmFtZSB7XG4gICAyOTBcdCAgY29sb3I6ICNmYjcyOTk7XG4gICAyOTFcdH1cbiAgIDI5Mlx0XG4gICAyOTNcdC8qIOWTjeW6lOW8j+agt+W8jyAqL1xuICAgMjk0XHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgMjk1XHQgIC5tZXNzYWdlLWNlbnRlciB7XG4gICAyOTZcdCAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgMjk3XHQgIH1cbiAgIDI5OFx0XG4gICAyOTlcdCAgLm1lc3NhZ2Utc2lkZWJhciB7XG4gICAzMDBcdCAgICB3aWR0aDogMTAwJTtcbiAgIDMwMVx0ICAgIG1hcmdpbi1yaWdodDogMDtcbiAgIDMwMlx0ICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAzMDNcdCAgfVxuICAgMzA0XHRcbiAgIDMwNVx0ICAubWVzc2FnZS1jb250ZW50LWFyZWEge1xuICAgMzA2XHQgICAgd2lkdGg6IDEwMCU7XG4gICAzMDdcdCAgfVxuICAgMzA4XHR9XG4gICAzMDlcdDwvc3R5bGU+XG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiAzMDlcbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjgzNWU4NWQ5LTEyODEtNDY1Mi05NGI5LTQ0MGNmNTdkMTM4Njt0b29sdV8wMVJBSkd2dnZlUlRodzhFZFI5UU1uM2ciOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICA2MFx0ICAgIDwvZGl2PlxuICAgIDYxXHQgIDwvZGl2PlxuICAgIDYyXHQ8L3RlbXBsYXRlPlxuICAgIDYzXHRcbiAgICA2NFx0PHNjcmlwdCBzZXR1cD5cbiAgICA2NVx0aW1wb3J0IHsgcmVmLCBjb21wdXRlZCwgb25Nb3VudGVkIH0gZnJvbSAndnVlJ1xuICAgIDY2XHRpbXBvcnQgeyBCZWxsIH0gZnJvbSAnQGVsZW1lbnQtcGx1cy9pY29ucy12dWUnXG4gICAgNjdcdGltcG9ydCB7IHVzZVRva2VuU3RvcmUgfSBmcm9tICdAL3N0b3Jlcy90b2tlbidcbiAgICA2OFx0aW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAndnVlLXJvdXRlcidcbiAgICA2OVx0aW1wb3J0IHsgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZSB9IGZyb20gJ0AvYXBpL3VzZXIvdXNlcm1lc3NhZ2UnXG4gICAgNzBcdGltcG9ydCB7IEVsTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtcGx1cydcbiAgICA3MVx0aW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJ1xuICAgIDcyXHRcbiAgICA3M1x0Y29uc3Qgcm91dGVyID0gdXNlUm91dGVyKClcbiAgICA3NFx0Y29uc3QgdG9rZW5TdG9yZSA9IHVzZVRva2VuU3RvcmUoKVxuICAgIDc1XHRjb25zdCBhY3RpdmVUYWIgPSByZWYoJ21lbnRpb25zJylcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiNmJhMzljMjgtN2NlNy00NTRlLTgxOGEtYjlhMTIyNmY1ZDJkO3Rvb2x1XzAxQzdkOXExdVplU3UzQjlyd1BidXc5SiI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDcxXHRpbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXG4gICAgNzJcdFxuICAgIDczXHRjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuICAgIDc0XHRjb25zdCB0b2tlblN0b3JlID0gdXNlVG9rZW5TdG9yZSgpXG4gICAgNzVcdGNvbnN0IGFjdGl2ZVRhYiA9IHJlZignbGlrZXMnKSAvLyDpu5jorqTmmL7npLrngrnotZ7mtojmga/moIfnrb7pobVcbiAgICA3Nlx0Y29uc3QgbG9hZGluZyA9IHJlZihmYWxzZSkgLy8g5Yqg6L2954q25oCBXG4gICAgNzdcdFxuICAgIDc4XHQvLyDmo4Dmn6XnlKjmiLfmmK/lkKbnmbvlvZVcbiAgICA3OVx0Y29uc3QgaXNMb2dpbiA9IHJlZighIXRva2VuU3RvcmUudG9rZW4pXG4gICAgODBcdGlmICghaXNMb2dpbi52YWx1ZSkge1xuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCIxNjQ3MWZkOS05YTk1LTQ5ODYtODRjMC05NTkwMDAzODkyNzY7dG9vbHVfMDFFV1RiUzlZdlpBVllxRzhVS2htZWE4Ijp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAxMDdcdCAgICB9XG4gICAxMDhcdCAgfVxuICAgMTA5XHRdKVxuICAgMTEwXHRcbiAgIDExMVx0Y29uc3QgbGlrZXMgPSByZWYoW10pXG4gICAxMTJcdFxuICAgMTEzXHRjb25zdCByZXBsaWVzID0gcmVmKFtcbiAgIDExNFx0ICB7XG4gICAxMTVcdCAgICBpZDogMSxcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiMGE5MDNlNGItM2I3ZC00YmYxLTg0MzQtMzQ1NDRjMzI0NzM4O3Rvb2x1XzAxUXNQVHl4UWtDVVpOYU1IYlRhVGdvRyI6eyJwaGFzZSI6NiwicmVzdWx0Ijp7InRleHQiOiJGYWlsZWQgdG8gZWRpdCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuIFNlZSBiZWxvdyBmb3IgZGV0YWlscy5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcbk5vIHJlcGxhY2VtZW50IHdhcyBwZXJmb3JtZWQsIG9sZFN0ciBkaWQgbm90IGFwcGVhciB2ZXJiYXRpbSBpbiBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5UaGUgY29udGVudCBpbiB0aGUgc3BlY2lmaWVkIHJlZ2lvbiBpczpcbiAgIDE3Mlx0XG4gICAxNzNcdDxzdHlsZSBzY29wZWQ+XG4gICAxNzRcdC5tZXNzYWdlLWNlbnRlciB7XG4gICAxNzVcdCAgZGlzcGxheTogZmxleDtcbiAgIDE3Nlx0ICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgIDE3N1x0ICBtYXJnaW46IDgwcHggYXV0byA0MHB4O1xuICAgMTc4XHQgIHBhZGRpbmc6IDAgMjBweDtcbiAgIDE3OVx0fVxuICAgMTgwXHRcbiAgIDE4MVx0Lm1lc3NhZ2Utc2lkZWJhciB7XG4gICAxODJcdCAgd2lkdGg6IDIwMHB4O1xuXG5EaWZmIGJldHdlZW4gb2xkU3RyIGFuZCB0aGUgc3BlY2lmaWVkIHJlZ2lvbiBpczpcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi0tLSBvbGRTdHJcbisrKyByZWdpb25Db250ZW50XG5AQCAtMSw0ICsxLDMgQEBcbi0vLyDoj4HljZXliIfmjaLkuovku7Zcbi1jb25zdCBoYW5kbGVNZW51U2VsZWN0ID0gKGtleSkgPT4ge1xuLSAgYWN0aXZlVGFiLnZhbHVlID0ga2V5XG4tfVxuKyAgbWF4LXdpZHRoOiAxMjAwcHg7XG4rICBtYXJnaW46IDgwcHggYXV0byA0MHB4O1xuKyAgcGFkZGluZzogMCAyMHB4O1xuXG5cbkZpeCBmYWlsZWQgc3RyX3JlcGxhY2VfZW50cmllcyBhY2NvcmRpbmdseSBhbmQgdHJ5IGFnYWluLlxuIiwiaXNFcnJvciI6dHJ1ZSwicmVxdWVzdElkIjoiIn19LCIzMDk1MjFhOS05MjhhLTQ1YWEtODIyOS05MWQ2MzBhNjhjNjk7dG9vbHVfMDFScHhQYnp3cFJuSFg0dzU5bXdFNmpmIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlOlxuICAgMTcwXHR9XG4gICAxNzFcdDwvc2NyaXB0PlxuICAgMTcyXHRcbiAgIDE3M1x0PHN0eWxlIHNjb3BlZD5cbiAgIDE3NFx0Lm1lc3NhZ2UtY2VudGVyIHtcbiAgIDE3NVx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMTc2XHQgIG1heC13aWR0aDogMTIwMHB4O1xuICAgMTc3XHQgIG1hcmdpbjogODBweCBhdXRvIDQwcHg7XG4gICAxNzhcdCAgcGFkZGluZzogMCAyMHB4O1xuICAgMTc5XHR9XG4gICAxODBcdFxuVG90YWwgbGluZXMgaW4gZmlsZTogMzAxXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCJlMjEzYTBhZS0yNjQ0LTQzOTktODAzOC1hNDg1M2RhNTY1YzI7dG9vbHVfMDFFcGZYemY3NVh4WnpiekJMWE5oR2RkIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlOlxuICAgMTYwXHQgICAgY2FzZSAnc3lzdGVtJzpcbiAgIDE2MVx0ICAgICAgcmV0dXJuIHN5c3RlbU5vdGljZXMudmFsdWVcbiAgIDE2Mlx0ICAgIGRlZmF1bHQ6XG4gICAxNjNcdCAgICAgIHJldHVybiBbXVxuICAgMTY0XHQgIH1cbiAgIDE2NVx0fSlcbiAgIDE2Nlx0XG4gICAxNjdcdC8vIOiPnOWNleWIh+aNouS6i+S7tlxuICAgMTY4XHRjb25zdCBoYW5kbGVNZW51U2VsZWN0ID0gKGtleSkgPT4ge1xuICAgMTY5XHQgIGFjdGl2ZVRhYi52YWx1ZSA9IGtleVxuICAgMTcwXHR9XG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiAzMDFcbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sImMwYTcxOTVkLTg2OTEtNGZhNS1hNzkwLTYwMGFkY2IxMDBlODt0b29sdV8wMVdyMnpjeXdRVEdVaXdWUnU3OFdBUEQiOnsicGhhc2UiOjYsInJlc3VsdCI6eyJ0ZXh0IjoiRmFpbGVkIHRvIGVkaXQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLiBTZWUgYmVsb3cgZm9yIGRldGFpbHMuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5ObyByZXBsYWNlbWVudCB3YXMgcGVyZm9ybWVkLCBvbGRTdHIgZGlkIG5vdCBhcHBlYXIgdmVyYmF0aW0gaW4gc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuVGhlIGNvbnRlbnQgaW4gdGhlIHNwZWNpZmllZCByZWdpb24gaXM6XG4gICAxNjNcdCAgICAgIHJldHVybiBbXVxuICAgMTY0XHQgIH1cbiAgIDE2NVx0fSlcbiAgIDE2Nlx0XG4gICAxNjdcdC8vIOiPnOWNleWIh+aNouS6i+S7tlxuICAgMTY4XHRjb25zdCBoYW5kbGVNZW51U2VsZWN0ID0gKGtleSkgPT4ge1xuICAgMTY5XHQgIGFjdGl2ZVRhYi52YWx1ZSA9IGtleVxuICAgMTcwXHR9XG4gICAxNzFcdDwvc2NyaXB0PlxuICAgMTcyXHRcbiAgIDE3M1x0PHN0eWxlIHNjb3BlZD5cbiAgIDE3NFx0Lm1lc3NhZ2UtY2VudGVyIHtcblxuRGlmZiBiZXR3ZWVuIG9sZFN0ciBhbmQgdGhlIHNwZWNpZmllZCByZWdpb24gaXM6XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4tLS0gb2xkU3RyXG4rKysgcmVnaW9uQ29udGVudFxuQEAgLTEsNCArMSw0IEBAXG4tLy8g6I+B5Y2V5YiH5o2i5LqL5Lu2XG4rLy8g6I+c5Y2V5YiH5o2i5LqL5Lu2XG4gY29uc3QgaGFuZGxlTWVudVNlbGVjdCA9IChrZXkpID0+IHtcbiAgIGFjdGl2ZVRhYi52YWx1ZSA9IGtleVxuIH1cblxuXG5GaXggZmFpbGVkIHN0cl9yZXBsYWNlX2VudHJpZXMgYWNjb3JkaW5nbHkgYW5kIHRyeSBhZ2Fpbi5cbiIsImlzRXJyb3IiOnRydWUsInJlcXVlc3RJZCI6IiJ9fSwiZWFkZTUyZGEtODJjMC00Nzk3LWEwZGYtZDFjNDI4MzkwMWU0O3Rvb2x1XzAxNEE5N0huYzlDMjNyR0dSekd2RlRMQyI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTYzXHQgICAgICByZXR1cm4gW11cbiAgIDE2NFx0ICB9XG4gICAxNjVcdH0pXG4gICAxNjZcdFxuICAgMTY3XHQvLyDmoLzlvI/ljJbml6XmnJ9cbiAgIDE2OFx0Y29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlU3RyaW5nKSA9PiB7XG4gICAxNjlcdCAgY29uc3QgZGF0ZSA9IGRheWpzKGRhdGVTdHJpbmcpXG4gICAxNzBcdCAgY29uc3Qgbm93ID0gZGF5anMoKVxuICAgMTcxXHRcbiAgIDE3Mlx0ICAvLyDlpoLmnpzmmK/ku4rlpKlcbiAgIDE3M1x0ICBpZiAoZGF0ZS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PT0gbm93LmZvcm1hdCgnWVlZWS1NTS1ERCcpKSB7XG4gICAxNzRcdCAgICByZXR1cm4gZGF0ZS5mb3JtYXQoJ0hIOm1tJylcbiAgIDE3NVx0ICB9XG4gICAxNzZcdCAgLy8g5aaC5p6c5piv5pio5aSpXG4gICAxNzdcdCAgZWxzZSBpZiAoZGF0ZS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PT0gbm93LnN1YnRyYWN0KDEsICdkYXknKS5mb3JtYXQoJ1lZWVktTU0tREQnKSkge1xuICAgMTc4XHQgICAgcmV0dXJuICfmmKjlpKkgJyArIGRhdGUuZm9ybWF0KCdISDptbScpXG4gICAxNzlcdCAgfVxuICAgMTgwXHQgIC8vIOWmguaenOaYr+S7iuW5tFxuICAgMTgxXHQgIGVsc2UgaWYgKGRhdGUuZm9ybWF0KCdZWVlZJykgPT09IG5vdy5mb3JtYXQoJ1lZWVknKSkge1xuICAgMTgyXHQgICAgcmV0dXJuIGRhdGUuZm9ybWF0KCdNTS1ERCBISDptbScpXG4gICAxODNcdCAgfVxuICAgMTg0XHQgIC8vIOWFtuS7luaDheWGtVxuICAgMTg1XHQgIGVsc2Uge1xuICAgMTg2XHQgICAgcmV0dXJuIGRhdGUuZm9ybWF0KCdZWVlZLU1NLUREIEhIOm1tJylcbiAgIDE4N1x0ICB9XG4gICAxODhcdH1cbiAgIDE4OVx0XG4gICAxOTBcdC8vIOiOt+WPlueUqOaIt+inhumikeeCuei1nua2iOaBr1xuICAgMTkxXHRjb25zdCBnZXRVc2VyTWVzc2FnZXMgPSBhc3luYyAoKSA9PiB7XG4gICAxOTJcdCAgaWYgKCFpc0xvZ2luLnZhbHVlKSByZXR1cm5cbiAgIDE5M1x0XG4gICAxOTRcdCAgbG9hZGluZy52YWx1ZSA9IHRydWVcbiAgIDE5NVx0ICB0cnkge1xuICAgMTk2XHQgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZSgpXG4gICAxOTdcdCAgICBpZiAocmVzLmNvZGUgPT09IDIwMCAmJiByZXMuZGF0YSkge1xuICAgMTk4XHQgICAgICAvLyDlpITnkIbngrnotZ7mtojmga/mlbDmja5cbiAgIDE5OVx0ICAgICAgbGlrZXMudmFsdWUgPSByZXMuZGF0YS5tYXAoaXRlbSA9PiAoe1xuICAgMjAwXHQgICAgICAgIGlkOiBpdGVtLmlkLFxuICAgMjAxXHQgICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxuICAgMjAyXHQgICAgICAgIGF2YXRhcjogaXRlbS51c2VyUGljLFxuICAgMjAzXHQgICAgICAgIHRpbWU6IGZvcm1hdERhdGUoaXRlbS5saWtlZEF0KSxcbiAgIDIwNFx0ICAgICAgICBjb250ZW50OiAn6LWe5LqG5L2g55qE6KeG6aKRJyxcbiAgIDIwNVx0ICAgICAgICB2aWRlb0lkOiBpdGVtLnZpZGVvSWQsXG4gICAyMDZcdCAgICAgICAgc291cmNlOiB7XG4gICAyMDdcdCAgICAgICAgICB0aXRsZTogaXRlbS50aXRsZSxcbiAgIDIwOFx0ICAgICAgICAgIGNvbnRlbnQ6ICcnLFxuICAgMjA5XHQgICAgICAgICAgY292ZXI6IGl0ZW0uY292ZXJcbiAgIDIxMFx0ICAgICAgICB9XG4gICAyMTFcdCAgICAgIH0pKVxuICAgMjEyXHQgICAgfSBlbHNlIHtcbiAgIDIxM1x0ICAgICAgRWxNZXNzYWdlLmVycm9yKCfojrflj5bmtojmga/lpLHotKXvvJonICsgcmVzLm1lc3NhZ2UpXG4gICAyMTRcdCAgICB9XG4gICAyMTVcdCAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgIDIxNlx0ICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPlua2iOaBr+WHuumUme+8micsIGVycm9yKVxuICAgMjE3XHQgICAgRWxNZXNzYWdlLmVycm9yKCfojrflj5bmtojmga/lh7rplJnvvIzor7fnqI3lkI7ph43or5UnKVxuICAgMjE4XHQgIH0gZmluYWxseSB7XG4gICAyMTlcdCAgICBsb2FkaW5nLnZhbHVlID0gZmFsc2VcbiAgIDIyMFx0ICB9XG4gICAyMjFcdH1cbiAgIDIyMlx0XG4gICAyMjNcdC8vIOi3s+i9rOWIsOinhumikeivpuaDhemhtVxuICAgMjI0XHRjb25zdCBnb1RvVmlkZW8gPSAodmlkZW9JZCkgPT4ge1xuICAgMjI1XHQgIHJvdXRlci5wdXNoKGAvdmlkZW8vJHt2aWRlb0lkfWApXG4gICAyMjZcdH1cbiAgIDIyN1x0XG4gICAyMjhcdC8vIOe7hOS7tuaMgui9veaXtuiOt+WPlua2iOaBr1xuICAgMjI5XHRvbk1vdW50ZWQoKCkgPT4ge1xuICAgMjMwXHQgIGlmIChpc0xvZ2luLnZhbHVlKSB7XG4gICAyMzFcdCAgICBnZXRVc2VyTWVzc2FnZXMoKVxuICAgMjMyXHQgIH1cbiAgIDIzM1x0fSlcbiAgIDIzNFx0XG4gICAyMzVcdC8vIOiPnOWNleWIh+aNouS6i+S7tlxuICAgMjM2XHRjb25zdCBoYW5kbGVNZW51U2VsZWN0ID0gKGtleSkgPT4ge1xuICAgMjM3XHQgIGFjdGl2ZVRhYi52YWx1ZSA9IGtleVxuICAgMjM4XHR9XG4gICAyMzlcdDwvc2NyaXB0PlxuICAgMjQwXHRcbiAgIDI0MVx0PHN0eWxlIHNjb3BlZD5cbiAgIDI0Mlx0Lm1lc3NhZ2UtY2VudGVyIHtcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiYTczZjVhNjUtMDc3ZC00NGE2LThiY2UtNjU5ZGNlNWVhZTA2O3Rvb2x1XzAxRG5yR3lDd0VoRnY5cEVtcXdXZ2Y1SyI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDQ2XHQgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWVzc2FnZS11c2VybmFtZVwiPnt7IG1lc3NhZ2UudXNlcm5hbWUgfX08L3NwYW4+XG4gICAgNDdcdCAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtZXNzYWdlLXRpbWVcIj57eyBtZXNzYWdlLnRpbWUgfX08L3NwYW4+XG4gICAgNDhcdCAgICAgICAgICAgIDwvZGl2PlxuICAgIDQ5XHQgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS10ZXh0XCI+e3sgbWVzc2FnZS5jb250ZW50IH19PC9kaXY+XG4gICAgNTBcdCAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLXNvdXJjZVwiIHYtaWY9XCJtZXNzYWdlLnNvdXJjZVwiIEBjbGljaz1cIm1lc3NhZ2UudmlkZW9JZCAmJiBnb1RvVmlkZW8obWVzc2FnZS52aWRlb0lkKVwiPlxuICAgIDUxXHQgICAgICAgICAgICAgIDxlbC1jYXJkIHNoYWRvdz1cImhvdmVyXCIgY2xhc3M9XCJtZXNzYWdlLXNvdXJjZS1jYXJkXCIgOmNsYXNzPVwieyAnY2xpY2thYmxlJzogbWVzc2FnZS52aWRlb0lkIH1cIj5cbiAgICA1Mlx0ICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtY29udGVudC13cmFwcGVyXCI+XG4gICAgNTNcdCAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtaW1hZ2VcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2UuY292ZXJcIj5cbiAgICA1NFx0ICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCJtZXNzYWdlLnNvdXJjZS5jb3ZlclwiIGFsdD1cIuinhumikeWwgemdolwiIC8+XG4gICAgNTVcdCAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgIDU2XHQgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLXRleHRcIj5cbiAgICA1N1x0ICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLXRpdGxlXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cbiAgICA1OFx0ICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWNvbnRlbnRcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2UuY29udGVudFwiPnt7IG1lc3NhZ2Uuc291cmNlLmNvbnRlbnQgfX08L2Rpdj5cbiAgICA1OVx0ICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgNjBcdCAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA2MVx0ICAgICAgICAgICAgICA8L2VsLWNhcmQ+XG4gICAgNjJcdCAgICAgICAgICAgIDwvZGl2PlxuICAgIDYzXHQgICAgICAgICAgPC9kaXY+XG4gICAgNjRcdCAgICAgICAgPC9kaXY+XG4gICAgNjVcdCAgICAgIDwvZGl2PlxuICAgIDY2XHQgICAgICA8ZWwtZW1wdHkgdi1lbHNlIGRlc2NyaXB0aW9uPVwi5pqC5peg5raI5oGvXCI+PC9lbC1lbXB0eT5cblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiNjkwODI0MTgtMWE3ZC00MjZhLTg2NmEtMWI1MzBiMWZhYWRjO3Rvb2x1XzAxVng5Z28zTHdLQllFb1ZtZnZxSHFKdSI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDM1XHQgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1oZWFkZXJcIj5cbiAgICAzNlx0ICAgICAgICA8aDI+5raI5oGv5Lit5b+DPC9oMj5cbiAgICAzN1x0ICAgICAgPC9kaXY+XG4gICAgMzhcdFxuICAgIDM5XHQgICAgICA8ZWwtbG9hZGluZyA6dmlzaWJsZT1cImxvYWRpbmdcIiBmdWxsc2NyZWVuIC8+XG4gICAgNDBcdCAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLWxpc3RcIiB2LWlmPVwiY3VycmVudE1lc3NhZ2VzLmxlbmd0aCA+IDBcIj5cbiAgICA0MVx0ICAgICAgICA8ZGl2IHYtZm9yPVwiKG1lc3NhZ2UsIGluZGV4KSBpbiBjdXJyZW50TWVzc2FnZXNcIiA6a2V5PVwiaW5kZXhcIiBjbGFzcz1cIm1lc3NhZ2UtaXRlbVwiPlxuICAgIDQyXHQgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtYXZhdGFyXCI+XG4gICAgNDNcdCAgICAgICAgICAgIDxlbC1hdmF0YXIgOnNpemU9XCI1MFwiIDpzcmM9XCJtZXNzYWdlLmF2YXRhclwiPjwvZWwtYXZhdGFyPlxuICAgIDQ0XHQgICAgICAgICAgPC9kaXY+XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sImNiMWZhYjk4LWUzYTItNGY3Mi1iMmMwLTA1ZWZhNzgxNzI3YTt0b29sdV8wMVc2empvQXhmaFp2QTFKQno5UTdOalciOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDM0M1x0ICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAzNDRcdCAgY29sb3I6ICMxODE5MWM7XG4gICAzNDVcdH1cbiAgIDM0Nlx0XG4gICAzNDdcdC5zb3VyY2UtY29udGVudCB7XG4gICAzNDhcdCAgY29sb3I6ICM2MTY2NmQ7XG4gICAzNDlcdCAgZm9udC1zaXplOiAxNHB4O1xuICAgMzUwXHQgIG92ZXJmbG93OiBoaWRkZW47XG4gICAzNTFcdCAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAzNTJcdCAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAzNTNcdCAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xuICAgMzU0XHQgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAzNTVcdH1cbiAgIDM1Nlx0XG4gICAzNTdcdC5zb3VyY2UtY29udGVudC13cmFwcGVyIHtcbiAgIDM1OFx0ICBkaXNwbGF5OiBmbGV4O1xuICAgMzU5XHQgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAzNjBcdH1cbiAgIDM2MVx0XG4gICAzNjJcdC5zb3VyY2UtaW1hZ2Uge1xuICAgMzYzXHQgIHdpZHRoOiAxMjBweDtcbiAgIDM2NFx0ICBoZWlnaHQ6IDcwcHg7XG4gICAzNjVcdCAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xuICAgMzY2XHQgIGZsZXgtc2hyaW5rOiAwO1xuICAgMzY3XHQgIG92ZXJmbG93OiBoaWRkZW47XG4gICAzNjhcdCAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgMzY5XHR9XG4gICAzNzBcdFxuICAgMzcxXHQuc291cmNlLWltYWdlIGltZyB7XG4gICAzNzJcdCAgd2lkdGg6IDEwMCU7XG4gICAzNzNcdCAgaGVpZ2h0OiAxMDAlO1xuICAgMzc0XHQgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgMzc1XHR9XG4gICAzNzZcdFxuICAgMzc3XHQuc291cmNlLXRleHQge1xuICAgMzc4XHQgIGZsZXg6IDE7XG4gICAzNzlcdCAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgIDM4MFx0fVxuICAgMzgxXHRcbiAgIDM4Mlx0LmNsaWNrYWJsZSB7XG4gICAzODNcdCAgY3Vyc29yOiBwb2ludGVyO1xuICAgMzg0XHQgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAzODVcdH1cbiAgIDM4Nlx0XG4gICAzODdcdC5jbGlja2FibGU6aG92ZXIge1xuICAgMzg4XHQgIGJhY2tncm91bmQtY29sb3I6ICNmMGYxZjI7XG4gICAzODlcdH1cbiAgIDM5MFx0XG4gICAzOTFcdC5zeXN0ZW0tbWVzc2FnZSAubWVzc2FnZS11c2VybmFtZSB7XG4gICAzOTJcdCAgY29sb3I6ICNmYjcyOTk7XG4gICAzOTNcdH1cblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiOWE5ZDQ3YWQtOWFiOS00YTgzLWI0MTctM2Y4MjljZjJmYmQ3O3Rvb2x1XzAxOW0xRFlVWjFXRmFleFhueWN1Y1MyZiI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTkzXHQgICAgcmV0dXJuIGRhdGUuZm9ybWF0KCdZWVlZLU1NLUREIEhIOm1tJylcbiAgIDE5NFx0ICB9XG4gICAxOTVcdH1cbiAgIDE5Nlx0XG4gICAxOTdcdC8vIOiOt+WPlueUqOaIt+a2iOaBr1xuICAgMTk4XHRjb25zdCBnZXRVc2VyTWVzc2FnZXMgPSBhc3luYyAoKSA9PiB7XG4gICAxOTlcdCAgaWYgKCFpc0xvZ2luLnZhbHVlKSByZXR1cm5cbiAgIDIwMFx0XG4gICAyMDFcdCAgbG9hZGluZy52YWx1ZSA9IHRydWVcbiAgIDIwMlx0ICB0cnkge1xuICAgMjAzXHQgICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0VXNlck1lc3NhZ2VMaXN0U2VydmljZSgpXG4gICAyMDRcdCAgICBpZiAocmVzLmNvZGUgPT09IDIwMCAmJiByZXMuZGF0YSAmJiByZXMuZGF0YS5sZW5ndGggPiAwKSB7XG4gICAyMDVcdCAgICAgIGNvbnN0IG1lc3NhZ2VEYXRhID0gcmVzLmRhdGFbMF0gLy8g6I635Y+W56ys5LiA5Liq5pWw5o2u5a+56LGhXG4gICAyMDZcdFxuICAgMjA3XHQgICAgICAvLyDlpITnkIbngrnotZ7mtojmga/mlbDmja5cbiAgIDIwOFx0ICAgICAgaWYgKG1lc3NhZ2VEYXRhLnZpZGVvTGlrZSAmJiBtZXNzYWdlRGF0YS52aWRlb0xpa2UubGVuZ3RoID4gMCkge1xuICAgMjA5XHQgICAgICAgIGxpa2VzLnZhbHVlID0gbWVzc2FnZURhdGEudmlkZW9MaWtlLm1hcChpdGVtID0+ICh7XG4gICAyMTBcdCAgICAgICAgICBpZDogaXRlbS5pZCxcbiAgIDIxMVx0ICAgICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxuICAgMjEyXHQgICAgICAgICAgYXZhdGFyOiBpdGVtLnVzZXJQaWMsXG4gICAyMTNcdCAgICAgICAgICB0aW1lOiBmb3JtYXREYXRlKGl0ZW0ubGlrZWRBdCksXG4gICAyMTRcdCAgICAgICAgICBjb250ZW50OiAn6LWe5LqG5L2g55qE6KeG6aKRJyxcbiAgIDIxNVx0ICAgICAgICAgIHZpZGVvSWQ6IGl0ZW0udmlkZW9JZCxcbiAgIDIxNlx0ICAgICAgICAgIHNvdXJjZToge1xuICAgMjE3XHQgICAgICAgICAgICB0aXRsZTogaXRlbS50aXRsZSxcbiAgIDIxOFx0ICAgICAgICAgICAgY29udGVudDogJycsXG4gICAyMTlcdCAgICAgICAgICAgIGNvdmVyOiBpdGVtLmNvdmVyXG4gICAyMjBcdCAgICAgICAgICB9XG4gICAyMjFcdCAgICAgICAgfSkpXG4gICAyMjJcdCAgICAgIH1cbiAgIDIyM1x0XG4gICAyMjRcdCAgICAgIC8vIOWkhOeQhuiBiuWkqea2iOaBr+aVsOaNrlxuICAgMjI1XHQgICAgICBpZiAobWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvICYmIG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0by5sZW5ndGggPiAwKSB7XG4gICAyMjZcdCAgICAgICAgcmVwbGllcy52YWx1ZSA9IG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0by5tYXAoaXRlbSA9PiAoe1xuICAgMjI3XHQgICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAyMjhcdCAgICAgICAgICB1c2VybmFtZTogaXRlbS5uaWNrbmFtZSxcbiAgIDIyOVx0ICAgICAgICAgIGF2YXRhcjogaXRlbS51c2VyUGljLFxuICAgMjMwXHQgICAgICAgICAgdGltZTogZm9ybWF0RGF0ZShpdGVtLnNlbmRUaW1lKSxcbiAgIDIzMVx0ICAgICAgICAgIGNvbnRlbnQ6IGl0ZW0uY29udGVudCxcbiAgIDIzMlx0ICAgICAgICAgIGlzQ2hhdDogdHJ1ZVxuICAgMjMzXHQgICAgICAgIH0pKVxuICAgMjM0XHQgICAgICB9XG4gICAyMzVcdCAgICB9IGVsc2Uge1xuICAgMjM2XHQgICAgICBFbE1lc3NhZ2UuZXJyb3IoJ+iOt+WPlua2iOaBr+Wksei0pe+8micgKyByZXMubWVzc2FnZSlcbiAgIDIzN1x0ICAgIH1cbiAgIDIzOFx0ICB9IGNhdGNoIChlcnJvcikge1xuICAgMjM5XHQgICAgY29uc29sZS5lcnJvcign6I635Y+W5raI5oGv5Ye66ZSZ77yaJywgZXJyb3IpXG4gICAyNDBcdCAgICBFbE1lc3NhZ2UuZXJyb3IoJ+iOt+WPlua2iOaBr+WHuumUme+8jOivt+eojeWQjumHjeivlScpXG4gICAyNDFcdCAgfSBmaW5hbGx5IHtcbiAgIDI0Mlx0ICAgIGxvYWRpbmcudmFsdWUgPSBmYWxzZVxuICAgMjQzXHQgIH1cbiAgIDI0NFx0fVxuICAgMjQ1XHRcbiAgIDI0Nlx0Ly8g6Lez6L2s5Yiw6KeG6aKR6K+m5oOF6aG1XG4gICAyNDdcdGNvbnN0IGdvVG9WaWRlbyA9ICh2aWRlb0lkKSA9PiB7XG4gICAyNDhcdCAgcm91dGVyLnB1c2goYC92aWRlby8ke3ZpZGVvSWR9YClcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiZDFmZGQwZDUtM2IzZC00N2YxLTk3MDItYmUwMmZmNjUzNWI2O3Rvb2x1XzAxQ3o3OG4xNjZmWmFydW9UNWltalBKTCI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDQ2XHQgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1pbmZvXCI+XG4gICAgNDdcdCAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtZXNzYWdlLXVzZXJuYW1lXCI+e3sgbWVzc2FnZS51c2VybmFtZSB9fTwvc3Bhbj5cbiAgICA0OFx0ICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1lc3NhZ2UtdGltZVwiPnt7IG1lc3NhZ2UudGltZSB9fTwvc3Bhbj5cbiAgICA0OVx0ICAgICAgICAgICAgPC9kaXY+XG4gICAgNTBcdCAgICAgICAgICAgIDwhLS0g6IGK5aSp5raI5oGv5pi+56S6IC0tPlxuICAgIDUxXHQgICAgICAgICAgICA8ZGl2IHYtaWY9XCJtZXNzYWdlLmlzQ2hhdFwiIGNsYXNzPVwibWVzc2FnZS10ZXh0IGNoYXQtbWVzc2FnZVwiPlxuICAgIDUyXHQgICAgICAgICAgICAgIHt7IG1lc3NhZ2UuY29udGVudCB9fVxuICAgIDUzXHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA1NFx0XG4gICAgNTVcdCAgICAgICAgICAgIDwhLS0g54K56LWe5raI5oGv5pi+56S6IC0tPlxuICAgIDU2XHQgICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPlxuICAgIDU3XHQgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLXRleHRcIj57eyBtZXNzYWdlLmNvbnRlbnQgfX08L2Rpdj5cbiAgICA1OFx0ICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1zb3VyY2VcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2VcIiBAY2xpY2s9XCJtZXNzYWdlLnZpZGVvSWQgJiYgZ29Ub1ZpZGVvKG1lc3NhZ2UudmlkZW9JZClcIj5cbiAgICA1OVx0ICAgICAgICAgICAgICAgIDxlbC1jYXJkIHNoYWRvdz1cImhvdmVyXCIgY2xhc3M9XCJtZXNzYWdlLXNvdXJjZS1jYXJkXCIgOmNsYXNzPVwieyAnY2xpY2thYmxlJzogbWVzc2FnZS52aWRlb0lkIH1cIj5cbiAgICA2MFx0ICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS1jb250ZW50LXdyYXBwZXJcIj5cbiAgICA2MVx0ICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWltYWdlXCIgdi1pZj1cIm1lc3NhZ2Uuc291cmNlLmNvdmVyXCI+XG4gICAgNjJcdCAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCJtZXNzYWdlLnNvdXJjZS5jb3ZlclwiIGFsdD1cIuinhumikeWwgemdolwiIC8+XG4gICAgNjNcdCAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgNjRcdCAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS10ZXh0XCI+XG4gICAgNjVcdCAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLXRpdGxlXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cbiAgICA2Nlx0ICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtY29udGVudFwiIHYtaWY9XCJtZXNzYWdlLnNvdXJjZS5jb250ZW50XCI+e3sgbWVzc2FnZS5zb3VyY2UuY29udGVudCB9fTwvZGl2PlxuICAgIDY3XHQgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgIDY4XHQgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA2OVx0ICAgICAgICAgICAgICAgIDwvZWwtY2FyZD5cbiAgICA3MFx0ICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA3MVx0ICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICA3Mlx0ICAgICAgICAgIDwvZGl2PlxuICAgIDczXHQgICAgICAgIDwvZGl2PlxuICAgIDc0XHQgICAgICA8L2Rpdj5cbiAgICA3NVx0ICAgICAgPGVsLWVtcHR5IHYtZWxzZSBkZXNjcmlwdGlvbj1cIuaaguaXoOa2iOaBr1wiPjwvZWwtZW1wdHk+XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjJlZDVhZGM3LTU5NjMtNGFkZC04MzQ3LWQzZTgzMjYyMDE0MTt0b29sdV8wMTlnbWNmdm9WamdIWkxMaGJma2MzUmoiOnsicGhhc2UiOjYsInJlc3VsdCI6eyJ0ZXh0IjoiRmFpbGVkIHRvIGVkaXQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLiBTZWUgYmVsb3cgZm9yIGRldGFpbHMuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5ObyByZXBsYWNlbWVudCB3YXMgcGVyZm9ybWVkLCBvbGRTdHIgZGlkIG5vdCBhcHBlYXIgdmVyYmF0aW0gaW4gc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuVGhlIGNvbnRlbnQgaW4gdGhlIHNwZWNpZmllZCByZWdpb24gaXM6XG4gICAgIDZcdCAgICAgICAgOmRlZmF1bHQtYWN0aXZlPVwiYWN0aXZlVGFiXCJcbiAgICAgN1x0ICAgICAgICBjbGFzcz1cIm1lc3NhZ2UtbWVudVwiXG4gICAgIDhcdCAgICAgICAgQHNlbGVjdD1cImhhbmRsZU1lbnVTZWxlY3RcIlxuICAgICA5XHQgICAgICA+XG4gICAgMTBcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cIm1lbnRpb25zXCI+XG4gICAgMTFcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDEyXHQgICAgICAgICAgICA8c3Bhbj7ogYrlpKnmtojmga88L3NwYW4+XG4gICAgMTNcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDE0XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDE1XHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJsaWtlc1wiPlxuICAgIDE2XHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAxN1x0ICAgICAgICAgICAgPHNwYW4+54K56LWePC9zcGFuPlxuICAgIDE4XHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAxOVx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAyMFx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwicmVwbGllc1wiPlxuICAgIDIxXHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAyMlx0ICAgICAgICAgICAgPHNwYW4+5Zue5aSNPC9zcGFuPlxuICAgIDIzXHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAyNFx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAyNVx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwic3lzdGVtXCI+XG4gICAgMjZcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDI3XHQgICAgICAgICAgICA8c3Bhbj7ns7vnu5/pgJrnn6U8L3NwYW4+XG4gICAgMjhcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDI5XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDMwXHQgICAgICA8L2VsLW1lbnU+XG4gICAgMzFcdCAgICA8L2Rpdj5cbiAgICAzMlx0XG4gICAgMzNcdCAgICA8IS0tIOWPs+S+p+WGheWuueWMuiAtLT5cblxuRGlmZiBiZXR3ZWVuIG9sZFN0ciBhbmQgdGhlIHNwZWNpZmllZCByZWdpb24gaXM6XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4tLS0gb2xkU3RyXG4rKysgcmVnaW9uQ29udGVudFxuQEAgLTEsNiArMSw2IEBAXG4gICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwibWVudGlvbnNcIj5cbiAgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbi0gICAgICAgICAgICA8c3Bhbj5A5oiR55qEPC9zcGFuPlxuKyAgICAgICAgICAgIDxzcGFuPuiBiuWkqea2iOaBrzwvc3Bhbj5cbiAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cImxpa2VzXCI+XG5cblxuRml4IGZhaWxlZCBzdHJfcmVwbGFjZV9lbnRyaWVzIGFjY29yZGluZ2x5IGFuZCB0cnkgYWdhaW4uXG4iLCJpc0Vycm9yIjp0cnVlLCJyZXF1ZXN0SWQiOiIifX0sIjgxNDA4NzBkLWQwZTQtNDZlNy04MTVhLTU2YTI3YmE5MzhiNjt0b29sdV8wMVZKbzJpdUx5cjN5VUxaWFA2U0tBUWMiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWU6XG4gICAgIDVcdCAgICAgIDxlbC1tZW51XG4gICAgIDZcdCAgICAgICAgOmRlZmF1bHQtYWN0aXZlPVwiYWN0aXZlVGFiXCJcbiAgICAgN1x0ICAgICAgICBjbGFzcz1cIm1lc3NhZ2UtbWVudVwiXG4gICAgIDhcdCAgICAgICAgQHNlbGVjdD1cImhhbmRsZU1lbnVTZWxlY3RcIlxuICAgICA5XHQgICAgICA+XG4gICAgMTBcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cIm1lbnRpb25zXCI+XG4gICAgMTFcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDEyXHQgICAgICAgICAgICA8c3Bhbj7ogYrlpKnmtojmga88L3NwYW4+XG4gICAgMTNcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDE0XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDE1XHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJsaWtlc1wiPlxuICAgIDE2XHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAxN1x0ICAgICAgICAgICAgPHNwYW4+54K56LWePC9zcGFuPlxuICAgIDE4XHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAxOVx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAyMFx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwicmVwbGllc1wiPlxuICAgIDIxXHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAyMlx0ICAgICAgICAgICAgPHNwYW4+5Zue5aSNPC9zcGFuPlxuICAgIDIzXHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAyNFx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAyNVx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwic3lzdGVtXCI+XG4gICAgMjZcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDI3XHQgICAgICAgICAgICA8c3Bhbj7ns7vnu5/pgJrnn6U8L3NwYW4+XG4gICAgMjhcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDI5XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDMwXHQgICAgICA8L2VsLW1lbnU+XG5Ub3RhbCBsaW5lcyBpbiBmaWxlOiA0MzRcbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjk1YzJjMzI0LWZiNmMtNDkwNy1iZmNjLWUwYWVhYzM0ZGFmYTt0b29sdV8wMTVmdFpzTlRMWE5pblBvem9ENnZKZk0iOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICAgNlx0ICAgICAgICA6ZGVmYXVsdC1hY3RpdmU9XCJhY3RpdmVUYWJcIlxuICAgICA3XHQgICAgICAgIGNsYXNzPVwibWVzc2FnZS1tZW51XCJcbiAgICAgOFx0ICAgICAgICBAc2VsZWN0PVwiaGFuZGxlTWVudVNlbGVjdFwiXG4gICAgIDlcdCAgICAgID5cbiAgICAxMFx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwibGlrZXNcIj5cbiAgICAxMVx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMTJcdCAgICAgICAgICAgIDxzcGFuPueCuei1nua2iOaBrzwvc3Bhbj5cbiAgICAxM1x0ICAgICAgICAgICAgPGVsLWJhZGdlIHYtaWY9XCJsaWtlcy5sZW5ndGggPiAwXCIgOnZhbHVlPVwibGlrZXMubGVuZ3RoXCIgY2xhc3M9XCJtZXNzYWdlLWJhZGdlXCIgLz5cbiAgICAxNFx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMTVcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMTZcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInJlcGxpZXNcIj5cbiAgICAxN1x0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMThcdCAgICAgICAgICAgIDxzcGFuPuiBiuWkqea2iOaBrzwvc3Bhbj5cbiAgICAxOVx0ICAgICAgICAgICAgPGVsLWJhZGdlIHYtaWY9XCJyZXBsaWVzLmxlbmd0aCA+IDBcIiA6dmFsdWU9XCJyZXBsaWVzLmxlbmd0aFwiIGNsYXNzPVwibWVzc2FnZS1iYWRnZVwiIC8+XG4gICAgMjBcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDIxXHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDIyXHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJzeXN0ZW1cIj5cbiAgICAyM1x0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMjRcdCAgICAgICAgICAgIDxzcGFuPuezu+e7n+mAmuefpTwvc3Bhbj5cbiAgICAyNVx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMjZcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjdcdCAgICAgIDwvZWwtbWVudT5cbiAgICAyOFx0ICAgIDwvZGl2PlxuICAgIDI5XHRcbiAgICAzMFx0ICAgIDwhLS0g5Y+z5L6n5YaF5a655Yy6IC0tPlxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCI5ZTBjYjAwNi1iMTM2LTQ4ZTEtYTgyMS0yOGIyMDQ5ZDUxMDk7dG9vbHVfMDExN2RTU3ZBcmhtTWFuTWNLNzZ1QnhrIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAxNTlcdCAgICBjb250ZW50OiAn57O757uf5bCG5LqONOaciDIw5pel6L+b6KGM57u05oqk5Y2H57qn77yM5bGK5pe25Y+v6IO95Lya5b2x5ZON6YOo5YiG5Yqf6IO955qE5L2/55So44CCJ1xuICAgMTYwXHQgIH1cbiAgIDE2MVx0XSlcbiAgIDE2Mlx0XG4gICAxNjNcdC8vIOagueaNruW9k+WJjemAieS4reeahOagh+etvuWKqOaAgeiOt+WPlua2iOaBr1xuICAgMTY0XHRjb25zdCBjdXJyZW50TWVzc2FnZXMgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAxNjVcdCAgc3dpdGNoIChhY3RpdmVUYWIudmFsdWUpIHtcbiAgIDE2Nlx0ICAgIGNhc2UgJ2xpa2VzJzpcbiAgIDE2N1x0ICAgICAgcmV0dXJuIGxpa2VzLnZhbHVlXG4gICAxNjhcdCAgICBjYXNlICdyZXBsaWVzJzpcbiAgIDE2OVx0ICAgICAgcmV0dXJuIHJlcGxpZXMudmFsdWVcbiAgIDE3MFx0ICAgIGNhc2UgJ3N5c3RlbSc6XG4gICAxNzFcdCAgICAgIHJldHVybiBzeXN0ZW1Ob3RpY2VzLnZhbHVlXG4gICAxNzJcdCAgICBkZWZhdWx0OlxuICAgMTczXHQgICAgICByZXR1cm4gW11cbiAgIDE3NFx0ICB9XG4gICAxNzVcdH0pXG4gICAxNzZcdFxuICAgMTc3XHQvLyDmoLzlvI/ljJbml6XmnJ9cbiAgIDE3OFx0Y29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlU3RyaW5nKSA9PiB7XG4gICAxNzlcdCAgY29uc3QgZGF0ZSA9IGRheWpzKGRhdGVTdHJpbmcpXG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjk5ZTFmOThjLTU1MzYtNDlkNC1hNjI0LTIxODJkNTc3ZWNlZjt0b29sdV8wMTZSWG9kcDlja2p2ZUZVQXNnd0dqZ04iOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDQwMVx0ICBjdXJzb3I6IHBvaW50ZXI7XG4gICA0MDJcdCAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgIDQwM1x0fVxuICAgNDA0XHRcbiAgIDQwNVx0LmNsaWNrYWJsZTpob3ZlciB7XG4gICA0MDZcdCAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjFmMjtcbiAgIDQwN1x0fVxuICAgNDA4XHRcbiAgIDQwOVx0LmNoYXQtbWVzc2FnZSB7XG4gICA0MTBcdCAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjdmODtcbiAgIDQxMVx0ICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gICA0MTJcdCAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgNDEzXHQgIG1hcmdpbi1ib3R0b206IDA7XG4gICA0MTRcdCAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgIDQxNVx0fVxuICAgNDE2XHRcbiAgIDQxN1x0Lm1lc3NhZ2UtYmFkZ2UgOmRlZXAoLmVsLWJhZGdlX19jb250ZW50KSB7XG4gICA0MThcdCAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNzI5OTtcbiAgIDQxOVx0ICBib3JkZXI6IG5vbmU7XG4gICA0MjBcdH1cbiAgIDQyMVx0XG4gICA0MjJcdC5zeXN0ZW0tbWVzc2FnZSAubWVzc2FnZS11c2VybmFtZSB7XG4gICA0MjNcdCAgY29sb3I6ICNmYjcyOTk7XG4gICA0MjRcdH1cblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiNmYzNjczNzUtMTM4MS00YjEwLTlkOWQtZTk3ZDM3MTE4OTRjO3Rvb2x1XzAxNDd3TkpYQmU4OFl3VDlmSFRwVGcyNSI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDk0XHQgIHJvdXRlci5wdXNoKCcvJylcbiAgICA5NVx0fVxuICAgIDk2XHRcbiAgICA5N1x0Ly8g5qih5ouf5pWw5o2uIC0g5a6e6ZmF6aG555uu5Lit5bqU6K+l5LuOQVBJ6I635Y+WXG4gICAgOThcdC8vIOenu+mZpOS4jemcgOimgeeahG1lbnRpb25z5pWw57uEXG4gICAgOTlcdFxuICAgMTAwXHRjb25zdCBsaWtlcyA9IHJlZihbXSlcbiAgIDEwMVx0XG4gICAxMDJcdGNvbnN0IHJlcGxpZXMgPSByZWYoW1xuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCJlZjI0MTY0My1lMzdiLTQ0MGYtODI4OS0zMjY3ODRmYzlhY2I7dG9vbHVfMDExNWJWOHFTU0FhNDlMQkdVbVF3d1ZQIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAgOThcdC8vIOenu+mZpOS4jemcgOimgeeahG1lbnRpb25z5pWw57uEXG4gICAgOTlcdFxuICAgMTAwXHRjb25zdCBsaWtlcyA9IHJlZihbXSlcbiAgIDEwMVx0XG4gICAxMDJcdGNvbnN0IHJlcGxpZXMgPSByZWYoW10pXG4gICAxMDNcdFxuICAgMTA0XHRjb25zdCBzeXN0ZW1Ob3RpY2VzID0gcmVmKFtcbiAgIDEwNVx0ICB7XG4gICAxMDZcdCAgICBpZDogMSxcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiNWJkNDE2M2ItOGViYy00OGQwLTgyNDAtY2NiMzhiODk2ZDZlO3Rvb2x1XzAxSzZBNWprN3VaMTJtc2g4dHZoNW10YiI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDk0XHQgIHJvdXRlci5wdXNoKCcvJylcbiAgICA5NVx0fVxuICAgIDk2XHRcbiAgICA5N1x0Ly8g5qih5ouf5pWw5o2uIC0g5a6e6ZmF6aG555uu5Lit5bqU6K+l5LuOQVBJ6I635Y+WXG4gICAgOThcdC8vIOWIneWni+WMlua2iOaBr+aVsOe7hFxuICAgIDk5XHRcbiAgIDEwMFx0Y29uc3QgbGlrZXMgPSByZWYoW10pXG4gICAxMDFcdFxuICAgMTAyXHRjb25zdCByZXBsaWVzID0gcmVmKFtdKVxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCI1OTAwOTQ0Yi05YWVmLTQ3MTAtYjE3Yi02ODMyZWE2NTBiNTE7dG9vbHVfMDFEcDRpMVlrQzZ1bUgxdHVwcDhvVExwIjp7InBoYXNlIjo2LCJyZXN1bHQiOnsidGV4dCI6IkZhaWxlZCB0byBlZGl0IHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS4gU2VlIGJlbG93IGZvciBkZXRhaWxzLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuTm8gcmVwbGFjZW1lbnQgd2FzIHBlcmZvcm1lZCwgb2xkU3RyIGRpZCBub3QgYXBwZWFyIHZlcmJhdGltIGluIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblRoZSBjb250ZW50IGluIHRoZSBzcGVjaWZpZWQgcmVnaW9uIGlzOlxuICAgMjUwXHQgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAyNTFcdH1cbiAgIDI1Mlx0XG4gICAyNTNcdC5tZXNzYWdlLWhlYWRlciBoMiB7XG4gICAyNTRcdCAgZm9udC1zaXplOiAyNHB4O1xuICAgMjU1XHQgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgMjU2XHQgIGNvbG9yOiAjMTgxOTFjO1xuICAgMjU3XHR9XG4gICAyNThcdFxuICAgMjU5XHQubWVzc2FnZS1saXN0IHtcbiAgIDI2MFx0ICBwYWRkaW5nOiAyMHB4IDA7XG4gICAyNjFcdH1cblxuRGlmZiBiZXR3ZWVuIG9sZFN0ciBhbmQgdGhlIHNwZWNpZmllZCByZWdpb24gaXM6XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4tLS0gb2xkU3RyXG4rKysgcmVnaW9uQ29udGVudFxuQEAgLTEsNCArMSw0IEBAXG4tLy8g6Lez6L2s5Yiw6IGK5aSp6aG16Z2iXG4tY29uc3QgZ29Ub0NoYXQgPSAodXNlcklkKSA9PiB7XG4tICByb3V0ZXIucHVzaChgL2NoYXQ/dXNlcklkPSR7dXNlcklkfWApXG4rICBmb250LXNpemU6IDI0cHg7XG4rICBmb250LXdlaWdodDogYm9sZDtcbisgIGNvbG9yOiAjMTgxOTFjO1xuIH1cblxuXG5GaXggZmFpbGVkIHN0cl9yZXBsYWNlX2VudHJpZXMgYWNjb3JkaW5nbHkgYW5kIHRyeSBhZ2Fpbi5cbiIsImlzRXJyb3IiOnRydWUsInJlcXVlc3RJZCI6IiJ9fSwiMjI2YTZlNjktOTM2My00Nzc2LWI2MmYtZGQ0ZDM2MjkyYzc3O3Rvb2x1XzAxNkwyaEFwTWtncHJ2bWhjeUVWWHdXSCI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTk5XHQgICAgbG9hZGluZy52YWx1ZSA9IGZhbHNlXG4gICAyMDBcdCAgfVxuICAgMjAxXHR9XG4gICAyMDJcdFxuICAgMjAzXHQvLyDot7PovazliLDop4bpopHor6bmg4XpobVcbiAgIDIwNFx0Y29uc3QgZ29Ub1ZpZGVvID0gKHZpZGVvSWQpID0+IHtcbiAgIDIwNVx0ICByb3V0ZXIucHVzaChgL3ZpZGVvLyR7dmlkZW9JZH1gKVxuICAgMjA2XHR9XG4gICAyMDdcdFxuICAgMjA4XHQvLyDot7PovazliLDogYrlpKnpobXpnaJcbiAgIDIwOVx0Y29uc3QgZ29Ub0NoYXQgPSAoKSA9PiB7XG4gICAyMTBcdCAgcm91dGVyLnB1c2goJy9jaGF0JylcbiAgIDIxMVx0fVxuICAgMjEyXHRcbiAgIDIxM1x0Ly8g57uE5Lu25oyC6L295pe26I635Y+W5raI5oGvXG4gICAyMTRcdG9uTW91bnRlZCgoKSA9PiB7XG4gICAyMTVcdCAgaWYgKGlzTG9naW4udmFsdWUpIHtcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiZmMzZTkyYmItNDFjNC00ZjFmLTgzYjQtMzM5NzgxNWJmNTU0O3Rvb2x1XzAxNjQxcVI4a0hHVmdETnBMRjcyV1NGdSI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDQ0XHQgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWVzc2FnZS11c2VybmFtZVwiPnt7IG1lc3NhZ2UudXNlcm5hbWUgfX08L3NwYW4+XG4gICAgNDVcdCAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtZXNzYWdlLXRpbWVcIj57eyBtZXNzYWdlLnRpbWUgfX08L3NwYW4+XG4gICAgNDZcdCAgICAgICAgICAgIDwvZGl2PlxuICAgIDQ3XHQgICAgICAgICAgICA8IS0tIOiBiuWkqea2iOaBr+aYvuekuiAtLT5cbiAgICA0OFx0ICAgICAgICAgICAgPGRpdiB2LWlmPVwibWVzc2FnZS5pc0NoYXRcIiBjbGFzcz1cIm1lc3NhZ2UtdGV4dCBjaGF0LW1lc3NhZ2VcIiBAY2xpY2s9XCJnb1RvQ2hhdCgpXCIgOmNsYXNzPVwieyAnY2xpY2thYmxlJzogbWVzc2FnZS5pc0NoYXQgfVwiPlxuICAgIDQ5XHQgICAgICAgICAgICAgIHt7IG1lc3NhZ2UuY29udGVudCB9fVxuICAgIDUwXHQgICAgICAgICAgICA8L2Rpdj5cbiAgICA1MVx0XG4gICAgNTJcdCAgICAgICAgICAgIDwhLS0g54K56LWe5raI5oGv5pi+56S6IC0tPlxuICAgIDUzXHQgICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPlxuICAgIDU0XHQgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLXRleHRcIj57eyBtZXNzYWdlLmNvbnRlbnQgfX08L2Rpdj5cblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiMDA4ZTUxYzQtNjkxZi00MDAwLTg0MzItNDA5NGYyYTNhOGQ3O3Rvb2x1XzAxR0V6cnB4ekFZUFJtV0xoQ2t1VlpxcSI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTc3XHQgICAgICAgICAgfVxuICAgMTc4XHQgICAgICAgIH0pKVxuICAgMTc5XHQgICAgICB9XG4gICAxODBcdFxuICAgMTgxXHQgICAgICAvLyDlpITnkIbogYrlpKnmtojmga/mlbDmja5cbiAgIDE4Mlx0ICAgICAgaWYgKG1lc3NhZ2VEYXRhLnVzZXJDaGF0TWVzc2FnZUR0byAmJiBtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8ubGVuZ3RoID4gMCkge1xuICAgMTgzXHQgICAgICAgIHJlcGxpZXMudmFsdWUgPSBtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8ubWFwKGl0ZW0gPT4gKHtcbiAgIDE4NFx0ICAgICAgICAgIGlkOiBpdGVtLmlkLFxuICAgMTg1XHQgICAgICAgICAgdXNlcm5hbWU6IGl0ZW0ubmlja25hbWUsXG4gICAxODZcdCAgICAgICAgICBjaGF0VXNlcm5hbWU6IGl0ZW0udXNlcm5hbWUsIC8vIOS/neWtmOeUqOaIt+WQjeS7peS+v+i3s+i9rOWIsOiBiuWkqemhtemdolxuICAgMTg3XHQgICAgICAgICAgYXZhdGFyOiBpdGVtLnVzZXJQaWMsXG4gICAxODhcdCAgICAgICAgICB0aW1lOiBmb3JtYXREYXRlKGl0ZW0uc2VuZFRpbWUpLFxuICAgMTg5XHQgICAgICAgICAgY29udGVudDogaXRlbS5jb250ZW50LFxuICAgMTkwXHQgICAgICAgICAgaXNDaGF0OiB0cnVlXG4gICAxOTFcdCAgICAgICAgfSkpXG4gICAxOTJcdCAgICAgIH1cbiAgIDE5M1x0ICAgIH0gZWxzZSB7XG4gICAxOTRcdCAgICAgIEVsTWVzc2FnZS5lcnJvcign6I635Y+W5raI5oGv5aSx6LSl77yaJyArIHJlcy5tZXNzYWdlKVxuICAgMTk1XHQgICAgfVxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCJhYWRjZTRiMi1lZTc0LTQxM2YtOTk0Ni01MmQwNTExYmFjNDA7dG9vbHVfMDE1MkJVcjN3d05VRkRBZ3g5akpSaml1Ijp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAyMDVcdGNvbnN0IGdvVG9WaWRlbyA9ICh2aWRlb0lkKSA9PiB7XG4gICAyMDZcdCAgcm91dGVyLnB1c2goYC92aWRlby8ke3ZpZGVvSWR9YClcbiAgIDIwN1x0fVxuICAgMjA4XHRcbiAgIDIwOVx0Ly8g6Lez6L2s5Yiw6IGK5aSp6aG16Z2iXG4gICAyMTBcdGNvbnN0IGdvVG9DaGF0ID0gKHVzZXJuYW1lKSA9PiB7XG4gICAyMTFcdCAgaWYgKHVzZXJuYW1lKSB7XG4gICAyMTJcdCAgICAvLyDlpoLmnpzmnInnlKjmiLflkI3vvIzliJnkvKDpgJLnu5nogYrlpKnpobXpnaJcbiAgIDIxM1x0ICAgIHJvdXRlci5wdXNoKGAvY2hhdD91c2VybmFtZT0ke2VuY29kZVVSSUNvbXBvbmVudCh1c2VybmFtZSl9YClcbiAgIDIxNFx0ICB9IGVsc2Uge1xuICAgMjE1XHQgICAgLy8g5aaC5p6c5rKh5pyJ55So5oi35ZCN77yM5YiZ55u05o6l6Lez6L2s5Yiw6IGK5aSp6aG16Z2iXG4gICAyMTZcdCAgICByb3V0ZXIucHVzaCgnL2NoYXQnKVxuICAgMjE3XHQgIH1cbiAgIDIxOFx0fVxuICAgMjE5XHRcbiAgIDIyMFx0Ly8g57uE5Lu25oyC6L295pe26I635Y+W5raI5oGvXG4gICAyMjFcdG9uTW91bnRlZCgoKSA9PiB7XG4gICAyMjJcdCAgaWYgKGlzTG9naW4udmFsdWUpIHtcblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiNWE2Yjg0ZjQtMjZjZC00MTk1LWIxMmYtMjM5NTgzMDg4YjQ0O3Rvb2x1XzAxV2NLRzRYY2ZHSkxMdkFRekVvaHg1NyI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDQ0XHQgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWVzc2FnZS11c2VybmFtZVwiPnt7IG1lc3NhZ2UudXNlcm5hbWUgfX08L3NwYW4+XG4gICAgNDVcdCAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtZXNzYWdlLXRpbWVcIj57eyBtZXNzYWdlLnRpbWUgfX08L3NwYW4+XG4gICAgNDZcdCAgICAgICAgICAgIDwvZGl2PlxuICAgIDQ3XHQgICAgICAgICAgICA8IS0tIOiBiuWkqea2iOaBr+aYvuekuiAtLT5cbiAgICA0OFx0ICAgICAgICAgICAgPGRpdiB2LWlmPVwibWVzc2FnZS5pc0NoYXRcIiBjbGFzcz1cIm1lc3NhZ2UtdGV4dCBjaGF0LW1lc3NhZ2VcIiBAY2xpY2s9XCJnb1RvQ2hhdChtZXNzYWdlLmNoYXRVc2VybmFtZSlcIiA6Y2xhc3M9XCJ7ICdjbGlja2FibGUnOiBtZXNzYWdlLmlzQ2hhdCB9XCI+XG4gICAgNDlcdCAgICAgICAgICAgICAge3sgbWVzc2FnZS5jb250ZW50IH19XG4gICAgNTBcdCAgICAgICAgICAgIDwvZGl2PlxuICAgIDUxXHRcbiAgICA1Mlx0ICAgICAgICAgICAgPCEtLSDngrnotZ7mtojmga/mmL7npLogLS0+XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sImI5NDU3ODc5LWU2ODYtNDk3OC05OTRkLTA1OGE0MGRiMGMzMTt0b29sdV8wMUVLRHNlVEpMQnljczNBc2oxc3lEVGUiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgICA5NVx0ICByb3V0ZXIucHVzaCgnLycpXG4gICAgOTZcdH1cbiAgICA5N1x0XG4gICAgOThcdC8vIOaooeaLn+aVsOaNriAtIOWunumZhemhueebruS4reW6lOivpeS7jkFQSeiOt+WPllxuICAgIDk5XHQvLyDliJ3lp4vljJbmtojmga/mlbDnu4RcbiAgIDEwMFx0XG4gICAxMDFcdGNvbnN0IGxpa2VzID0gcmVmKFtdKVxuICAgMTAyXHRcbiAgIDEwM1x0Y29uc3QgcmVwbGllcyA9IHJlZihbXSlcbiAgIDEwNFx0XG4gICAxMDVcdGNvbnN0IGNvbW1lbnRzID0gcmVmKFtdKVxuICAgMTA2XHRcbiAgIDEwN1x0Y29uc3Qgc3lzdGVtTm90aWNlcyA9IHJlZihbXG4gICAxMDhcdCAge1xuICAgMTA5XHQgICAgaWQ6IDEsXG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjNhMmUxNGMyLTJjYWMtNDRmZC05ZGFjLWI4NTViMmFmMWNmMTt0b29sdV8wMUhiWlIzOHZMQW5oZ3ZTdE03RUtudUwiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDE1N1x0ICAgICAgICAgIH1cbiAgIDE1OFx0ICAgICAgICB9KSlcbiAgIDE1OVx0ICAgICAgfVxuICAgMTYwXHRcbiAgIDE2MVx0ICAgICAgLy8g5aSE55CG6IGK5aSp5raI5oGv5pWw5o2uXG4gICAxNjJcdCAgICAgIGlmIChtZXNzYWdlRGF0YS51c2VyQ2hhdE1lc3NhZ2VEdG8gJiYgbWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvLmxlbmd0aCA+IDApIHtcbiAgIDE2M1x0ICAgICAgICByZXBsaWVzLnZhbHVlID0gbWVzc2FnZURhdGEudXNlckNoYXRNZXNzYWdlRHRvLm1hcChpdGVtID0+ICh7XG4gICAxNjRcdCAgICAgICAgICBpZDogaXRlbS5pZCxcbiAgIDE2NVx0ICAgICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxuICAgMTY2XHQgICAgICAgICAgY2hhdFVzZXJuYW1lOiBpdGVtLnVzZXJuYW1lLCAvLyDkv53lrZjnlKjmiLflkI3ku6Xkvr/ot7PovazliLDogYrlpKnpobXpnaJcbiAgIDE2N1x0ICAgICAgICAgIGF2YXRhcjogaXRlbS51c2VyUGljLFxuICAgMTY4XHQgICAgICAgICAgdGltZTogZm9ybWF0RGF0ZShpdGVtLnNlbmRUaW1lKSxcbiAgIDE2OVx0ICAgICAgICAgIGNvbnRlbnQ6IGl0ZW0uY29udGVudCxcbiAgIDE3MFx0ICAgICAgICAgIGlzQ2hhdDogdHJ1ZVxuICAgMTcxXHQgICAgICAgIH0pKVxuICAgMTcyXHQgICAgICB9XG4gICAxNzNcdFxuICAgMTc0XHQgICAgICAvLyDlpITnkIbor4Torrrmtojmga/mlbDmja5cbiAgIDE3NVx0ICAgICAgaWYgKG1lc3NhZ2VEYXRhLmNvbW1lbnRzTWVzc2FnZSAmJiBtZXNzYWdlRGF0YS5jb21tZW50c01lc3NhZ2UubGVuZ3RoID4gMCkge1xuICAgMTc2XHQgICAgICAgIGNvbW1lbnRzLnZhbHVlID0gbWVzc2FnZURhdGEuY29tbWVudHNNZXNzYWdlLm1hcChpdGVtID0+ICh7XG4gICAxNzdcdCAgICAgICAgICBpZDogaXRlbS5pZCxcbiAgIDE3OFx0ICAgICAgICAgIHVzZXJuYW1lOiBpdGVtLm5pY2tuYW1lLFxuICAgMTc5XHQgICAgICAgICAgYXZhdGFyOiBpdGVtLnVzZXJQaWMsXG4gICAxODBcdCAgICAgICAgICB0aW1lOiBmb3JtYXREYXRlKGl0ZW0uY3JlYXRlVGltZSksXG4gICAxODFcdCAgICAgICAgICBjb250ZW50OiBpdGVtLmNvbnRlbnQsXG4gICAxODJcdCAgICAgICAgICB2aWRlb0lkOiBpdGVtLnZpZGVvSWQsXG4gICAxODNcdCAgICAgICAgICBzb3VyY2U6IHtcbiAgIDE4NFx0ICAgICAgICAgICAgdGl0bGU6IGl0ZW0udGl0bGUsXG4gICAxODVcdCAgICAgICAgICAgIGNvbnRlbnQ6ICcnLFxuICAgMTg2XHQgICAgICAgICAgICBjb3ZlcjogaXRlbS52aWRlb0NvdmVyXG4gICAxODdcdCAgICAgICAgICB9LFxuICAgMTg4XHQgICAgICAgICAgaXNDb21tZW50OiB0cnVlXG4gICAxODlcdCAgICAgICAgfSkpXG4gICAxOTBcdCAgICAgIH1cbiAgIDE5MVx0ICAgIH0gZWxzZSB7XG4gICAxOTJcdCAgICAgIEVsTWVzc2FnZS5lcnJvcign6I635Y+W5raI5oGv5aSx6LSl77yaJyArIHJlcy5tZXNzYWdlKVxuICAgMTkzXHQgICAgfVxuICAgMTk0XHQgIH0gY2F0Y2ggKGVycm9yKSB7XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjNiYzY4MjU4LTM4ZjUtNDNiYi1hMDQyLWNkNjU2MmZjOGNiMTt0b29sdV8wMVBpdHlpMjVGcnhLWXVhSDFMRHo0OFUiOnsicGhhc2UiOjYsInJlc3VsdCI6eyJ0ZXh0IjoiRmFpbGVkIHRvIGVkaXQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLiBTZWUgYmVsb3cgZm9yIGRldGFpbHMuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5ObyByZXBsYWNlbWVudCB3YXMgcGVyZm9ybWVkLCBvbGRTdHIgZGlkIG5vdCBhcHBlYXIgdmVyYmF0aW0gaW4gc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuVGhlIGNvbnRlbnQgaW4gdGhlIHNwZWNpZmllZCByZWdpb24gaXM6XG4gICAgIDZcdCAgICAgICAgOmRlZmF1bHQtYWN0aXZlPVwiYWN0aXZlVGFiXCJcbiAgICAgN1x0ICAgICAgICBjbGFzcz1cIm1lc3NhZ2UtbWVudVwiXG4gICAgIDhcdCAgICAgICAgQHNlbGVjdD1cImhhbmRsZU1lbnVTZWxlY3RcIlxuICAgICA5XHQgICAgICA+XG4gICAgMTBcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cImxpa2VzXCI+XG4gICAgMTFcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDEyXHQgICAgICAgICAgICA8c3Bhbj7ngrnotZ7mtojmga88L3NwYW4+XG4gICAgMTNcdCAgICAgICAgICAgIDxlbC1iYWRnZSB2LWlmPVwibGlrZXMubGVuZ3RoID4gMFwiIDp2YWx1ZT1cImxpa2VzLmxlbmd0aFwiIGNsYXNzPVwibWVzc2FnZS1iYWRnZVwiIC8+XG4gICAgMTRcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDE1XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDE2XHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJyZXBsaWVzXCI+XG4gICAgMTdcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDE4XHQgICAgICAgICAgICA8c3Bhbj7ogYrlpKnmtojmga88L3NwYW4+XG4gICAgMTlcdCAgICAgICAgICAgIDxlbC1iYWRnZSB2LWlmPVwicmVwbGllcy5sZW5ndGggPiAwXCIgOnZhbHVlPVwicmVwbGllcy5sZW5ndGhcIiBjbGFzcz1cIm1lc3NhZ2UtYmFkZ2VcIiAvPlxuICAgIDIwXHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAyMVx0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAyMlx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwic3lzdGVtXCI+XG4gICAgMjNcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDI0XHQgICAgICAgICAgICA8c3Bhbj7or4Torrrmtojmga88L3NwYW4+XG4gICAgMjVcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDI2XHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDI3XHQgICAgICA8L2VsLW1lbnU+XG4gICAgMjhcdCAgICA8L2Rpdj5cbiAgICAyOVx0XG4gICAgMzBcdCAgICA8IS0tIOWPs+S+p+WGheWuueWMuiAtLT5cblxuRGlmZiBiZXR3ZWVuIG9sZFN0ciBhbmQgdGhlIHNwZWNpZmllZCByZWdpb24gaXM6XG49PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4tLS0gb2xkU3RyXG4rKysgcmVnaW9uQ29udGVudFxuQEAgLTEyLDYgKzEyLDYgQEBcbiAgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInN5c3RlbVwiPlxuICAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuLSAgICAgICAgICAgIDxzcGFuPuezu+e7n+mAmuefpTwvc3Bhbj5cbisgICAgICAgICAgICA8c3Bhbj7or4Torrrmtojmga88L3NwYW4+XG4gICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgICAgICA8L2VsLW1lbnUtaXRlbT5cblxuXG5GaXggZmFpbGVkIHN0cl9yZXBsYWNlX2VudHJpZXMgYWNjb3JkaW5nbHkgYW5kIHRyeSBhZ2Fpbi5cbiIsImlzRXJyb3IiOnRydWUsInJlcXVlc3RJZCI6IiJ9fSwiMTExYWY1YTUtNDBhMi00NWIyLWFlODYtNDYzYzQyZjZlZmZlO3Rvb2x1XzAxWGRKbllSN1RCM000akMxNXNwN0VXaiI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZTpcbiAgICAgNVx0ICAgICAgPGVsLW1lbnVcbiAgICAgNlx0ICAgICAgICA6ZGVmYXVsdC1hY3RpdmU9XCJhY3RpdmVUYWJcIlxuICAgICA3XHQgICAgICAgIGNsYXNzPVwibWVzc2FnZS1tZW51XCJcbiAgICAgOFx0ICAgICAgICBAc2VsZWN0PVwiaGFuZGxlTWVudVNlbGVjdFwiXG4gICAgIDlcdCAgICAgID5cbiAgICAxMFx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwibGlrZXNcIj5cbiAgICAxMVx0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMTJcdCAgICAgICAgICAgIDxzcGFuPueCuei1nua2iOaBrzwvc3Bhbj5cbiAgICAxM1x0ICAgICAgICAgICAgPGVsLWJhZGdlIHYtaWY9XCJsaWtlcy5sZW5ndGggPiAwXCIgOnZhbHVlPVwibGlrZXMubGVuZ3RoXCIgY2xhc3M9XCJtZXNzYWdlLWJhZGdlXCIgLz5cbiAgICAxNFx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMTVcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMTZcdCAgICAgICAgPGVsLW1lbnUtaXRlbSBpbmRleD1cInJlcGxpZXNcIj5cbiAgICAxN1x0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMThcdCAgICAgICAgICAgIDxzcGFuPuiBiuWkqea2iOaBrzwvc3Bhbj5cbiAgICAxOVx0ICAgICAgICAgICAgPGVsLWJhZGdlIHYtaWY9XCJyZXBsaWVzLmxlbmd0aCA+IDBcIiA6dmFsdWU9XCJyZXBsaWVzLmxlbmd0aFwiIGNsYXNzPVwibWVzc2FnZS1iYWRnZVwiIC8+XG4gICAgMjBcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDIxXHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDIyXHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJzeXN0ZW1cIj5cbiAgICAyM1x0ICAgICAgICAgIDx0ZW1wbGF0ZSAjdGl0bGU+XG4gICAgMjRcdCAgICAgICAgICAgIDxzcGFuPuivhOiuuua2iOaBrzwvc3Bhbj5cbiAgICAyNVx0ICAgICAgICAgIDwvdGVtcGxhdGU+XG4gICAgMjZcdCAgICAgICAgPC9lbC1tZW51LWl0ZW0+XG4gICAgMjdcdCAgICAgIDwvZWwtbWVudT5cbiAgICAyOFx0ICAgIDwvZGl2PlxuICAgIDI5XHRcbiAgICAzMFx0ICAgIDwhLS0g5Y+z5L6n5YaF5a655Yy6IC0tPlxuVG90YWwgbGluZXMgaW4gZmlsZTogNDA2XG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCIxZWNjMWZmZC0zZDRhLTQ3M2EtOWJmYi02MWVjZmMwMzAxODk7dG9vbHVfMDFRS0xOYWJYVWhmd01tV2VjWWJ3V3lpIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL3ZpZXdzL01lc3NhZ2VDZW50ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAgMThcdCAgICAgICAgICAgIDxzcGFuPuiBiuWkqea2iOaBrzwvc3Bhbj5cbiAgICAxOVx0ICAgICAgICAgICAgPGVsLWJhZGdlIHYtaWY9XCJyZXBsaWVzLmxlbmd0aCA+IDBcIiA6dmFsdWU9XCJyZXBsaWVzLmxlbmd0aFwiIGNsYXNzPVwibWVzc2FnZS1iYWRnZVwiIC8+XG4gICAgMjBcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDIxXHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDIyXHQgICAgICAgIDxlbC1tZW51LWl0ZW0gaW5kZXg9XCJjb21tZW50c1wiPlxuICAgIDIzXHQgICAgICAgICAgPHRlbXBsYXRlICN0aXRsZT5cbiAgICAyNFx0ICAgICAgICAgICAgPHNwYW4+6K+E6K665raI5oGvPC9zcGFuPlxuICAgIDI1XHQgICAgICAgICAgICA8ZWwtYmFkZ2Ugdi1pZj1cImNvbW1lbnRzLmxlbmd0aCA+IDBcIiA6dmFsdWU9XCJjb21tZW50cy5sZW5ndGhcIiBjbGFzcz1cIm1lc3NhZ2UtYmFkZ2VcIiAvPlxuICAgIDI2XHQgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAyN1x0ICAgICAgICA8L2VsLW1lbnUtaXRlbT5cbiAgICAyOFx0ICAgICAgICA8ZWwtbWVudS1pdGVtIGluZGV4PVwic3lzdGVtXCI+XG4gICAgMjlcdCAgICAgICAgICA8dGVtcGxhdGUgI3RpdGxlPlxuICAgIDMwXHQgICAgICAgICAgICA8c3Bhbj7ns7vnu5/pgJrnn6U8L3NwYW4+XG4gICAgMzFcdCAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgIDMyXHQgICAgICAgIDwvZWwtbWVudS1pdGVtPlxuICAgIDMzXHQgICAgICA8L2VsLW1lbnU+XG4gICAgMzRcdCAgICA8L2Rpdj5cbiAgICAzNVx0XG4gICAgMzZcdCAgICA8IS0tIOWPs+S+p+WGheWuueWMuiAtLT5cblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiNzliMWExNzQtNjRiNy00NzAzLThlOWMtZTU5ZDg1MjY0MzcyO3Rvb2x1XzAxQWhpcW1jMjFXY1F3d2NHcVJaRFpUbyI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTIyXHQgICAgY29udGVudDogJ+ezu+e7n+WwhuS6jjTmnIgyMOaXpei/m+ihjOe7tOaKpOWNh+e6p++8jOWxiuaXtuWPr+iDveS8muW9seWTjemDqOWIhuWKn+iDveeahOS9v+eUqOOAgidcbiAgIDEyM1x0ICB9XG4gICAxMjRcdF0pXG4gICAxMjVcdFxuICAgMTI2XHQvLyDmoLnmja7lvZPliY3pgInkuK3nmoTmoIfnrb7liqjmgIHojrflj5bmtojmga9cbiAgIDEyN1x0Y29uc3QgY3VycmVudE1lc3NhZ2VzID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgMTI4XHQgIHN3aXRjaCAoYWN0aXZlVGFiLnZhbHVlKSB7XG4gICAxMjlcdCAgICBjYXNlICdsaWtlcyc6XG4gICAxMzBcdCAgICAgIHJldHVybiBsaWtlcy52YWx1ZVxuICAgMTMxXHQgICAgY2FzZSAnY29tbWVudHMnOlxuICAgMTMyXHQgICAgICByZXR1cm4gY29tbWVudHMudmFsdWVcbiAgIDEzM1x0ICAgIGNhc2UgJ3JlcGxpZXMnOlxuICAgMTM0XHQgICAgICByZXR1cm4gcmVwbGllcy52YWx1ZVxuICAgMTM1XHQgICAgY2FzZSAnc3lzdGVtJzpcbiAgIDEzNlx0ICAgICAgcmV0dXJuIHN5c3RlbU5vdGljZXMudmFsdWVcbiAgIDEzN1x0ICAgIGRlZmF1bHQ6XG4gICAxMzhcdCAgICAgIHJldHVybiBbXVxuICAgMTM5XHQgIH1cbiAgIDE0MFx0fSlcbiAgIDE0MVx0XG4gICAxNDJcdC8vIOiOt+WPlueUqOaIt+a2iOaBr1xuICAgMTQzXHRjb25zdCBnZXRVc2VyTWVzc2FnZXMgPSBhc3luYyAoKSA9PiB7XG4gICAxNDRcdCAgaWYgKCFpc0xvZ2luLnZhbHVlKSByZXR1cm5cblxuUmV2aWV3IHRoZSBjaGFuZ2VzIGFuZCBtYWtlIHN1cmUgdGhleSBhcmUgYXMgZXhwZWN0ZWQgKGNvcnJlY3QgaW5kZW50YXRpb24sIG5vIGR1cGxpY2F0ZSBsaW5lcywgZXRjKS5cbkVkaXQgdGhlIGZpbGUgYWdhaW4gaWYgbmVjZXNzYXJ5LlxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiOGIyZWYwNTktNTczOS00ZTcwLWI5MTEtNWNiNWY2YmRjZDg3O3Rvb2x1XzAxOGVRZWtadTdoVVpVSGY0OXlLY1gzWSI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy92aWV3cy9NZXNzYWdlQ2VudGVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgIDQ5XHQgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1pbmZvXCI+XG4gICAgNTBcdCAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtZXNzYWdlLXVzZXJuYW1lXCI+e3sgbWVzc2FnZS51c2VybmFtZSB9fTwvc3Bhbj5cbiAgICA1MVx0ICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1lc3NhZ2UtdGltZVwiPnt7IG1lc3NhZ2UudGltZSB9fTwvc3Bhbj5cbiAgICA1Mlx0ICAgICAgICAgICAgPC9kaXY+XG4gICAgNTNcdCAgICAgICAgICAgIDwhLS0g6IGK5aSp5raI5oGv5pi+56S6IC0tPlxuICAgIDU0XHQgICAgICAgICAgICA8ZGl2IHYtaWY9XCJtZXNzYWdlLmlzQ2hhdFwiIGNsYXNzPVwibWVzc2FnZS10ZXh0IGNoYXQtbWVzc2FnZVwiIEBjbGljaz1cImdvVG9DaGF0KG1lc3NhZ2UuY2hhdFVzZXJuYW1lKVwiIDpjbGFzcz1cInsgJ2NsaWNrYWJsZSc6IG1lc3NhZ2UuaXNDaGF0IH1cIj5cbiAgICA1NVx0ICAgICAgICAgICAgICB7eyBtZXNzYWdlLmNvbnRlbnQgfX1cbiAgICA1Nlx0ICAgICAgICAgICAgPC9kaXY+XG4gICAgNTdcdFxuICAgIDU4XHQgICAgICAgICAgICA8IS0tIOivhOiuuua2iOaBr+aYvuekuiAtLT5cbiAgICA1OVx0ICAgICAgICAgICAgPHRlbXBsYXRlIHYtZWxzZS1pZj1cIm1lc3NhZ2UuaXNDb21tZW50XCI+XG4gICAgNjBcdCAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lc3NhZ2UtdGV4dCBjb21tZW50LW1lc3NhZ2VcIj5cbiAgICA2MVx0ICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY29tbWVudC1jb250ZW50XCI+e3sgbWVzc2FnZS5jb250ZW50IH19PC9zcGFuPlxuICAgIDYyXHQgICAgICAgICAgICAgIDwvZGl2PlxuICAgIDYzXHQgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLXNvdXJjZVwiIHYtaWY9XCJtZXNzYWdlLnNvdXJjZVwiIEBjbGljaz1cIm1lc3NhZ2UudmlkZW9JZCAmJiBnb1RvVmlkZW8obWVzc2FnZS52aWRlb0lkKVwiPlxuICAgIDY0XHQgICAgICAgICAgICAgICAgPGVsLWNhcmQgc2hhZG93PVwiaG92ZXJcIiBjbGFzcz1cIm1lc3NhZ2Utc291cmNlLWNhcmRcIiA6Y2xhc3M9XCJ7ICdjbGlja2FibGUnOiBtZXNzYWdlLnZpZGVvSWQgfVwiPlxuICAgIDY1XHQgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWNvbnRlbnQtd3JhcHBlclwiPlxuICAgIDY2XHQgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtaW1hZ2VcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2UuY292ZXJcIj5cbiAgICA2N1x0ICAgICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz1cIm1lc3NhZ2Uuc291cmNlLmNvdmVyXCIgYWx0PVwi6KeG6aKR5bCB6Z2iXCIgLz5cbiAgICA2OFx0ICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA2OVx0ICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLXRleHRcIj5cbiAgICA3MFx0ICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtdGl0bGVcIj57eyBtZXNzYWdlLnNvdXJjZS50aXRsZSB9fTwvZGl2PlxuICAgIDcxXHQgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgIDcyXHQgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA3M1x0ICAgICAgICAgICAgICAgIDwvZWwtY2FyZD5cbiAgICA3NFx0ICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA3NVx0ICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICA3Nlx0XG4gICAgNzdcdCAgICAgICAgICAgIDwhLS0g54K56LWe5raI5oGv5pi+56S6IC0tPlxuICAgIDc4XHQgICAgICAgICAgICA8dGVtcGxhdGUgdi1lbHNlPlxuICAgIDc5XHQgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtZXNzYWdlLXRleHRcIj57eyBtZXNzYWdlLmNvbnRlbnQgfX08L2Rpdj5cbiAgICA4MFx0ICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVzc2FnZS1zb3VyY2VcIiB2LWlmPVwibWVzc2FnZS5zb3VyY2VcIiBAY2xpY2s9XCJtZXNzYWdlLnZpZGVvSWQgJiYgZ29Ub1ZpZGVvKG1lc3NhZ2UudmlkZW9JZClcIj5cbiAgICA4MVx0ICAgICAgICAgICAgICAgIDxlbC1jYXJkIHNoYWRvdz1cImhvdmVyXCIgY2xhc3M9XCJtZXNzYWdlLXNvdXJjZS1jYXJkXCIgOmNsYXNzPVwieyAnY2xpY2thYmxlJzogbWVzc2FnZS52aWRlb0lkIH1cIj5cbiAgICA4Mlx0ICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS1jb250ZW50LXdyYXBwZXJcIj5cbiAgICA4M1x0ICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLWltYWdlXCIgdi1pZj1cIm1lc3NhZ2Uuc291cmNlLmNvdmVyXCI+XG4gICAgODRcdCAgICAgICAgICAgICAgICAgICAgICA8aW1nIDpzcmM9XCJtZXNzYWdlLnNvdXJjZS5jb3ZlclwiIGFsdD1cIuinhumikeWwgemdolwiIC8+XG4gICAgODVcdCAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgODZcdCAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNvdXJjZS10ZXh0XCI+XG4gICAgODdcdCAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic291cmNlLXRpdGxlXCI+e3sgbWVzc2FnZS5zb3VyY2UudGl0bGUgfX08L2Rpdj5cbiAgICA4OFx0ICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzb3VyY2UtY29udGVudFwiIHYtaWY9XCJtZXNzYWdlLnNvdXJjZS5jb250ZW50XCI+e3sgbWVzc2FnZS5zb3VyY2UuY29udGVudCB9fTwvZGl2PlxuICAgIDg5XHQgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgIDkwXHQgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA5MVx0ICAgICAgICAgICAgICAgIDwvZWwtY2FyZD5cbiAgICA5Mlx0ICAgICAgICAgICAgICA8L2Rpdj5cbiAgICA5M1x0ICAgICAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICA5NFx0ICAgICAgICAgIDwvZGl2PlxuICAgIDk1XHQgICAgICAgIDwvZGl2PlxuICAgIDk2XHQgICAgICA8L2Rpdj5cbiAgICA5N1x0ICAgICAgPGVsLWVtcHR5IHYtZWxzZSBkZXNjcmlwdGlvbj1cIuaaguaXoOa2iOaBr1wiPjwvZWwtZW1wdHk+XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjlmODVjMmNmLWIzYjItNGM3Ny05NDA4LTljMDEyMGM3ZDE3MTt0b29sdV8wMVVNQVFGNkJqR3pFQmVqN1RSZVdHaTIiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvdmlld3MvTWVzc2FnZUNlbnRlci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDM5Nlx0LmNsaWNrYWJsZTpob3ZlciB7XG4gICAzOTdcdCAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjFmMjtcbiAgIDM5OFx0fVxuICAgMzk5XHRcbiAgIDQwMFx0LmNoYXQtbWVzc2FnZSB7XG4gICA0MDFcdCAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjdmODtcbiAgIDQwMlx0ICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gICA0MDNcdCAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgNDA0XHQgIG1hcmdpbi1ib3R0b206IDA7XG4gICA0MDVcdCAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgIDQwNlx0fVxuICAgNDA3XHRcbiAgIDQwOFx0LmNvbW1lbnQtbWVzc2FnZSB7XG4gICA0MDlcdCAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgIDQxMFx0ICBsaW5lLWhlaWdodDogMS42O1xuICAgNDExXHR9XG4gICA0MTJcdFxuICAgNDEzXHQuY29tbWVudC1jb250ZW50IHtcbiAgIDQxNFx0ICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmN2Y4O1xuICAgNDE1XHQgIHBhZGRpbmc6IDhweCAxMnB4O1xuICAgNDE2XHQgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgIDQxN1x0ICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICA0MThcdCAgY29sb3I6ICMxODE5MWM7XG4gICA0MTlcdH1cbiAgIDQyMFx0XG4gICA0MjFcdC5tZXNzYWdlLWJhZGdlIDpkZWVwKC5lbC1iYWRnZV9fY29udGVudCkge1xuICAgNDIyXHQgIGJhY2tncm91bmQtY29sb3I6ICNmYjcyOTk7XG4gICA0MjNcdCAgYm9yZGVyOiBub25lO1xuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCI3NDNlM2ZmZC0xNTNkLTQ2NmEtOTY3MC0xZjRkOTBmYWU0MzI7dG9vbHVfMDFNbXh1NU1KdHRabW9MWThvM2IyOW9vIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IlRoZSBmb2xsb3dpbmcgY29kZSBzZWN0aW9ucyB3ZXJlIHJldHJpZXZlZDpcblBhdGg6IHNyYy9jb21wb25lbnRzL3ZpZGVvL1ZpZGVvUGxheWVyLnZ1ZVxuPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwidmlkZW8tcGxheWVyXCIgcmVmPVwicGxheWVyQ29udGFpbmVyXCIgQG1vdXNlbW92ZT1cImhhbmRsZU1vdXNlTW92ZVwiIEBtb3VzZWxlYXZlPVwiaGFuZGxlTW91c2VMZWF2ZVwiPlxuICAgIDxkaXYgY2xhc3M9XCJiYWNrLWJ1dHRvblwiIEBjbGljaz1cInJvdXRlci5iYWNrKClcIiA6Y2xhc3M9XCJ7ICdzaG93LWNvbnRyb2wnOiBpc0NvbnRyb2xWaXNpYmxlIH1cIj5cbiAgICAgIDxpbWcgOnNyYz1cIlJldHVybkljb25cIiBhbHQ9XCLov5Tlm55cIi8+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImFydHBsYXllci1hcHBcIj48L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0IHNldHVwPlxuaW1wb3J0IHtyZWYsIG9uTW91bnRlZCwgb25Vbm1vdW50ZWQsIHdhdGNoLCBuZXh0VGlja30gZnJvbSAndnVlJ1xuaW1wb3J0IEFydHBsYXllciBmcm9tICdhcnRwbGF5ZXInXG5pbXBvcnQgYXJ0cGxheWVyUGx1Z2luRGFubXVrdSBmcm9tICdhcnRwbGF5ZXItcGx1Z2luLWRhbm11a3UnXG5pbXBvcnQge3VzZVJvdXRlcn0gZnJvbSAndnVlLXJvdXRlcidcbmltcG9ydCB7c2VuZEJhcnJhZ2VTZXJ2aWNlLCBnZXRCYXJyYWdlU2VydmljZX0gZnJvbSAnQC9hcGkvYmFycmFnZSdcbmltcG9ydCB7RWxNZXNzYWdlfSBmcm9tICdlbGVtZW50LXBsdXMnXG5pbXBvcnQgUmV0dXJuSWNvbiBmcm9tICdAL2Fzc2V0cy9pY29uc3ZnL2NvaW4uc3ZnJ1xuXG5jb25zdCBwcm9wcyA9IGRlZmluZVByb3BzKHtcbiAgdmlkZW9Vcmw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgcG9zdGVyOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGRlZmF1bHQ6ICcnXG4gIH0sXG4gIHRpdGxlOiB7XG4gICAgdHlwZTogU3RyaW5nLFxuICAgIGRlZmF1bHQ6ICcnXG4gIH0sXG4gIGlzQ29sbGFwc2VkOiB7XG4gICAgdHlwZTogQm9vbGVhbixcbiAgICBkZWZhdWx0OiBmYWxzZVxuICB9LFxuICB2aWRlb0lkOiB7XG4gICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSxcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9XG59KVxuXG5jb25zdCBlbWl0ID0gZGVmaW5lRW1pdHMoWyd0b2dnbGUtY29sbGFwc2UnXSlcbmNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpXG5jb25zdCBhcnQgPSByZWYobnVsbClcbmNvbnN0IHBsYXllckNvbnRhaW5lciA9IHJlZihudWxsKVxuXG4vLyDmt7vliqDmjqfliLbmmL7npLrnirbmgIFcbmNvbnN0IGlzQ29udHJvbFZpc2libGUgPSByZWYoZmFsc2UpXG5cbi8vIOm8oOagh+enu+WKqOWkhOeQhlxuY29uc3QgaGFuZGxlTW91c2VNb3ZlID0gKCkgPT4ge1xuICBpc0NvbnRyb2xWaXNpYmxlLnZhbHVlID0gdHJ1ZVxufVxuXG4vLyDpvKDmoIfnprvlvIDlpITnkIZcbmNvbnN0IGhhbmRsZU1vdXNlTGVhdmUgPSAoKSA9PiB7XG4gIGlzQ29udHJvbFZpc2libGUudmFsdWUgPSBmYWxzZVxufVxuXG4vLyDmt7vliqDlr7nnvZHpobXlhajlsY/nirbmgIHnmoTnrqHnkIZcbmNvbnN0IGlzV2ViRnVsbHNjcmVlbiA9IHJlZihmYWxzZSlcblxuLy8g5Yid5aeL5YyW5pKt5pS+5ZmoXG5jb25zdCBpbml0UGxheWVyID0gKCkgPT4ge1xuICBpZiAoYXJ0LnZhbHVlKSByZXR1cm5cblxuICAvLyDmo4Dmn6Xop4bpopFVUkzmmK/lkKbmnInmlYhcbiAgaWYgKCFwcm9wcy52aWRlb1VybCB8fCAhcGxheWVyQ29udGFpbmVyLnZhbHVlKSB7XG4gICAgY29uc29sZS5lcnJvcign6KeG6aKRVVJM5peg5pWI5oiW5a655Zmo5pyq5bCx57uqJylcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIOehruS/neWuueWZqOWGheaciSBhcnRwbGF5ZXItYXBwIOWFg+e0oFxuICBjb25zdCBjb250YWluZXIgPSBwbGF5ZXJDb250YWluZXIudmFsdWUucXVlcnlTZWxlY3RvcignLmFydHBsYXllci1hcHAnKVxuICBpZiAoIWNvbnRhaW5lcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+aJvuS4jeWIsOaSreaUvuWZqOWuueWZqOWFg+e0oCcpXG4gICAgcmV0dXJuXG4gIH1cblxuICBhcnQudmFsdWUgPSBuZXcgQXJ0cGxheWVyKHtcbiAgICBjb250YWluZXI6IGNvbnRhaW5lcixcbiAgICB1cmw6IHByb3BzLnZpZGVvVXJsLFxuICAgIHBvc3RlcjogcHJvcHMucG9zdGVyLFxuICAgIHRpdGxlOiBwcm9wcy50aXRsZSxcbiAgICB2b2x1bWU6IDAuNSxcbiAgICBpc0xpdmU6IGZhbHNlLFxuICAgIG11dGVkOiBmYWxzZSxcbiAgICBhdXRvcGxheTogZmFsc2UsXG4gICAgcGlwOiB0cnVlLFxuICAgIGF1dG9TaXplOiB0cnVlLFxuICAgIGF1dG9NaW5pOiB0cnVlLFxuICAgIHNjcmVlbnNob3Q6IHRydWUsXG4gICAgc2V0dGluZzogdHJ1ZSxcbiAgICBsb29wOiBmYWxzZSxcbiAgICBmbGlwOiB0cnVlLFxuICAgIHJvdGF0ZTogdHJ1ZSxcbiAgICBwbGF5YmFja1JhdGU6IHRydWUsXG4gICAgYXNwZWN0UmF0aW86IHRydWUsXG4gICAgZnVsbHNjcmVlbjogdHJ1ZSxcbiAgICBmdWxsc2NyZWVuV2ViOiB0cnVlLFxuICAgIHN1YnRpdGxlT2Zmc2V0OiB0cnVlLFxuICAgIG1pbmlQcm9ncmVzc0JhcjogdHJ1ZSxcbiAgICBtdXRleDogdHJ1ZSxcbiAgICBiYWNrZHJvcDogdHJ1ZSxcbiAgICBwbGF5c0lubGluZTogdHJ1ZSxcbiAgICBhdXRvUGxheWJhY2s6IHRydWUsXG4gICAgYWlycGxheTogdHJ1ZSxcbiAgICB0aGVtZTogJyMwMGExZDYnLFxuICAgIGxhbmc6ICd6aC1jbicsXG4gICAgbW9yZVZpZGVvQXR0cjoge1xuICAgICAgY3Jvc3NPcmlnaW46ICdhbm9ueW1vdXMnLFxuICAgIH0sXG4gICAgY29udHJvbHM6IFtcbiAgICAgIHtcbiAgICAgICAgcG9zaXRpb246ICdyaWdodCcsXG4gICAgICAgIGh0bWw6ICfnlLvkuK3nlLsnLFxuICAgICAgICBjbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGFydC52YWx1ZS5waXAgPSAhYXJ0LnZhbHVlLnBpcFxuICAgICAgICB9LFxuICAgICAgfSxcbi4uLlxuICAgIHBsdWdpbnM6IFtcbiAgICAgIGFydHBsYXllclBsdWdpbkRhbm11a3Uoe1xuICAgICAgICBjb250YWluZXI6ICcuYXJ0cGxheWVyLWFwcCcsXG4gICAgICAgIHNob3dJbnB1dDogdHJ1ZSxcbiAgICAgICAgLy8g6I635Y+W5by55bmV5pWw5o2uXG4gICAgICAgIGRhbm11a3U6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBnZXRCYXJyYWdlU2VydmljZShwcm9wcy52aWRlb0lkKVxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT09IDIwMCkge1xuICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS5tYXAoaXRlbSA9PiAoe1xuICAgICAgICAgICAgICAgIHRleHQ6IGl0ZW0udGV4dCxcbiAgICAgICAgICAgICAgICB0aW1lOiBpdGVtLnRpbWUsXG4gICAgICAgICAgICAgICAgY29sb3I6IGl0ZW0uY29sb3IgfHwgJyNGRkZGRkYnLFxuICAgICAgICAgICAgICAgIHR5cGU6IGl0ZW0udHlwZSB8fCAwLFxuICAgICAgICAgICAgICAgIGJvcmRlcjogZmFsc2UsXG4gICAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFtdXG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPluW8ueW5leWksei0pTonLCBlcnJvcilcbiAgICAgICAgICAgIEVsTWVzc2FnZS5lcnJvcign6I635Y+W5by55bmV5aSx6LSlJylcbiAgICAgICAgICAgIHJldHVybiBbXVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3BlZWQ6IDUsXG4gICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgIGZvbnRTaXplOiAyNSxcbiAgICAgICAgY29sb3I6ICcjRkZGRkZGJyxcbiAgICAgICAgbW9kZTogMCxcbiAgICAgICAgbWFyZ2luOiBbMTAsICcyNSUnXSxcbiAgICAgICAgYW50aU92ZXJsYXA6IHRydWUsXG4gICAgICAgIHVzZVdvcmtlcjogdHJ1ZSxcbiAgICAgICAgc3luY2hyb25vdXNQbGF5YmFjazogZmFsc2UsXG4gICAgICAgIG1heExlbmd0aDogMTAwLFxuICAgICAgICBtaW5XaWR0aDogMjAwLFxuICAgICAgICBtYXhXaWR0aDogNDAwLFxuICAgICAgICB0aGVtZTogJ2RhcmsnLFxuICAgICAgICAvLyDovpPlhaXmoYbojrflvpfnhKbngrnml7bmmoLlgZzop4bpopFcbiAgICAgICAgb25JbnB1dDogKCkgPT4ge1xuICAgICAgICAgIGlmIChhcnQudmFsdWUgJiYgIWFydC52YWx1ZS5wYXVzZWQpIHtcbiAgICAgICAgICAgIGFydC52YWx1ZS5wYXVzZSgpXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAvLyDlj5HpgIHlvLnluZXlkI7mgaLlpI3mkq3mlL5cbiAgICAgICAgb25TZW5kOiAoKSA9PiB7XG4gICAgICAgICAgaWYgKGFydC52YWx1ZSAmJiBhcnQudmFsdWUucGF1c2VkKSB7XG4gICAgICAgICAgICBhcnQudmFsdWUucGxheSgpXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAvLyDlj5HpgIHlvLnluZXliY3nmoTlpITnkIZcbiAgICAgICAgYmVmb3JlRW1pdDogYXN5bmMgKGRhbm11KSA9PiB7XG4gICAgICAgICAgY29uc3QgYmFycmFnZURhdGEgPSB7XG4gICAgICAgICAgICB2aWRlb0lkOiBwcm9wcy52aWRlb0lkLFxuICAgICAgICAgICAgdGV4dDogZGFubXUudGV4dCxcbiAgICAgICAgICAgIHRpbWU6IGFydC52YWx1ZS5jdXJyZW50VGltZSxcbiAgICAgICAgICAgIGNvbG9yOiBkYW5tdS5jb2xvcixcbiAgICAgICAgICAgIHR5cGU6IGRhbm11LnR5cGVcbiAgICAgICAgICB9XG4gICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBzZW5kQmFycmFnZVNlcnZpY2UoYmFycmFnZURhdGEpXG4gICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT09IDIwMCkge1xuICAgICAgICAgICAgRWxNZXNzYWdlLnN1Y2Nlc3MoJ+WPkemAgeW8ueW5leaIkOWKnycpXG4gICAgICAgICAgICAvLyDlj5HpgIHmiJDlip/lkI7nq4vljbPlsIbmlrDlvLnluZXmt7vliqDliLDmkq3mlL7lmahcbiAgICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICAgIEVsTWVzc2FnZS5lcnJvcihyZXNwb25zZS5tZXNzYWdlIHx8ICflj5HpgIHlvLnluZXlpLHotKUnKVxuICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIF1cbiAgfSlcblxuICAvLyDnm5HlkKzmkq3mlL7lmajkuovku7ZcbiAgYXJ0LnZhbHVlLm9uKCdyZWFkeScsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygn6KeG6aKR5pKt5pS+5Zmo5bey5bCx57uqJylcbiAgfSlcblxuICBhcnQudmFsdWUub24oJ3BsYXknLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ+inhumikeW8gOWni+aSreaUvicpXG4gIH0pXG5cbiAgYXJ0LnZhbHVlLm9uKCdwYXVzZScsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygn6KeG6aKR5pqC5YGcJylcbiAgfSlcblxuICAvLyDplJnor6/lpITnkIZcbiAgYXJ0LnZhbHVlLm9uKCdlcnJvcicsIChlcnJvcikgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+inhumikeaSreaUvumUmeivrzonLCBlcnJvcilcbiAgICBFbE1lc3NhZ2UuZXJyb3IoJ+inhumikeWKoOi9veWksei0pe+8jOivt+eojeWQjumHjeivlScpXG4gIH0pXG5cbiAgLy8g55uR5ZCs5YWo5bGP5LqL5Lu2XG4gIGFydC52YWx1ZS5vbignZnVsbHNjcmVlbicsIChzdGF0ZSkgPT4ge1xuICAgIGVtaXQoJ3RvZ2dsZS1jb2xsYXBzZScsIHN0YXRlKVxuICB9KVxuXG4gIC8vIOebkeWQrOe9kemhteWFqOWxj+S6i+S7tlxuICBhcnQudmFsdWUub24oJ2Z1bGxzY3JlZW5XZWInLCAoc3RhdGUpID0+IHtcbiAgICBpc1dlYkZ1bGxzY3JlZW4udmFsdWUgPSBzdGF0ZVxuICAgIC8vIOaOp+WItmJvZHnmu5rliqhcbiAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gc3RhdGUgPyAnaGlkZGVuJyA6ICcnXG4gICAgZW1pdCgndG9nZ2xlLWNvbGxhcHNlJywgc3RhdGUpXG4gIH0pXG5cbiAgLy8g55uR5ZCs5by55bmV55u45YWz5LqL5Lu2XG4gIGFydC52YWx1ZS5vbignYXJ0cGxheWVyUGx1Z2luRGFubXVrdTplbWl0JywgKGRhbm11KSA9PiB7XG4gICAgY29uc29sZS5sb2coJ+WPkemAgeW8ueW5lTonLCBkYW5tdSlcbiAgfSlcblxuICBhcnQudmFsdWUub24oJ2FydHBsYXllclBsdWdpbkRhbm11a3U6bG9hZGVkJywgKGRhbm11cykgPT4ge1xuICAgIGNvbnNvbGUubG9nKCflvLnluZXliqDovb3lrozmiJAsIOaAu+aVsDonLCBkYW5tdXM/Lmxlbmd0aCB8fCAwKVxuICB9KVxuXG4gIGFydC52YWx1ZS5vbignYXJ0cGxheWVyUGx1Z2luRGFubXVrdTplcnJvcicsIChlcnJvcikgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+W8ueW5lemUmeivrzonLCBlcnJvcilcbiAgICBFbE1lc3NhZ2UuZXJyb3IoJ+W8ueW5leezu+e7n+WHuueOsOmUmeivrycpXG4gIH0pXG59XG5cbi8vIOebkeWQrCBVUkwg5Y+Y5YyWXG53YXRjaCgoKSA9PiBwcm9wcy52aWRlb1VybCwgKG5ld1VybCwgb2xkVXJsKSA9PiB7XG4gIGlmIChuZXdVcmwgJiYgbmV3VXJsICE9PSBvbGRVcmwpIHtcbiAgICBpZiAoYXJ0LnZhbHVlKSB7XG4gICAgICAvLyDlpoLmnpzmkq3mlL7lmajlt7LlrZjlnKjvvIzmm7TmlrDop4bpopHmupBcbiAgICAgIGFydC52YWx1ZS51cmwgPSBuZXdVcmxcbiAgICAgIGFydC52YWx1ZS5wb3N0ZXIgPSBwcm9wcy5wb3N0ZXJcbiAgICAgIGFydC52YWx1ZS50aXRsZSA9IHByb3BzLnRpdGxlXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIOWmguaenOaSreaUvuWZqOS4jeWtmOWcqO+8jOWIneWni+WMluaSreaUvuWZqFxuICAgICAgaW5pdFBsYXllcigpXG4gICAgfVxuICB9XG59LCB7aW1tZWRpYXRlOiB0cnVlfSlcblxuLy8g57uE5Lu25oyC6L295pe25Yid5aeL5YyW5pKt5pS+5ZmoXG5vbk1vdW50ZWQoKCkgPT4ge1xuICAvLyDkvb/nlKggbmV4dFRpY2sg56Gu5L+dIERPTSDlt7Lmm7TmlrBcbiAgbmV4dFRpY2soKCkgPT4ge1xuICAgIGlmIChwcm9wcy52aWRlb1VybCkge1xuICAgICAgaW5pdFBsYXllcigpXG4gICAgfVxuICB9KVxufSlcblxuLy8g57uE5Lu25Y246L295pe26ZSA5q+B5pKt5pS+5ZmoXG5vblVubW91bnRlZCgoKSA9PiB7XG4gIGlmIChhcnQudmFsdWUgJiYgYXJ0LnZhbHVlLmRlc3Ryb3kpIHtcbiAgICBhcnQudmFsdWUuZGVzdHJveSgpXG4gICAgYXJ0LnZhbHVlID0gbnVsbFxuICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnJ1xuICB9XG59KVxuPC9zY3JpcHQ+XG5cbjxzdHlsZSBzY29wZWQ+XG4udmlkZW8tcGxheWVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBhc3BlY3QtcmF0aW86IDE2Lzk7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5hcnRwbGF5ZXItYXBwIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG59XG5cbjpkZWVwKC5hcnQtdmlkZW8tcGxheWVyKSB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICBmb250LWZhbWlseTogc3lzdGVtLXVpLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90byxcbiAgJ0hlbHZldGljYSBOZXVlJywgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIC0tdGhlbWU6ICMwMGExZDYgIWltcG9ydGFudDsgLyog6K6+572u5Li76aKY6Imy5Li66JOd6ImyICovXG59XG5cbjpkZWVwKC5hcnQtc3VidGl0bGUpIHtcbiAgYm90dG9tOiAxMHB4O1xuICBmb250LXNpemU6IDE2cHg7XG4gIHRleHQtc2hhZG93OiAwLjVweCAwLjVweCAwLjVweCByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbi8qIOiHquWumuS5ieS4u+mimOiJsiAqL1xuOmRlZXAoLmFydC12aWRlby1wbGF5ZXIgLmFydC1jb250cm9sLXByb2dyZXNzKSB7XG4gIC8qIOacquaSreaUvumDqOWIhuS9v+eUqOWNiumAj+aYjueBsOiJsiAqL1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG59XG5cbjpkZWVwKC5hcnQtdmlkZW8tcGxheWVyIC5hcnQtY29udHJvbC1wcm9ncmVzcy1pbm5lcikge1xuICAvKiDlt7Lmkq3mlL7pg6jliIbkvb/nlKjok53oibIgKi9cbiAgYmFja2dyb3VuZDogIzAwYTFkNjtcbn1cbi4uLlxuXG4vKiDnvZHpobXlhajlsY/ml7bnmoTmoLflvI8gKi9cbjpkZWVwKC5hcnQtdmlkZW8tcGxheWVyLmFydC1mdWxsc2NyZWVuLXdlYikge1xuICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudDtcbiAgei1pbmRleDogOTk5OTtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgYmFja2dyb3VuZDogIzAwMDtcbn1cblxuLyog572R6aG15YWo5bGP5pe255qE6L+U5Zue5oyJ6ZKu5L2N572u6LCD5pW0ICovXG46ZGVlcCguYXJ0LWZ1bGxzY3JlZW4td2ViKSAuYmFjay1idXR0b24ge1xuICB0b3A6IDI0cHg7XG4gIGxlZnQ6IDI0cHg7XG4gIHotaW5kZXg6IDEwMDAwO1xufVxuXG4vKiDnvZHpobXlhajlsY/ml7bnmoTmjqfliLbmoI/kvY3nva7osIPmlbQgKi9cbjpkZWVwKC5hcnQtZnVsbHNjcmVlbi13ZWIgLmFydC1jb250cm9scykge1xuICBwYWRkaW5nLWJvdHRvbTogMjRweDtcbn1cblxuLyog56e75Yqo56uv6YCC6YWNICovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICA6ZGVlcCguYXJ0LWZ1bGxzY3JlZW4td2ViKSAuYmFjay1idXR0b24ge1xuICAgIHRvcDogMTZweDtcbiAgICBsZWZ0OiAxNnB4O1xuICB9XG4gIFxuICA6ZGVlcCguYXJ0LWZ1bGxzY3JlZW4td2ViIC5hcnQtY29udHJvbHMpIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcbiAgfVxufVxuPC9zdHlsZT4uLi5cblBhdGg6IHNyYy9jb21wb25lbnRzL3ZpZGVvL1ZpZGVvRGV0YWlsLnZ1ZVxuPHRlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwidmlkZW8tZGV0YWlsXCI+XG4gICAgPGRpdiBjbGFzcz1cIm1haW4tY29udGVudFwiIDpjbGFzcz1cInsgJ2NvbGxhcHNlZCc6IGlzQ29sbGFwc2VkIHx8IGlzQXV0b0NvbGxhcHNlZCB9XCI+XG4gICAgICA8IS0tIOW3puS+p+inhumikeWMuuWfnyAtLT5cbiAgICAgIDxkaXYgY2xhc3M9XCJ2aWRlby1zZWN0aW9uXCI+XG4gICAgICAgIDwhLS0g6KeG6aKR5pKt5pS+5ZmoIC0tPlxuICAgICAgICA8VmlkZW9QbGF5ZXJcbiAgICAgICAgICAgIDp2aWRlby11cmw9XCJ2aWRlb0luZm8udmlkZW9VcmxcIlxuICAgICAgICAgICAgOnBvc3Rlcj1cInZpZGVvSW5mby5jb3ZlclwiXG4gICAgICAgICAgICA6dGl0bGU9XCJ2aWRlb0luZm8udGl0bGVcIlxuICAgICAgICAgICAgOmlzLWNvbGxhcHNlZD1cImlzQ29sbGFwc2VkIHx8IGlzQXV0b0NvbGxhcHNlZFwiXG4gICAgICAgICAgICA6dmlkZW8taWQ9XCJ2aWRlb0luZm8uaWRcIlxuICAgICAgICAgICAgQHRvZ2dsZS1jb2xsYXBzZT1cInRvZ2dsZUNvbGxhcHNlXCJcbiAgICAgICAgLz5cbi4uLlxuXG48c2NyaXB0IHNldHVwPlxuaW1wb3J0IHtjb21wdXRlZCwgb25Nb3VudGVkLCBvblVubW91bnRlZCwgcmVmLCB3YXRjaH0gZnJvbSAndnVlJ1xuaW1wb3J0IHt1c2VSb3V0ZSwgdXNlUm91dGVyfSBmcm9tICd2dWUtcm91dGVyJ1xuaW1wb3J0IHtnZXRWaWRlb0RldGFpbFNlcnZpY2V9IGZyb20gJ0AvYXBpL3ZpZGVvJyAvLyDlgYforr7kvaDkvJrliJvlu7rov5nkuKpBUEnmnI3liqFcbmltcG9ydCB7Q2hhdERvdFJvdW5kLCBDaGF0Um91bmQsIENsb3NlfSBmcm9tICdAZWxlbWVudC1wbHVzL2ljb25zLXZ1ZSdcbmltcG9ydCBWaWRlb1BsYXllciBmcm9tICdAL2NvbXBvbmVudHMvdmlkZW8vVmlkZW9QbGF5ZXIudnVlJ1xuaW1wb3J0IHtFbE1lc3NhZ2V9IGZyb20gXCJlbGVtZW50LXBsdXNcIjtcbmltcG9ydCB1c2VVc2VySW5mb1N0b3JlIGZyb20gJ0Avc3RvcmVzL3VzZXJJbmZvJ1xuaW1wb3J0IFVwbG9hZGVySWNvbiBmcm9tICdAL2NvbXBvbmVudHMvaWNvbnMvVXBsb2FkZXJJY29uLnZ1ZSdcbmltcG9ydCB7YWRkQ29tbWVudFNlcnZpY2UsIGdldENvbW1lbnRzU2VydmljZX0gZnJvbSBcIkAvYXBpL2NvbW1lbnRzXCI7XG5pbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXG5pbXBvcnQgcmVsYXRpdmVUaW1lIGZyb20gJ2RheWpzL3BsdWdpbi9yZWxhdGl2ZVRpbWUnXG5pbXBvcnQgJ2RheWpzL2xvY2FsZS96aC1jbidcbmltcG9ydCBFbW9qaVBpY2tlciBmcm9tICdAL2NvbXBvbmVudHMvRW1vamlQaWNrZXIudnVlJ1xuaW1wb3J0IHt1c2VUb2tlblN0b3JlfSBmcm9tICdAL3N0b3Jlcy90b2tlbidcbi4uLlxuUGF0aDogcGFja2FnZS5qc29uXG57XG4gIFwibmFtZVwiOiBcImJpbGliaWxpLWNsb25lXCIsXG4gIFwidmVyc2lvblwiOiBcIjEuMC4wXCIsXG4gIFwicHJpdmF0ZVwiOiB0cnVlLFxuICBcInNjcmlwdHNcIjoge1xuICAgIFwiZGV2XCI6IFwidml0ZVwiLFxuICAgIFwiYnVpbGRcIjogXCJ2aXRlIGJ1aWxkXCIsXG4gICAgXCJwcmV2aWV3XCI6IFwidml0ZSBwcmV2aWV3XCJcbiAgfSxcbiAgXCJkZXBlbmRlbmNpZXNcIjoge1xuICAgIFwiQGVsZW1lbnQtcGx1cy9pY29ucy12dWVcIjogXCJeMi4wLjBcIixcbiAgICBcImFydHBsYXllclwiOiBcIl41LjIuMVwiLFxuICAgIFwiYXJ0cGxheWVyLXBsdWdpbi1kYW5tdWt1XCI6IFwiXjMuNS4zMVwiLFxuICAgIFwiYXhpb3NcIjogXCJeMS43LjlcIixcbiAgICBcImJpbGliaWxpLWNsb25lXCI6IFwiZmlsZTpcIixcbiAgICBcImRheWpzXCI6IFwiXjEuMTEuMTNcIixcbiAgICBcImVsZW1lbnQtcGx1c1wiOiBcIl4yLjAuMFwiLFxuICAgIFwibWl0dFwiOiBcIl4zLjAuMVwiLFxuICAgIFwicGluaWFcIjogXCJeMi4zLjBcIixcbiAgICBcInBpbmlhLXBlcnNpc3RlZHN0YXRlLXBsdWdpblwiOiBcIl4wLjEuMFwiLFxuICAgIFwidnVlXCI6IFwiXjMuMy4wXCIsXG4gICAgXCJ2dWUtcm91dGVyXCI6IFwiXjQuMC4wXCJcbiAgfSxcbiAgXCJkZXZEZXBlbmRlbmNpZXNcIjoge1xuICAgIFwiQHZpdGVqcy9wbHVnaW4tdnVlXCI6IFwiXjQuMC4wXCIsXG4gICAgXCJwYXRoXCI6IFwiXjAuMTIuN1wiLFxuICAgIFwic2Fzc1wiOiBcIl4xLjgzLjBcIixcbiAgICBcInZpdGVcIjogXCJeNC4wLjBcIlxuICB9XG59XG4uLi5cblBhdGg6IHNyYy9hcGkvdmlkZW8uanNcbmltcG9ydCByZXF1ZXN0IGZyb20gXCJAL3V0aWxzL3JlcXVlc3RcIlxuXG4vL+iOt+WPluinhumikeWIl+ihqOaOpeWPo1xuZXhwb3J0IGNvbnN0IGdldFZpZGVvTGlzdFNlcnZpY2UgPSAocGFyYW1zKSA9PiB7XG4gICAgLy8g5aaC5p6c5Lyg5YWl5LqG5YiG57G75Y+C5pWw77yM5L2/55SocXVlcnnmlrnlvI/kvKDpgJJcbiAgICBpZiAocGFyYW1zICYmIHBhcmFtcy5jYXRlZ29yeUlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHJlcXVlc3QuZ2V0KGAvdmlkZW8/Y2F0ZWdvcnlJZD0ke3BhcmFtcy5jYXRlZ29yeUlkfWApXG4gICAgfVxuICAgIC8vIOm7mOiupOiOt+WPluaJgOacieinhumikVxuICAgIHJldHVybiByZXF1ZXN0LmdldCgnL3ZpZGVvJylcbn1cbi8v6I635Y+W6KeG6aKR6K+m5oOF5o6l5Y+jXG5leHBvcnQgY29uc3QgZ2V0VmlkZW9EZXRhaWxTZXJ2aWNlID0gKHZpZGVvSWQpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoJy92aWRlby92aWRlb0luZm8/aWQ9Jyt2aWRlb0lkKVxufVxuLi4uXG5QYXRoOiBzcmMvY29tcG9uZW50cy92aWRlby9EYW5tYWt1TGlzdC52dWVcbjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cImRhbm1ha3UtbGlzdC1jb250YWluZXJcIj5cbiAgICA8ZGl2IGNsYXNzPVwiZGFubWFrdS1oZWFkZXJcIiBAY2xpY2s9XCJ0b2dnbGVFeHBhbmRcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXItbGVmdFwiPlxuICAgICAgICA8ZWwtaWNvbiBjbGFzcz1cImxpc3QtaWNvblwiPjxDaGF0RG90Um91bmQgLz48L2VsLWljb24+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwidGl0bGVcIj7lvLnluZXliJfooag8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxlbC1pY29uIGNsYXNzPVwiZXhwYW5kLWljb25cIiA6Y2xhc3M9XCJ7ICdpcy1leHBhbmRlZCc6IGlzRXhwYW5kZWQgfVwiPlxuICAgICAgICA8QXJyb3dEb3duIC8+XG4gICAgICA8L2VsLWljb24+XG4gICAgPC9kaXY+XG4gICAgXG4gICAgPGRpdiBjbGFzcz1cImRhbm1ha3UtY29udGVudFwiIHYtc2hvdz1cImlzRXhwYW5kZWRcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJkYW5tYWt1LWl0ZW1zXCIgdi1sb2FkaW5nPVwibG9hZGluZ1wiPlxuICAgICAgICA8dGVtcGxhdGUgdi1pZj1cImRhbm1ha3VMaXN0Lmxlbmd0aFwiPlxuICAgICAgICAgIDxkaXYgdi1mb3I9XCJpdGVtIGluIGRhbm1ha3VMaXN0XCIgXG4gICAgICAgICAgICAgICA6a2V5PVwiaXRlbS5pZFwiIFxuICAgICAgICAgICAgICAgY2xhc3M9XCJkYW5tYWt1LWl0ZW1cIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkYW5tYWt1LWluZm9cIj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0aW1lXCI+e3sgZm9ybWF0VGltZShpdGVtLnRpbWUgfHwgMCkgfX08L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiY29udGVudFwiIDpzdHlsZT1cInsgY29sb3I6IGlzV2hpdGVDb2xvcihpdGVtLmNvbG9yKSA/ICcjMTgxOTFjJyA6IGl0ZW0uY29sb3IgfVwiPlxuICAgICAgICAgICAgICAgIHt7IGl0ZW0udGV4dCB9fVxuICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC90ZW1wbGF0ZT5cbiAgICAgICAgPGRpdiB2LWVsc2UgY2xhc3M9XCJlbXB0eS1zdGF0ZVwiPlxuICAgICAgICAgIDxlbC1pY29uIGNsYXNzPVwiZW1wdHktaWNvblwiPjxDaGF0TGluZVNxdWFyZSAvPjwvZWwtaWNvbj5cbiAgICAgICAgICA8c3Bhbj7mmoLml6DlvLnluZU8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiwgb25Nb3VudGVkLCB3YXRjaCB9IGZyb20gJ3Z1ZSdcbmltcG9ydCB7IEFycm93RG93biwgQ2hhdERvdFJvdW5kLCBDaGF0TGluZVNxdWFyZSB9IGZyb20gJ0BlbGVtZW50LXBsdXMvaWNvbnMtdnVlJ1xuaW1wb3J0IHsgZ2V0QmFycmFnZVNlcnZpY2UgfSBmcm9tICdAL2FwaS9iYXJyYWdlJ1xuaW1wb3J0IHsgRWxNZXNzYWdlIH0gZnJvbSAnZWxlbWVudC1wbHVzJ1xuXG5jb25zdCBwcm9wcyA9IGRlZmluZVByb3BzKHtcbiAgdmlkZW9JZDoge1xuICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfVxufSlcblxuY29uc3QgaXNFeHBhbmRlZCA9IHJlZihmYWxzZSlcbmNvbnN0IGxvYWRpbmcgPSByZWYoZmFsc2UpXG5jb25zdCBkYW5tYWt1TGlzdCA9IHJlZihbXSlcbmNvbnN0IGlzRGF0YUxvYWRlZCA9IHJlZihmYWxzZSlcblxuY29uc3QgdG9nZ2xlRXhwYW5kID0gKCkgPT4ge1xuICBpc0V4cGFuZGVkLnZhbHVlID0gIWlzRXhwYW5kZWQudmFsdWVcbiAgaWYgKGlzRXhwYW5kZWQudmFsdWUgJiYgIWlzRGF0YUxvYWRlZC52YWx1ZSkge1xuICAgIGxvYWREYW5tYWt1TGlzdCgpXG4gIH1cbn1cblxuY29uc3QgbG9hZERhbm1ha3VMaXN0ID0gYXN5bmMgKCkgPT4ge1xuICBsb2FkaW5nLnZhbHVlID0gdHJ1ZVxuICB0cnkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGdldEJhcnJhZ2VTZXJ2aWNlKHByb3BzLnZpZGVvSWQpXG4gICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHtcbiAgICAgIGRhbm1ha3VMaXN0LnZhbHVlID0gcmVzLmRhdGEgfHwgW11cbiAgICAgIGlzRGF0YUxvYWRlZC52YWx1ZSA9IHRydWVcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcign6I635Y+W5by55bmV5YiX6KGo5aSx6LSlOicsIGVycm9yKVxuICAgIEVsTWVzc2FnZS5lcnJvcign6I635Y+W5by55bmV5YiX6KGo5aSx6LSlJylcbiAgfSBmaW5hbGx5IHtcbiAgICBsb2FkaW5nLnZhbHVlID0gZmFsc2VcbiAgfVxufVxuXG5jb25zdCBmb3JtYXRUaW1lID0gKHNlY29uZHMpID0+IHtcbiAgY29uc3QgdGltZSA9IE51bWJlcihzZWNvbmRzKSB8fCAwXG4gIGNvbnN0IG1pbnV0ZXMgPSBNYXRoLmZsb29yKHRpbWUgLyA2MClcbiAgY29uc3QgcmVtYWluaW5nU2Vjb25kcyA9IE1hdGguZmxvb3IodGltZSAlIDYwKVxuICByZXR1cm4gYCR7bWludXRlcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9OiR7cmVtYWluaW5nU2Vjb25kcy50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyl9YFxufVxuXG4vLyDliKTmlq3mmK/lkKbkuLrnmb3oibJcbmNvbnN0IGlzV2hpdGVDb2xvciA9IChjb2xvcikgPT4ge1xuICBpZiAoIWNvbG9yKSByZXR1cm4gZmFsc2VcbiAgXG4gIC8vIOi9rOaNouS4uuWwj+WGmeS7pee7n+S4gOavlOi+g1xuICBjb2xvciA9IGNvbG9yLnRvTG93ZXJDYXNlKClcbiAgXG4gIC8vIOajgOafpeWQhOenjeeZveiJsueahOihqOekuuaWueW8j1xuICByZXR1cm4gY29sb3IgPT09ICcjZmZmJyB8fCBcbiAgICAgICAgIGNvbG9yID09PSAnI2ZmZmZmZicgfHwgXG4gICAgICAgICBjb2xvciA9PT0gJ3JnYigyNTUsMjU1LDI1NSknIHx8IFxuICAgICAgICAgY29sb3IgPT09ICdyZ2IoMjU1LCAyNTUsIDI1NSknIHx8IFxuICAgICAgICAgY29sb3IgPT09ICd3aGl0ZSdcbn1cblxub25Nb3VudGVkKCgpID0+IHtcbiAgLy8g5Yid5aeL5Yqg6L295by55bmV5YiX6KGoXG4gIGxvYWREYW5tYWt1TGlzdCgpXG59KVxuXG4vLyDnm5HlkKzop4bpopFJROWPmOWMllxud2F0Y2goKCkgPT4gcHJvcHMudmlkZW9JZCwgKG5ld0lkKSA9PiB7XG4gIGlmIChuZXdJZCkge1xuICAgIGlzRGF0YUxvYWRlZC52YWx1ZSA9IGZhbHNlXG4gICAgZGFubWFrdUxpc3QudmFsdWUgPSBbXVxuICAgIGlmIChpc0V4cGFuZGVkLnZhbHVlKSB7XG4gICAgICBsb2FkRGFubWFrdUxpc3QoKVxuICAgIH1cbiAgfVxufSlcblxuLy8g5re75Yqg5pWw5o2u5Yqg6L2954q25oCB55uR5ZCsXG53YXRjaCgoKSA9PiBkYW5tYWt1TGlzdC52YWx1ZSwgKG5ld0xpc3QpID0+IHtcbiAgY29uc29sZS5sb2coJ+W8ueW5leWIl+ihqOaVsOaNrjonLCBuZXdMaXN0KVxufSwgeyBpbW1lZGlhdGU6IHRydWUgfSlcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIiBzY29wZWQ+XG4uZGFubWFrdS1saXN0LWNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDE2cHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm94LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4wNik7XG59XG5cbi5kYW5tYWt1LWhlYWRlciB7XG4gIHBhZGRpbmc6IDEycHggMTZweDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjFmMmYzO1xuICBcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogI2Y1ZjdmYTtcbiAgfVxuICBcbiAgLmhlYWRlci1sZWZ0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiA4cHg7XG4gICAgXG4gICAgLmxpc3QtaWNvbiB7XG4gICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICBjb2xvcjogIzAwYWVlYztcbiAgICB9XG4gIH1cbiAgXG4gIC50aXRsZSB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgY29sb3I6ICMxODE5MWM7XG4gIH1cbiAgXG4gIC5leHBhbmQtaWNvbiB7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XG4gICAgY29sb3I6ICM5NDk5YTA7XG4gICAgXG4gICAgJi5pcy1leHBhbmRlZCB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgIH1cbiAgfVxufVxuXG4uZGFubWFrdS1jb250ZW50IHtcbiAgcGFkZGluZzogMTJweDtcbiAgbWF4LWhlaWdodDogMzAwcHg7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYmZiZmI7XG4gIFxuICAmOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgd2lkdGg6IDZweDtcbiAgfVxuICBcbiAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlM2U1ZTc7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIFxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2M5Y2NkMDtcbiAgICB9XG4gIH1cbn1cblxuLmRhbm1ha3UtaXRlbXMge1xuICBtaW4taGVpZ2h0OiAxMDBweDtcbn1cblxuLmRhbm1ha3UtaXRlbSB7XG4gIHBhZGRpbmc6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgbWFyZ2luLWJvdHRvbTogMXB4O1xuICBcbiAgJjpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4gIFxuICAuZGFubWFrdS1pbmZvIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiAxMnB4O1xuICAgIFxuICAgIC50aW1lIHtcbiAgICAgIGNvbG9yOiAjOTQ5OWEwO1xuICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgbWluLXdpZHRoOiA0NXB4O1xuICAgIH1cbiAgICBcbiAgICAuY29udGVudCB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG4gICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgIFxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDAuODtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY3Zjg7XG4gIH1cbn1cblxuLmRhbm1ha3UtaXRlbTpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuICBcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y2ZjdmODtcbiAgfVxufVxuXG4uZW1wdHktc3RhdGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZzogMzJweCAwO1xuICBjb2xvcjogIzk0OTlhMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgXG4gIC5lbXB0eS1pY29uIHtcbiAgICBmb250LXNpemU6IDMycHg7XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICB9XG4gIFxuICBzcGFuIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gIH1cbn1cbjwvc3R5bGU+IC4uLlxuUGF0aDogc3JjL2FwaS9iYXJyYWdlLmpzXG5pbXBvcnQgcmVxdWVzdCBmcm9tIFwiQC91dGlscy9yZXF1ZXN0XCJcblxuLy/lj5HpgIHlvLnluZVcbmV4cG9ydCBjb25zdCBzZW5kQmFycmFnZVNlcnZpY2UgPSAoZGF0YSkgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5wb3N0KCcvdXNlci9iYXJyYWdlL3NlbmQnLGRhdGEpXG59XG4vL+iOt+WPluW8ueW5lVxuZXhwb3J0IGNvbnN0IGdldEJhcnJhZ2VTZXJ2aWNlID0gKHZpZGVvSWQpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QuZ2V0KCcvdmlkZW8vYmFycmFnZT92aWRlb0lkPScrdmlkZW9JZClcbn0uLi5cblBhdGg6IHNyYy9hcGkvYmFuZ3VtaS9iYW5ndW1pLmpzXG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5cbi8v54Ot6Zeo55Wq5YmnXG5leHBvcnQgY29uc3QgZ2V0SG90U2VydmljZSA9ICgpID0+IHtcbiAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL2FwaS5qaWthbi5tb2UvdjQvdG9wL2FuaW1lP2xpbWl0PTI1Jylcbn1cbi8v55Wq5Ymn5pe26Ze06KGoXG5leHBvcnQgY29uc3QgZ2V0QmFuZ3VtaVNlcnZpY2UgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkuYmdtLnR2L2NhbGVuZGFyJylcbn0uLi5cblBhdGg6IHNyYy9hcGkvYW5pbWUvYW5pbWUuanNcbmltcG9ydCByZXF1ZXN0IGZyb20gXCJAL3V0aWxzL3JlcXVlc3RcIlxuXG4vLyDojrflj5bova7mkq3lm77mlbDmja5cbmV4cG9ydCBjb25zdCBnZXRCYW5uZXJTZXJ2aWNlID0gKCkgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5nZXQoJy9DYXJvdXNlbCcpXG59XG5cbi8vIOiOt+WPlueVquWJp+WIl+ihqFxuZXhwb3J0IGNvbnN0IGdldEFuaW1lTGlzdFNlcnZpY2UgPSAocGFyYW1zKSA9PiB7XG4gIHJldHVybiByZXF1ZXN0LmdldCgnL2FuaW1lJywgeyBwYXJhbXMgfSlcbn1cblxuLy8g5paw5aKe55Wq5YmnXG5leHBvcnQgY29uc3QgYWRkQW5pbWVTZXJ2aWNlID0gKGFuaW1lRGF0YSkgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5wb3N0KCcvYW5pbWUnLCBhbmltZURhdGEpXG59XG5cbi8vIOabtOaWsOeVquWJpyAgLlxuZXhwb3J0IGNvbnN0IHVwZGF0ZUFuaW1lU2VydmljZSA9IChhbmltZUlkLGFuaW1lRGF0YSkgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5wdXQoYC9hbmltZS8ke2FuaW1lSWR9YCwgYW5pbWVEYXRhKVxufVxuXG4vLyDliKDpmaTnlarliadcbmV4cG9ydCBjb25zdCBkZWxldGVBbmltZVNlcnZpY2UgPSAoaWQpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QuZGVsZXRlKGAvYW5pbWUvJHtpZH1gKVxufVxuXG4vLyDmt7vliqDliafpm4ZcbmV4cG9ydCBjb25zdCBhZGRFcGlzb2RlU2VydmljZSA9IChhbmltZUlkLCBlcGlzb2RlRGF0YSkgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5wb3N0KGAvYW5pbWUvJHthbmltZUlkfS9lcGlzb2Rlc2AsIGVwaXNvZGVEYXRhKVxufVxuLi4uXG5QYXRoOiBzcmMvYXBpL3VzZXJWaWRlby5qc1xuLy/lr7zlhaVyZXF1ZXN0Lmpz6K+35rGC5bel5YW3XG5pbXBvcnQgcmVxdWVzdCBmcm9tIFwiQC91dGlscy9yZXF1ZXN0XCI7XG5cbi8v5Y+R5biD6KeG6aKR5o6l5Y+jXG5leHBvcnQgY29uc3QgcHVibGlzaFZpZGVvU2VydmljZSA9ICh2aWRlb0RhdGEpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5wb3N0KCcvdXNlci92aWRlbycsIHZpZGVvRGF0YSlcbn1cbi8v6I635Y+W55So5oi36KeG6aKR5o6l5Y+jXG5leHBvcnQgY29uc3QgZ2V0VXNlclZpZGVvU2VydmljZSA9IChwYXJhbXMpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoJy91c2VyL3ZpZGVvJywge3BhcmFtczogcGFyYW1zfSlcbn1cbi8v57yW6L6R6KeG6aKR5o6l5Y+jXG5leHBvcnQgY29uc3QgZWRpdFZpZGVvU2VydmljZSA9ICh2aWRlb0RhdGEpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5wdXQoJy91c2VyL3ZpZGVvJywgdmlkZW9EYXRhKVxufVxuLy/liKDpmaTop4bpopHkv6Hmga/mjqXlj6NcbmV4cG9ydCBjb25zdCBkZWxldGVWaWRlb1NlcnZpY2UgPSAodmlkZW9JZCkgPT4ge1xuICAgIHJldHVybiByZXF1ZXN0LmRlbGV0ZSgnL3VzZXIvdmlkZW8/aWQ9JyArIHZpZGVvSWQpXG59Li4uXG5QYXRoOiBzcmMvYXBpL3VzZXIvdXNlcnZpZGVvLmpzXG5pbXBvcnQgcmVxdWVzdCBmcm9tIFwiQC91dGlscy9yZXF1ZXN0XCI7XG5cbi8v6I635Y+W6KeG6aKR54K56LWe44CB5pS26JeP44CB5oqV5biB54q25oCBXG5leHBvcnQgY29uc3QgZ2V0VmlkZW9MaWtlU2VydmljZSA9ICh2aWRlb0lkLGFjdGlvbikgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5nZXQoYC91c2VyL3ZpZGVvLyR7dmlkZW9JZH0vZG9BY3Rpb24/YWN0aW9uPSR7YWN0aW9ufWApO1xufTtcblxuLy/ngrnotZ7jgIHmlLbol4/jgIHmipXluIFcbmV4cG9ydCBjb25zdCB1c2VyQWN0aW9uU2VydmljZSA9ICh2aWRlb0lkLCBhY3Rpb24pID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QucHV0KGAvdXNlci92aWRlby8ke3ZpZGVvSWR9L2RvQWN0aW9uP2FjdGlvbj0ke2FjdGlvbn1gKTtcbn07XG5cbi8v55So5oi35pS26JeP5YiX6KGoXG5leHBvcnQgY29uc3QgZ2V0VXNlckNvbGxlY3Rpb25TZXJ2aWNlID0gKHVzZXJJZCkgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5nZXQoYC92aWRlby9jb2xsZWN0TGlzdD91c2VySWQ9JHt1c2VySWR9YCk7XG59Oy4uLlxuUGF0aDogc3JjL2FwaS9jaGF0LmpzXG5pbXBvcnQgcmVxdWVzdCBmcm9tIFwiQC91dGlscy9yZXF1ZXN0XCI7XG5cbi8v6I635Y+W56eB5L+h5a+55YOPXG5leHBvcnQgY29uc3QgZ2V0VXNlckNoYXRTZXJ2aWNlID0gKHVzZXJuYW1lKSA9PiB7XG4gIHJldHVybiByZXF1ZXN0LmdldChcIi91c2VyL2NoYXQ/dXNlcm5hbWU9XCIrdXNlcm5hbWUpO1xufTtcblxuLy8g6I635Y+W6IGK5aSp5Y6G5Y+y6K6w5b2VXG5leHBvcnQgY29uc3QgZ2V0Q2hhdEhpc3RvcnlTZXJ2aWNlID0gKHVzZXIxLCB1c2VyMikgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5nZXQoYC91c2VyL2hpc3Rvcnk/dXNlcjE9JHt1c2VyMX0mdXNlcjI9JHt1c2VyMn1gKTtcbn07XG5cbi8vIOiOt+WPluaJgOacieacquivu+a2iOaBr+aVsOmHj1xuZXhwb3J0IGNvbnN0IGdldFVucmVhZENvdW50U2VydmljZSA9ICh1c2VybmFtZSkgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5nZXQoYC91c2VyL3VucmVhZD91c2VybmFtZT0ke3VzZXJuYW1lfWApO1xufTtcblxuLy8g5qCH6K6w5raI5oGv5Li65bey6K+7XG5leHBvcnQgY29uc3QgbWFya0FzUmVhZFNlcnZpY2UgPSAoZnJvbVVzZXIsIHRvVXNlcikgPT4ge1xuICByZXR1cm4gcmVxdWVzdC5wb3N0KGAvdXNlci9tYXJrLXJlYWQ/ZnJvbVVzZXI9JHtmcm9tVXNlcn0mdG9Vc2VyPSR7dG9Vc2VyfWApO1xufTtcblxuLy8g6I635Y+W55So5oi35Zyo57q/54q25oCBXG5leHBvcnQgY29uc3QgZ2V0T25saW5lU3RhdHVzU2VydmljZSA9ICh1c2VybmFtZXMpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3QuZ2V0KCcvdXNlci9vbmxpbmUtc3RhdHVzJywge1xuICAgIHBhcmFtczoge1xuICAgICAgdXNlcm5hbWVzOiB1c2VybmFtZXMuam9pbignLCcpXG4gICAgfVxuICB9KTtcbn07Li4uXG5QYXRoOiBzcmMvYXBpL3ZpZG9lbGlrZS5qc1xuaW1wb3J0IHJlcXVlc3QgZnJvbSBcIkAvdXRpbHMvcmVxdWVzdFwiO1xuXG4vL+eUqOaIt+eCuei1nuWIl+ihqFxuZXhwb3J0IGNvbnN0IGdldFVzZXJMaWtlU2VydmljZSA9IChpZCkgPT4ge1xuICAgIHJldHVybiByZXF1ZXN0LmdldCgnL3ZpZGVvL2xpa2U/aWQ9JyArIGlkKVxufS4uLlxuUGF0aDogc3JjL2FwaS9Bbm5vdW5jZW1lbnQuanNcbmltcG9ydCByZXF1ZXN0IGZyb20gXCJAL3V0aWxzL3JlcXVlc3RcIjtcblxuLyoqXG4gKiDlj5HluIPlhazlkYpcbiAqL1xuZXhwb3J0IGNvbnN0IHB1Ymxpc2hBbm5vdW5jZW1lbnRTZXJ2aWNlID0gKGRhdGEpID0+e1xuICAgIHJldHVybiByZXF1ZXN0LnBvc3QoXCIvYW5ub3VuY2VtZW50XCIsZGF0YSk7XG59XG5cbi8qKlxuICog6I635Y+W5YWs5ZGK5YiX6KGoXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRBbm5vdW5jZW1lbnRMaXN0U2VydmljZSA9ICgpID0+e1xuICAgIHJldHVybiByZXF1ZXN0LmdldChcIi9hbm5vdW5jZW1lbnRcIik7XG59XG5cbi8qKlxuICog5Yig6Zmk5YWs5ZGKXG4gKi9cbmV4cG9ydCBjb25zdCBkZWxldGVBbm5vdW5jZW1lbnRTZXJ2aWNlID0gKGFubm91bmNlbWVudElkKSA9PntcbiAgICByZXR1cm4gcmVxdWVzdC5kZWxldGUoYC9hbm5vdW5jZW1lbnQ/YW5ub3VuY2VtZW50SWQ9YCArIGFubm91bmNlbWVudElkKTtcbn1cbi4uLlxuUGF0aDogc3JjL2FwaS9jb21tZW50cy5qc1xuaW1wb3J0IHJlcXVlc3QgZnJvbSBcIkAvdXRpbHMvcmVxdWVzdFwiXG5cbi8vIOa3u+WKoOivhOiuuuaOpeWPo1xuZXhwb3J0IGNvbnN0IGFkZENvbW1lbnRTZXJ2aWNlID0gKGlkLCBjb250ZW50KSA9PiB7XG4gIHJldHVybiByZXF1ZXN0LnBvc3QoJy9jb21tZW50cy9wdWJsaXNoJywge1xuICAgIGlkLCAgLy8g6KeG6aKRaWRcbiAgICBjb250ZW50ICAgLy8g6K+E6K665YaF5a65XG4gIH0pXG59XG4vLyDojrflj5bor4TorrrliJfooajmjqXlj6NcbmV4cG9ydCBjb25zdCBnZXRDb21tZW50c1NlcnZpY2UgPSAoaWQpID0+IHtcbiAgICByZXR1cm4gcmVxdWVzdC5nZXQoJy9jb21tZW50cz9pZD0nK2lkIClcbn0uLi5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sImI3OTMwMDBlLTdlMWMtNDI4My1hNDMwLTg4ZmQ2NGFhMjc5ZDt0b29sdV8wMVAxb1d5QXprOGRzZzVrTlN6bUV0cngiOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiSGVyZSdzIHRoZSByZXN1bHQgb2YgcnVubmluZyBgY2F0IC1uYCBvbiBzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWU6XG4gICAgNTBcdC8vIOm8oOagh+enu+WKqOWkhOeQhlxuICAgIDUxXHRjb25zdCBoYW5kbGVNb3VzZU1vdmUgPSAoKSA9PiB7XG4gICAgNTJcdCAgaXNDb250cm9sVmlzaWJsZS52YWx1ZSA9IHRydWVcbiAgICA1M1x0fVxuICAgIDU0XHRcbiAgICA1NVx0Ly8g6byg5qCH56a75byA5aSE55CGXG4gICAgNTZcdGNvbnN0IGhhbmRsZU1vdXNlTGVhdmUgPSAoKSA9PiB7XG4gICAgNTdcdCAgaXNDb250cm9sVmlzaWJsZS52YWx1ZSA9IGZhbHNlXG4gICAgNThcdH1cbiAgICA1OVx0XG4gICAgNjBcdC8vIOa3u+WKoOWvuee9kemhteWFqOWxj+eKtuaAgeeahOeuoeeQhlxuICAgIDYxXHRjb25zdCBpc1dlYkZ1bGxzY3JlZW4gPSByZWYoZmFsc2UpXG4gICAgNjJcdFxuICAgIDYzXHQvLyDliJ3lp4vljJbmkq3mlL7lmahcbiAgICA2NFx0Y29uc3QgaW5pdFBsYXllciA9ICgpID0+IHtcbiAgICA2NVx0ICBpZiAoYXJ0LnZhbHVlKSByZXR1cm5cbiAgICA2Nlx0XG4gICAgNjdcdCAgLy8g5qOA5p+l6KeG6aKRVVJM5piv5ZCm5pyJ5pWIXG4gICAgNjhcdCAgaWYgKCFwcm9wcy52aWRlb1VybCB8fCAhcGxheWVyQ29udGFpbmVyLnZhbHVlKSB7XG4gICAgNjlcdCAgICBjb25zb2xlLmVycm9yKCfop4bpopFVUkzml6DmlYjmiJblrrnlmajmnKrlsLHnu6onKVxuICAgIDcwXHQgICAgcmV0dXJuXG4gICAgNzFcdCAgfVxuICAgIDcyXHRcbiAgICA3M1x0ICAvLyDnoa7kv53lrrnlmajlhoXmnIkgYXJ0cGxheWVyLWFwcCDlhYPntKBcbiAgICA3NFx0ICBjb25zdCBjb250YWluZXIgPSBwbGF5ZXJDb250YWluZXIudmFsdWUucXVlcnlTZWxlY3RvcignLmFydHBsYXllci1hcHAnKVxuICAgIDc1XHQgIGlmICghY29udGFpbmVyKSB7XG4gICAgNzZcdCAgICBjb25zb2xlLmVycm9yKCfmib7kuI3liLDmkq3mlL7lmajlrrnlmajlhYPntKAnKVxuICAgIDc3XHQgICAgcmV0dXJuXG4gICAgNzhcdCAgfVxuICAgIDc5XHRcbiAgICA4MFx0ICBhcnQudmFsdWUgPSBuZXcgQXJ0cGxheWVyKHtcbiAgICA4MVx0ICAgIGNvbnRhaW5lcjogY29udGFpbmVyLFxuICAgIDgyXHQgICAgdXJsOiBwcm9wcy52aWRlb1VybCxcbiAgICA4M1x0ICAgIHBvc3RlcjogcHJvcHMucG9zdGVyLFxuICAgIDg0XHQgICAgdGl0bGU6IHByb3BzLnRpdGxlLFxuICAgIDg1XHQgICAgdm9sdW1lOiAwLjUsXG4gICAgODZcdCAgICBpc0xpdmU6IGZhbHNlLFxuICAgIDg3XHQgICAgbXV0ZWQ6IGZhbHNlLFxuICAgIDg4XHQgICAgYXV0b3BsYXk6IGZhbHNlLFxuICAgIDg5XHQgICAgcGlwOiB0cnVlLFxuICAgIDkwXHQgICAgYXV0b1NpemU6IHRydWUsXG4gICAgOTFcdCAgICBhdXRvTWluaTogdHJ1ZSxcbiAgICA5Mlx0ICAgIHNjcmVlbnNob3Q6IHRydWUsXG4gICAgOTNcdCAgICBzZXR0aW5nOiB0cnVlLFxuICAgIDk0XHQgICAgbG9vcDogZmFsc2UsXG4gICAgOTVcdCAgICBmbGlwOiB0cnVlLFxuICAgIDk2XHQgICAgcm90YXRlOiB0cnVlLFxuICAgIDk3XHQgICAgcGxheWJhY2tSYXRlOiB0cnVlLFxuICAgIDk4XHQgICAgYXNwZWN0UmF0aW86IHRydWUsXG4gICAgOTlcdCAgICBmdWxsc2NyZWVuOiB0cnVlLFxuICAgMTAwXHQgICAgZnVsbHNjcmVlbldlYjogdHJ1ZSxcbiAgIDEwMVx0ICAgIHN1YnRpdGxlT2Zmc2V0OiB0cnVlLFxuICAgMTAyXHQgICAgbWluaVByb2dyZXNzQmFyOiB0cnVlLFxuICAgMTAzXHQgICAgbXV0ZXg6IHRydWUsXG4gICAxMDRcdCAgICBiYWNrZHJvcDogdHJ1ZSxcbiAgIDEwNVx0ICAgIHBsYXlzSW5saW5lOiB0cnVlLFxuICAgMTA2XHQgICAgYXV0b1BsYXliYWNrOiB0cnVlLFxuICAgMTA3XHQgICAgYWlycGxheTogdHJ1ZSxcbiAgIDEwOFx0ICAgIHRoZW1lOiAnIzAwYTFkNicsXG4gICAxMDlcdCAgICBsYW5nOiAnemgtY24nLFxuICAgMTEwXHQgICAgbW9yZVZpZGVvQXR0cjoge1xuICAgMTExXHQgICAgICBjcm9zc09yaWdpbjogJ2Fub255bW91cycsXG4gICAxMTJcdCAgICB9LFxuICAgMTEzXHQgICAgY29udHJvbHM6IFtcbiAgIDExNFx0ICAgICAge1xuICAgMTE1XHQgICAgICAgIHBvc2l0aW9uOiAncmlnaHQnLFxuICAgMTE2XHQgICAgICAgIGh0bWw6ICfnlLvkuK3nlLsnLFxuICAgMTE3XHQgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAxMThcdCAgICAgICAgICBhcnQudmFsdWUucGlwID0gIWFydC52YWx1ZS5waXBcbiAgIDExOVx0ICAgICAgICB9LFxuICAgMTIwXHQgICAgICB9LFxuVG90YWwgbGluZXMgaW4gZmlsZTogNTcwXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCIyMjZjMDQ1Ni1hNzk4LTQ2MzYtYjczNC05OTJkZTk1ZWY0MGM7dG9vbHVfMDFTUVh5djF0NGl1alhjRWVuNzJMRDJDIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL2NvbXBvbmVudHMvdmlkZW8vVmlkZW9QbGF5ZXIudnVlOlxuICAgMTIwXHQgICAgICB9LFxuICAgMTIxXHQgICAgICB7XG4gICAxMjJcdCAgICAgICAgcG9zaXRpb246ICdyaWdodCcsXG4gICAxMjNcdCAgICAgICAgaHRtbDogYDxkaXYgY2xhc3M9XCJ3aWRlLXNjcmVlbi1idG5cIiB0aXRsZT1cIuWuveWxj+aooeW8j1wiPlxuICAgMTI0XHQgICAgICAgICAgPHN2ZyBjbGFzcz1cIndpZGUtc2NyZWVuLWljb25cIiB2aWV3Qm94PVwiMCAwIDEwMjQgMTAyNFwiIHZlcnNpb249XCIxLjFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9XCIyMDBcIiBoZWlnaHQ9XCIyMDBcIj5cbiAgIDEyNVx0ICAgICAgICAgICAgPHBhdGggZD1cIk04MjQuNDQ4IDE5OS41NTJIMTk5LjU1MmMtNDkuMzAxMzMzMzMgMC04OS4yNjkzMzMzMyAzOS45NjgtODkuMjY5MzMzMzMgODkuMjY5MzMzMzN2NDQ2LjM1NzMzMzM0YzAgNDkuMzAxMzMzMzMgMzkuOTY4IDg5LjI2OTMzMzMzIDg5LjI2OTMzMzMzIDg5LjI2OTMzMzMzaDYyNC44OTZjNDkuMzAxMzMzMzMgMCA4OS4yNjkzMzMzMy0zOS45NjggODkuMjY5MzMzMzMtODkuMjY5MzMzMzNWMjg4LjgyMTMzMzMzYzAtNDkuMzAxMzMzMzMtMzkuOTU3MzMzMzMtODkuMjY5MzMzMzMtODkuMjY5MzMzMzMtODkuMjY5MzMzMzN6TTMzOC45ODY2NjY2NyA1MjEuMzIyNjY2NjdsNDUuOTA5MzMzMzMgNDUuOTA5MzMzMzNjMTMuMDc3MzMzMzMgMTMuMDY2NjY2NjcgMTMuMDc3MzMzMzMgMzQuMjcyIDAgNDcuMzM4NjY2NjctMTMuMDc3MzMzMzMgMTMuMDc3MzMzMzMtMzQuMjcyIDEzLjA3NzMzMzMzLTQ3LjMzODY2NjY3IDBsLTU1LjIzMi01NS4yMzItMzEuNjE2LTMxLjYxNmMtOC42ODI2NjY2Ny04LjY4MjY2NjY3LTguNjgyNjY2NjctMjIuNzYyNjY2NjcgMC0zMS40NDUzMzMzNGwzMS42MTYtMzEuNjE2IDU1LjIzMi01NS4yMzJjMTMuMDc3MzMzMzMtMTMuMDY2NjY2NjcgMzQuMjcyLTEzLjA2NjY2NjY3IDQ3LjMzODY2NjY3IDAgMTMuMDc3MzMzMzMgMTMuMDc3MzMzMzMgMTMuMDc3MzMzMzMgMzQuMjcyIDAgNDcuMzM4NjY2NjdsLTQ1LjkwOTMzMzMzIDQ1LjkwOTMzMzMzYy01LjE1MiA1LjE1Mi01LjE1MiAxMy40OTMzMzMzMyAwIDE4LjY0NTMzMzM0eiBtNDE3LjQ1MDY2NjY2IDYuNGwtMzEuNjI2NjY2NjYgMzEuNjE2LTU1LjIzMiA1NS4yMzJjLTEzLjA3NzMzMzMzIDEzLjA3NzMzMzMzLTM0LjI3MiAxMy4wNzczMzMzMy00Ny4zMzg2NjY2NyAwLTEzLjA2NjY2NjY3LTEzLjA2NjY2NjY3LTEzLjA2NjY2NjY3LTM0LjI3MiAwLTQ3LjMzODY2NjY3bDQ1LjkwOTMzMzMzLTQ1LjkwOTMzMzMzYzUuMTQxMzMzMzMtNS4xNTIgNS4xNDEzMzMzMy0xMy40OTMzMzMzMyAwLTE4LjY0NTMzMzM0bC00NS45MDkzMzMzMy00NS45MDkzMzMzM2MtMTMuMDY2NjY2NjctMTMuMDc3MzMzMzMtMTMuMDY2NjY2NjctMzQuMjcyIDAtNDcuMzM4NjY2NjcgMTMuMDc3MzMzMzMtMTMuMDY2NjY2NjcgMzQuMjcyLTEzLjA2NjY2NjY3IDQ3LjMzODY2NjY3IDBsNTUuMjMyIDU1LjIzMiAzMS42MjY2NjY2NiAzMS42MTZjOC42ODI2NjY2NyA4LjY4MjY2NjY3IDguNjgyNjY2NjcgMjIuNzYyNjY2NjcgMCAzMS40NDUzMzMzNHpcIiAvPlxuICAgMTI2XHQgICAgICAgICAgPC9zdmc+XG4gICAxMjdcdCAgICAgICAgPC9kaXY+YCxcbiAgIDEyOFx0ICAgICAgICB0b29sdGlwOiAn5a695bGP5qih5byPJyxcbiAgIDEyOVx0ICAgICAgICBjbGljazogZnVuY3Rpb24gKCkge1xuICAgMTMwXHQgICAgICAgICAgZW1pdCgndG9nZ2xlLWNvbGxhcHNlJywgIXByb3BzLmlzQ29sbGFwc2VkKVxuICAgMTMxXHQgICAgICAgIH0sXG4gICAxMzJcdCAgICAgIH0sXG4gICAxMzNcdCAgICBdLFxuICAgMTM0XHQgICAgc2V0dGluZ3M6IFtcbiAgIDEzNVx0ICAgICAge1xuICAgMTM2XHQgICAgICAgIHdpZHRoOiAyMDAsXG4gICAxMzdcdCAgICAgICAgaHRtbDogJ+eUu+i0qCcsXG4gICAxMzhcdCAgICAgICAgc2VsZWN0b3I6IFtcbiAgIDEzOVx0ICAgICAgICAgIHtcbiAgIDE0MFx0ICAgICAgICAgICAgaHRtbDogJ+iHquWKqCcsXG4gICAxNDFcdCAgICAgICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAxNDJcdCAgICAgICAgICAgIHVybDogcHJvcHMudmlkZW9VcmxcbiAgIDE0M1x0ICAgICAgICAgIH1cbiAgIDE0NFx0ICAgICAgICBdLFxuICAgMTQ1XHQgICAgICB9LFxuICAgMTQ2XHQgICAgXSxcbiAgIDE0N1x0ICAgIGljb25zOiB7XG4gICAxNDhcdCAgICAgIHN0YXRlOiBgPGltZyBzcmM9XCJodHRwczovL3MxLmhkc2xiLmNvbS9iZnMvc3RhdGljL3BsYXllci9pbWcvcGxheS5zdmdcIiBjbGFzcz1cImFydC1zdGF0ZS1pY29uXCIgYWx0PVwi5Yqg6L295Lit44CC44CC44CCXCI+YCxcbiAgIDE0OVx0ICAgIH0sXG4gICAxNTBcdCAgICBxdWFsaXR5OiBbXG4gICAxNTFcdCAgICAgIHtcbiAgIDE1Mlx0ICAgICAgICBkZWZhdWx0OiB0cnVlLFxuICAgMTUzXHQgICAgICAgIGh0bWw6ICfoh6rliqgnLFxuICAgMTU0XHQgICAgICAgIHVybDogcHJvcHMudmlkZW9VcmxcbiAgIDE1NVx0ICAgICAgfVxuICAgMTU2XHQgICAgXSxcbiAgIDE1N1x0ICAgIHRodW1ibmFpbHM6IHtcbiAgIDE1OFx0ICAgICAgdXJsOiBwcm9wcy5wb3N0ZXIsXG4gICAxNTlcdCAgICAgIG51bWJlcjogNjAsXG4gICAxNjBcdCAgICAgIGNvbHVtbjogMTAsXG4gICAxNjFcdCAgICB9LFxuICAgMTYyXHQgICAgcGx1Z2luczogW1xuICAgMTYzXHQgICAgICBhcnRwbGF5ZXJQbHVnaW5EYW5tdWt1KHtcbiAgIDE2NFx0ICAgICAgICBjb250YWluZXI6ICcuYXJ0cGxheWVyLWFwcCcsXG4gICAxNjVcdCAgICAgICAgc2hvd0lucHV0OiB0cnVlLFxuICAgMTY2XHQgICAgICAgIC8vIOiOt+WPluW8ueW5leaVsOaNrlxuICAgMTY3XHQgICAgICAgIGRhbm11a3U6IGFzeW5jICgpID0+IHtcbiAgIDE2OFx0ICAgICAgICAgIHRyeSB7XG4gICAxNjlcdCAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZ2V0QmFycmFnZVNlcnZpY2UocHJvcHMudmlkZW9JZClcbiAgIDE3MFx0ICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT09IDIwMCkge1xuICAgMTcxXHQgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhLm1hcChpdGVtID0+ICh7XG4gICAxNzJcdCAgICAgICAgICAgICAgICB0ZXh0OiBpdGVtLnRleHQsXG4gICAxNzNcdCAgICAgICAgICAgICAgICB0aW1lOiBpdGVtLnRpbWUsXG4gICAxNzRcdCAgICAgICAgICAgICAgICBjb2xvcjogaXRlbS5jb2xvciB8fCAnI0ZGRkZGRicsXG4gICAxNzVcdCAgICAgICAgICAgICAgICB0eXBlOiBpdGVtLnR5cGUgfHwgMCxcbiAgIDE3Nlx0ICAgICAgICAgICAgICAgIGJvcmRlcjogZmFsc2UsXG4gICAxNzdcdCAgICAgICAgICAgICAgfSkpXG4gICAxNzhcdCAgICAgICAgICAgIH1cbiAgIDE3OVx0ICAgICAgICAgICAgcmV0dXJuIFtdXG4gICAxODBcdCAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgMTgxXHQgICAgICAgICAgICBjb25zb2xlLmVycm9yKCfojrflj5blvLnluZXlpLHotKU6JywgZXJyb3IpXG4gICAxODJcdCAgICAgICAgICAgIEVsTWVzc2FnZS5lcnJvcign6I635Y+W5by55bmV5aSx6LSlJylcbiAgIDE4M1x0ICAgICAgICAgICAgcmV0dXJuIFtdXG4gICAxODRcdCAgICAgICAgICB9XG4gICAxODVcdCAgICAgICAgfSxcbiAgIDE4Nlx0ICAgICAgICBzcGVlZDogNSxcbiAgIDE4N1x0ICAgICAgICBvcGFjaXR5OiAxLFxuICAgMTg4XHQgICAgICAgIGZvbnRTaXplOiAyNSxcbiAgIDE4OVx0ICAgICAgICBjb2xvcjogJyNGRkZGRkYnLFxuICAgMTkwXHQgICAgICAgIG1vZGU6IDAsXG4gICAxOTFcdCAgICAgICAgbWFyZ2luOiBbMTAsICcyNSUnXSxcbiAgIDE5Mlx0ICAgICAgICBhbnRpT3ZlcmxhcDogdHJ1ZSxcbiAgIDE5M1x0ICAgICAgICB1c2VXb3JrZXI6IHRydWUsXG4gICAxOTRcdCAgICAgICAgc3luY2hyb25vdXNQbGF5YmFjazogZmFsc2UsXG4gICAxOTVcdCAgICAgICAgbWF4TGVuZ3RoOiAxMDAsXG4gICAxOTZcdCAgICAgICAgbWluV2lkdGg6IDIwMCxcbiAgIDE5N1x0ICAgICAgICBtYXhXaWR0aDogNDAwLFxuICAgMTk4XHQgICAgICAgIHRoZW1lOiAnZGFyaycsXG4gICAxOTlcdCAgICAgICAgLy8g6L6T5YWl5qGG6I635b6X54Sm54K55pe25pqC5YGc6KeG6aKRXG4gICAyMDBcdCAgICAgICAgb25JbnB1dDogKCkgPT4ge1xuVG90YWwgbGluZXMgaW4gZmlsZTogNTcwXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCIxYWE3NzFmNi0wMzg5LTQxNzMtYTc3Yy04MmE1YzgyNjA5YmQ7dG9vbHVfMDE2bkVDbm9XUkVnN0VUWlZmYTZqVnJ1Ijp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IkhlcmUncyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgYGNhdCAtbmAgb24gc3JjL2NvbXBvbmVudHMvdmlkZW8vVmlkZW9QbGF5ZXIudnVlOlxuICAgMjAwXHQgICAgICAgIG9uSW5wdXQ6ICgpID0+IHtcbiAgIDIwMVx0ICAgICAgICAgIGlmIChhcnQudmFsdWUgJiYgIWFydC52YWx1ZS5wYXVzZWQpIHtcbiAgIDIwMlx0ICAgICAgICAgICAgYXJ0LnZhbHVlLnBhdXNlKClcbiAgIDIwM1x0ICAgICAgICAgIH1cbiAgIDIwNFx0ICAgICAgICB9LFxuICAgMjA1XHQgICAgICAgIC8vIOWPkemAgeW8ueW5leWQjuaBouWkjeaSreaUvlxuICAgMjA2XHQgICAgICAgIG9uU2VuZDogKCkgPT4ge1xuICAgMjA3XHQgICAgICAgICAgaWYgKGFydC52YWx1ZSAmJiBhcnQudmFsdWUucGF1c2VkKSB7XG4gICAyMDhcdCAgICAgICAgICAgIGFydC52YWx1ZS5wbGF5KClcbiAgIDIwOVx0ICAgICAgICAgIH1cbiAgIDIxMFx0ICAgICAgICB9LFxuICAgMjExXHQgICAgICAgIC8vIOWPkemAgeW8ueW5leWJjeeahOWkhOeQhlxuICAgMjEyXHQgICAgICAgIGJlZm9yZUVtaXQ6IGFzeW5jIChkYW5tdSkgPT4ge1xuICAgMjEzXHQgICAgICAgICAgY29uc3QgYmFycmFnZURhdGEgPSB7XG4gICAyMTRcdCAgICAgICAgICAgIHZpZGVvSWQ6IHByb3BzLnZpZGVvSWQsXG4gICAyMTVcdCAgICAgICAgICAgIHRleHQ6IGRhbm11LnRleHQsXG4gICAyMTZcdCAgICAgICAgICAgIHRpbWU6IGFydC52YWx1ZS5jdXJyZW50VGltZSxcbiAgIDIxN1x0ICAgICAgICAgICAgY29sb3I6IGRhbm11LmNvbG9yLFxuICAgMjE4XHQgICAgICAgICAgICB0eXBlOiBkYW5tdS50eXBlXG4gICAyMTlcdCAgICAgICAgICB9XG4gICAyMjBcdCAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHNlbmRCYXJyYWdlU2VydmljZShiYXJyYWdlRGF0YSlcbiAgIDIyMVx0ICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHtcbiAgIDIyMlx0ICAgICAgICAgICAgRWxNZXNzYWdlLnN1Y2Nlc3MoJ+WPkemAgeW8ueW5leaIkOWKnycpXG4gICAyMjNcdCAgICAgICAgICAgIC8vIOWPkemAgeaIkOWKn+WQjueri+WNs+WwhuaWsOW8ueW5lea3u+WKoOWIsOaSreaUvuWZqFxuICAgMjI0XHQgICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgMjI1XHQgICAgICAgICAgfVxuICAgMjI2XHQgICAgICAgICAgRWxNZXNzYWdlLmVycm9yKHJlc3BvbnNlLm1lc3NhZ2UgfHwgJ+WPkemAgeW8ueW5leWksei0pScpXG4gICAyMjdcdCAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgIDIyOFx0ICAgICAgICB9XG4gICAyMjlcdCAgICAgIH0pXG4gICAyMzBcdCAgICBdXG4gICAyMzFcdCAgfSlcbiAgIDIzMlx0XG4gICAyMzNcdCAgLy8g55uR5ZCs5pKt5pS+5Zmo5LqL5Lu2XG4gICAyMzRcdCAgYXJ0LnZhbHVlLm9uKCdyZWFkeScsICgpID0+IHtcbiAgIDIzNVx0ICAgIGNvbnNvbGUubG9nKCfop4bpopHmkq3mlL7lmajlt7LlsLHnu6onKVxuICAgMjM2XHQgIH0pXG4gICAyMzdcdFxuICAgMjM4XHQgIGFydC52YWx1ZS5vbigncGxheScsICgpID0+IHtcbiAgIDIzOVx0ICAgIGNvbnNvbGUubG9nKCfop4bpopHlvIDlp4vmkq3mlL4nKVxuICAgMjQwXHQgIH0pXG4gICAyNDFcdFxuICAgMjQyXHQgIGFydC52YWx1ZS5vbigncGF1c2UnLCAoKSA9PiB7XG4gICAyNDNcdCAgICBjb25zb2xlLmxvZygn6KeG6aKR5pqC5YGcJylcbiAgIDI0NFx0ICB9KVxuICAgMjQ1XHRcbiAgIDI0Nlx0ICAvLyDplJnor6/lpITnkIZcbiAgIDI0N1x0ICBhcnQudmFsdWUub24oJ2Vycm9yJywgKGVycm9yKSA9PiB7XG4gICAyNDhcdCAgICBjb25zb2xlLmVycm9yKCfop4bpopHmkq3mlL7plJnor686JywgZXJyb3IpXG4gICAyNDlcdCAgICBFbE1lc3NhZ2UuZXJyb3IoJ+inhumikeWKoOi9veWksei0pe+8jOivt+eojeWQjumHjeivlScpXG4gICAyNTBcdCAgfSlcblRvdGFsIGxpbmVzIGluIGZpbGU6IDU3MFxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiZmZkZTFkYWItODlkZC00N2VkLTkwNmEtNmY3OTI2YTA5NzljO3Rvb2x1XzAxRmdqODFBTTN4dDlaU1oza3RkeTlNaCI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJIZXJlJ3MgdGhlIHJlc3VsdCBvZiBydW5uaW5nIGBjYXQgLW5gIG9uIHNyYy9jb21wb25lbnRzL3ZpZGVvL1ZpZGVvUGxheWVyLnZ1ZTpcbiAgIDI1MFx0ICB9KVxuICAgMjUxXHRcbiAgIDI1Mlx0ICAvLyDnm5HlkKzlhajlsY/kuovku7ZcbiAgIDI1M1x0ICBhcnQudmFsdWUub24oJ2Z1bGxzY3JlZW4nLCAoc3RhdGUpID0+IHtcbiAgIDI1NFx0ICAgIGVtaXQoJ3RvZ2dsZS1jb2xsYXBzZScsIHN0YXRlKVxuICAgMjU1XHQgIH0pXG4gICAyNTZcdFxuICAgMjU3XHQgIC8vIOebkeWQrOe9kemhteWFqOWxj+S6i+S7tlxuICAgMjU4XHQgIGFydC52YWx1ZS5vbignZnVsbHNjcmVlbldlYicsIChzdGF0ZSkgPT4ge1xuICAgMjU5XHQgICAgaXNXZWJGdWxsc2NyZWVuLnZhbHVlID0gc3RhdGVcbiAgIDI2MFx0ICAgIC8vIOaOp+WItmJvZHnmu5rliqhcbiAgIDI2MVx0ICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSBzdGF0ZSA/ICdoaWRkZW4nIDogJydcbiAgIDI2Mlx0ICAgIGVtaXQoJ3RvZ2dsZS1jb2xsYXBzZScsIHN0YXRlKVxuICAgMjYzXHQgIH0pXG4gICAyNjRcdFxuICAgMjY1XHQgIC8vIOebkeWQrOW8ueW5leebuOWFs+S6i+S7tlxuICAgMjY2XHQgIGFydC52YWx1ZS5vbignYXJ0cGxheWVyUGx1Z2luRGFubXVrdTplbWl0JywgKGRhbm11KSA9PiB7XG4gICAyNjdcdCAgICBjb25zb2xlLmxvZygn5Y+R6YCB5by55bmVOicsIGRhbm11KVxuICAgMjY4XHQgIH0pXG4gICAyNjlcdFxuICAgMjcwXHQgIGFydC52YWx1ZS5vbignYXJ0cGxheWVyUGx1Z2luRGFubXVrdTpsb2FkZWQnLCAoZGFubXVzKSA9PiB7XG4gICAyNzFcdCAgICBjb25zb2xlLmxvZygn5by55bmV5Yqg6L295a6M5oiQLCDmgLvmlbA6JywgZGFubXVzPy5sZW5ndGggfHwgMClcbiAgIDI3Mlx0ICB9KVxuICAgMjczXHRcbiAgIDI3NFx0ICBhcnQudmFsdWUub24oJ2FydHBsYXllclBsdWdpbkRhbm11a3U6ZXJyb3InLCAoZXJyb3IpID0+IHtcbiAgIDI3NVx0ICAgIGNvbnNvbGUuZXJyb3IoJ+W8ueW5lemUmeivrzonLCBlcnJvcilcbiAgIDI3Nlx0ICAgIEVsTWVzc2FnZS5lcnJvcign5by55bmV57O757uf5Ye6546w6ZSZ6K+vJylcbiAgIDI3N1x0ICB9KVxuICAgMjc4XHR9XG4gICAyNzlcdFxuICAgMjgwXHQvLyDnm5HlkKwgVVJMIOWPmOWMllxuICAgMjgxXHR3YXRjaCgoKSA9PiBwcm9wcy52aWRlb1VybCwgKG5ld1VybCwgb2xkVXJsKSA9PiB7XG4gICAyODJcdCAgaWYgKG5ld1VybCAmJiBuZXdVcmwgIT09IG9sZFVybCkge1xuICAgMjgzXHQgICAgaWYgKGFydC52YWx1ZSkge1xuICAgMjg0XHQgICAgICAvLyDlpoLmnpzmkq3mlL7lmajlt7LlrZjlnKjvvIzmm7TmlrDop4bpopHmupBcbiAgIDI4NVx0ICAgICAgYXJ0LnZhbHVlLnVybCA9IG5ld1VybFxuICAgMjg2XHQgICAgICBhcnQudmFsdWUucG9zdGVyID0gcHJvcHMucG9zdGVyXG4gICAyODdcdCAgICAgIGFydC52YWx1ZS50aXRsZSA9IHByb3BzLnRpdGxlXG4gICAyODhcdCAgICB9IGVsc2Uge1xuICAgMjg5XHQgICAgICAvLyDlpoLmnpzmkq3mlL7lmajkuI3lrZjlnKjvvIzliJ3lp4vljJbmkq3mlL7lmahcbiAgIDI5MFx0ICAgICAgaW5pdFBsYXllcigpXG4gICAyOTFcdCAgICB9XG4gICAyOTJcdCAgfVxuICAgMjkzXHR9LCB7aW1tZWRpYXRlOiB0cnVlfSlcbiAgIDI5NFx0XG4gICAyOTVcdC8vIOe7hOS7tuaMgui9veaXtuWIneWni+WMluaSreaUvuWZqFxuICAgMjk2XHRvbk1vdW50ZWQoKCkgPT4ge1xuICAgMjk3XHQgIC8vIOS9v+eUqCBuZXh0VGljayDnoa7kv50gRE9NIOW3suabtOaWsFxuICAgMjk4XHQgIG5leHRUaWNrKCgpID0+IHtcbiAgIDI5OVx0ICAgIGlmIChwcm9wcy52aWRlb1VybCkge1xuICAgMzAwXHQgICAgICBpbml0UGxheWVyKClcblRvdGFsIGxpbmVzIGluIGZpbGU6IDU3MFxuIiwiaXNFcnJvciI6ZmFsc2UsInJlcXVlc3RJZCI6IiJ9fSwiNzcwMzZiN2EtYjAyOC00NTkwLTlkMTUtODhhNzJkNzE4M2I3O3Rvb2x1XzAxUGJvd0R1aVppbTE0SlRYZW5RZGZOTiI6eyJwaGFzZSI6NSwicmVzdWx0Ijp7InRleHQiOiJTdWNjZXNzZnVsbHkgZWRpdGVkIHRoZSBmaWxlIHNyYy9jb21wb25lbnRzL3ZpZGVvL1ZpZGVvUGxheWVyLnZ1ZS5cblJlc3VsdCBmb3Igc3RyX3JlcGxhY2VfZW50cmllc1swXTpcblJlcGxhY2VtZW50IHN1Y2Nlc3NmdWwuXG5FZGl0ZWQgc2VjdGlvbiBhZnRlciBJREUgYXV0by1mb3JtYXR0aW5nIHdhcyBhcHBsaWVkOlxuICAgMTU5XHQgICAgICBudW1iZXI6IDYwLFxuICAgMTYwXHQgICAgICBjb2x1bW46IDEwLFxuICAgMTYxXHQgICAgfSxcbiAgIDE2Mlx0ICAgIHBsdWdpbnM6IFtcbiAgIDE2M1x0ICAgICAgYXJ0cGxheWVyUGx1Z2luRGFubXVrdSh7XG4gICAxNjRcdCAgICAgICAgY29udGFpbmVyOiAnLmFydHBsYXllci1hcHAnLFxuICAgMTY1XHQgICAgICAgIHNob3dJbnB1dDogdHJ1ZSxcbiAgIDE2Nlx0ICAgICAgICBvcGVuOiB0cnVlLCAvLyDpu5jorqTlvIDlkK/lvLnluZVcbiAgIDE2N1x0ICAgICAgICAvLyDojrflj5blvLnluZXmlbDmja5cbiAgIDE2OFx0ICAgICAgICBkYW5tdWt1OiBhc3luYyAoKSA9PiB7XG4gICAxNjlcdCAgICAgICAgICB0cnkge1xuICAgMTcwXHQgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGdldEJhcnJhZ2VTZXJ2aWNlKHByb3BzLnZpZGVvSWQpXG4gICAxNzFcdCAgICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHtcbiAgIDE3Mlx0ICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS5tYXAoaXRlbSA9PiAoe1xuICAgMTczXHQgICAgICAgICAgICAgICAgdGV4dDogaXRlbS50ZXh0LFxuICAgMTc0XHQgICAgICAgICAgICAgICAgdGltZTogaXRlbS50aW1lLFxuICAgMTc1XHQgICAgICAgICAgICAgICAgY29sb3I6IGl0ZW0uY29sb3IgfHwgJyNGRkZGRkYnLFxuICAgMTc2XHQgICAgICAgICAgICAgICAgdHlwZTogaXRlbS50eXBlIHx8IDAsXG4gICAxNzdcdCAgICAgICAgICAgICAgICBib3JkZXI6IGZhbHNlLFxuICAgMTc4XHQgICAgICAgICAgICAgIH0pKVxuICAgMTc5XHQgICAgICAgICAgICB9XG4gICAxODBcdCAgICAgICAgICAgIHJldHVybiBbXVxuICAgMTgxXHQgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgIDE4Mlx0ICAgICAgICAgICAgY29uc29sZS5lcnJvcign6I635Y+W5by55bmV5aSx6LSlOicsIGVycm9yKVxuICAgMTgzXHQgICAgICAgICAgICBFbE1lc3NhZ2UuZXJyb3IoJ+iOt+WPluW8ueW5leWksei0pScpXG4gICAxODRcdCAgICAgICAgICAgIHJldHVybiBbXVxuICAgMTg1XHQgICAgICAgICAgfVxuICAgMTg2XHQgICAgICAgIH0sXG4gICAxODdcdCAgICAgICAgc3BlZWQ6IDUsXG4gICAxODhcdCAgICAgICAgb3BhY2l0eTogMSxcbiAgIDE4OVx0ICAgICAgICBmb250U2l6ZTogMjUsXG4gICAxOTBcdCAgICAgICAgY29sb3I6ICcjRkZGRkZGJyxcbiAgIDE5MVx0ICAgICAgICBtb2RlOiAwLFxuICAgMTkyXHQgICAgICAgIG1hcmdpbjogWzEwLCAnMjUlJ10sXG4gICAxOTNcdCAgICAgICAgYW50aU92ZXJsYXA6IHRydWUsXG4gICAxOTRcdCAgICAgICAgdXNlV29ya2VyOiB0cnVlLFxuICAgMTk1XHQgICAgICAgIHN5bmNocm9ub3VzUGxheWJhY2s6IGZhbHNlLFxuICAgMTk2XHQgICAgICAgIG1heExlbmd0aDogMTAwLFxuICAgMTk3XHQgICAgICAgIG1pbldpZHRoOiAyMDAsXG4gICAxOThcdCAgICAgICAgbWF4V2lkdGg6IDQwMCxcbiAgIDE5OVx0ICAgICAgICB0aGVtZTogJ2RhcmsnLFxuICAgMjAwXHQgICAgICAgIC8vIOi+k+WFpeahhuiOt+W+l+eEpueCueaXtuaaguWBnOinhumikVxuICAgMjAxXHQgICAgICAgIG9uSW5wdXQ6ICgpID0+IHtcbiAgIDIwMlx0ICAgICAgICAgIGlmIChhcnQudmFsdWUgJiYgIWFydC52YWx1ZS5wYXVzZWQpIHtcbiAgIDIwM1x0ICAgICAgICAgICAgYXJ0LnZhbHVlLnBhdXNlKClcbiAgIDIwNFx0ICAgICAgICAgIH1cbiAgIDIwNVx0ICAgICAgICB9LFxuICAgMjA2XHQgICAgICAgIC8vIOWPkemAgeW8ueW5leWQjuaBouWkjeaSreaUvlxuICAgMjA3XHQgICAgICAgIG9uU2VuZDogKCkgPT4ge1xuICAgMjA4XHQgICAgICAgICAgaWYgKGFydC52YWx1ZSAmJiBhcnQudmFsdWUucGF1c2VkKSB7XG4gICAyMDlcdCAgICAgICAgICAgIGFydC52YWx1ZS5wbGF5KClcbiAgIDIxMFx0ICAgICAgICAgIH1cbiAgIDIxMVx0ICAgICAgICB9LFxuICAgMjEyXHQgICAgICAgIC8vIOWPkemAgeW8ueW5leWJjeeahOWkhOeQhlxuICAgMjEzXHQgICAgICAgIGJlZm9yZUVtaXQ6IGFzeW5jIChkYW5tdSkgPT4ge1xuICAgMjE0XHQgICAgICAgICAgY29uc3QgYmFycmFnZURhdGEgPSB7XG4gICAyMTVcdCAgICAgICAgICAgIHZpZGVvSWQ6IHByb3BzLnZpZGVvSWQsXG4gICAyMTZcdCAgICAgICAgICAgIHRleHQ6IGRhbm11LnRleHQsXG4gICAyMTdcdCAgICAgICAgICAgIHRpbWU6IGFydC52YWx1ZS5jdXJyZW50VGltZSxcbiAgIDIxOFx0ICAgICAgICAgICAgY29sb3I6IGRhbm11LmNvbG9yLFxuICAgMjE5XHQgICAgICAgICAgICB0eXBlOiBkYW5tdS50eXBlXG4gICAyMjBcdCAgICAgICAgICB9XG4gICAyMjFcdCAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHNlbmRCYXJyYWdlU2VydmljZShiYXJyYWdlRGF0YSlcbiAgIDIyMlx0ICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHtcbiAgIDIyM1x0ICAgICAgICAgICAgRWxNZXNzYWdlLnN1Y2Nlc3MoJ+WPkemAgeW8ueW5leaIkOWKnycpXG4gICAyMjRcdCAgICAgICAgICAgIC8vIOWPkemAgeaIkOWKn+WQjueri+WNs+WwhuaWsOW8ueW5lea3u+WKoOWIsOaSreaUvuWZqFxuICAgMjI1XHQgICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgMjI2XHQgICAgICAgICAgfVxuICAgMjI3XHQgICAgICAgICAgRWxNZXNzYWdlLmVycm9yKHJlc3BvbnNlLm1lc3NhZ2UgfHwgJ+WPkemAgeW8ueW5leWksei0pScpXG4gICAyMjhcdCAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgIDIyOVx0ICAgICAgICB9XG4gICAyMzBcdCAgICAgIH0pXG4gICAyMzFcdCAgICBdXG4gICAyMzJcdCAgfSlcbiAgIDIzM1x0XG5cblJldmlldyB0aGUgY2hhbmdlcyBhbmQgbWFrZSBzdXJlIHRoZXkgYXJlIGFzIGV4cGVjdGVkIChjb3JyZWN0IGluZGVudGF0aW9uLCBubyBkdXBsaWNhdGUgbGluZXMsIGV0YykuXG5FZGl0IHRoZSBmaWxlIGFnYWluIGlmIG5lY2Vzc2FyeS5cbiIsImlzRXJyb3IiOmZhbHNlLCJyZXF1ZXN0SWQiOiIifX0sIjU5OTJkZWIyLWNlNjMtNDIwMi05ODQyLTc4OTZhMjAzNjUwYjt0b29sdV8wMTNKckpmekhKenVzaU1UYlhrbXVVaG0iOnsicGhhc2UiOjUsInJlc3VsdCI6eyJ0ZXh0IjoiU3VjY2Vzc2Z1bGx5IGVkaXRlZCB0aGUgZmlsZSBzcmMvY29tcG9uZW50cy92aWRlby9WaWRlb1BsYXllci52dWUuXG5SZXN1bHQgZm9yIHN0cl9yZXBsYWNlX2VudHJpZXNbMF06XG5SZXBsYWNlbWVudCBzdWNjZXNzZnVsLlxuRWRpdGVkIHNlY3Rpb24gYWZ0ZXIgSURFIGF1dG8tZm9ybWF0dGluZyB3YXMgYXBwbGllZDpcbiAgIDEwOVx0ICAgIGxhbmc6ICd6aC1jbicsXG4gICAxMTBcdCAgICBtb3JlVmlkZW9BdHRyOiB7XG4gICAxMTFcdCAgICAgIGNyb3NzT3JpZ2luOiAnYW5vbnltb3VzJyxcbiAgIDExMlx0ICAgIH0sXG4gICAxMTNcdCAgICBjb250cm9sczogW1xuICAgMTE0XHQgICAgICB7XG4gICAxMTVcdCAgICAgICAgcG9zaXRpb246ICdyaWdodCcsXG4gICAxMTZcdCAgICAgICAgaHRtbDogJ+W8ueW5lScsXG4gICAxMTdcdCAgICAgICAgdG9vbHRpcDogJ+W8gOWQry/lhbPpl63lvLnluZUnLFxuICAgMTE4XHQgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAxMTlcdCAgICAgICAgICAvLyDliIfmjaLlvLnluZXmmL7npLrnirbmgIFcbiAgIDEyMFx0ICAgICAgICAgIGNvbnN0IGRhbm11a3UgPSBhcnQudmFsdWUucGx1Z2lucy5hcnRwbGF5ZXJQbHVnaW5EYW5tdWt1XG4gICAxMjFcdCAgICAgICAgICBpZiAoZGFubXVrdSkge1xuICAgMTIyXHQgICAgICAgICAgICBkYW5tdWt1LnRvZ2dsZSgpXG4gICAxMjNcdCAgICAgICAgICAgIEVsTWVzc2FnZS5pbmZvKGRhbm11a3UuaXNPcGVuID8gJ+W8ueW5leW3suW8gOWQrycgOiAn5by55bmV5bey5YWz6ZetJylcbiAgIDEyNFx0ICAgICAgICAgIH1cbiAgIDEyNVx0ICAgICAgICB9LFxuICAgMTI2XHQgICAgICB9LFxuICAgMTI3XHQgICAgICB7XG4gICAxMjhcdCAgICAgICAgcG9zaXRpb246ICdyaWdodCcsXG4gICAxMjlcdCAgICAgICAgaHRtbDogJ+eUu+S4reeUuycsXG4gICAxMzBcdCAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgIDEzMVx0ICAgICAgICAgIGFydC52YWx1ZS5waXAgPSAhYXJ0LnZhbHVlLnBpcFxuICAgMTMyXHQgICAgICAgIH0sXG4gICAxMzNcdCAgICAgIH0sXG4gICAxMzRcdCAgICAgIHtcbiAgIDEzNVx0ICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0JyxcbiAgIDEzNlx0ICAgICAgICBodG1sOiBgPGRpdiBjbGFzcz1cIndpZGUtc2NyZWVuLWJ0blwiIHRpdGxlPVwi5a695bGP5qih5byPXCI+XG4gICAxMzdcdCAgICAgICAgICA8c3ZnIGNsYXNzPVwid2lkZS1zY3JlZW4taWNvblwiIHZpZXdCb3g9XCIwIDAgMTAyNCAxMDI0XCIgdmVyc2lvbj1cIjEuMVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjIwMFwiIGhlaWdodD1cIjIwMFwiPlxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19LCIzNjc1NGY1Ni1kNmNmLTQyNzUtOThjOC1lZTUyZjJkZjVjYzQ7dG9vbHVfMDEybUtCaERVRUZKVVd4a3U2RXRHWmVvIjp7InBoYXNlIjo1LCJyZXN1bHQiOnsidGV4dCI6IlN1Y2Nlc3NmdWxseSBlZGl0ZWQgdGhlIGZpbGUgc3JjL2NvbXBvbmVudHMvdmlkZW8vVmlkZW9QbGF5ZXIudnVlLlxuUmVzdWx0IGZvciBzdHJfcmVwbGFjZV9lbnRyaWVzWzBdOlxuUmVwbGFjZW1lbnQgc3VjY2Vzc2Z1bC5cbkVkaXRlZCBzZWN0aW9uIGFmdGVyIElERSBhdXRvLWZvcm1hdHRpbmcgd2FzIGFwcGxpZWQ6XG4gICAyNDNcdCAgICAgIH0pXG4gICAyNDRcdCAgICBdXG4gICAyNDVcdCAgfSlcbiAgIDI0Nlx0XG4gICAyNDdcdCAgLy8g55uR5ZCs5pKt5pS+5Zmo5LqL5Lu2XG4gICAyNDhcdCAgYXJ0LnZhbHVlLm9uKCdyZWFkeScsICgpID0+IHtcbiAgIDI0OVx0ICAgIGNvbnNvbGUubG9nKCfop4bpopHmkq3mlL7lmajlt7LlsLHnu6onKVxuICAgMjUwXHRcbiAgIDI1MVx0ICAgIC8vIOehruS/neW8ueW5leezu+e7n+W3suW8gOWQr1xuICAgMjUyXHQgICAgY29uc3QgZGFubXVrdSA9IGFydC52YWx1ZS5wbHVnaW5zLmFydHBsYXllclBsdWdpbkRhbm11a3VcbiAgIDI1M1x0ICAgIGlmIChkYW5tdWt1ICYmICFkYW5tdWt1LmlzT3Blbikge1xuICAgMjU0XHQgICAgICBkYW5tdWt1LnNob3coKVxuICAgMjU1XHQgICAgICBjb25zb2xlLmxvZygn5by55bmV57O757uf5bey5byA5ZCvJylcbiAgIDI1Nlx0ICAgIH1cbiAgIDI1N1x0ICB9KVxuICAgMjU4XHRcbiAgIDI1OVx0ICBhcnQudmFsdWUub24oJ3BsYXknLCAoKSA9PiB7XG4gICAyNjBcdCAgICBjb25zb2xlLmxvZygn6KeG6aKR5byA5aeL5pKt5pS+JylcbiAgIDI2MVx0ICB9KVxuXG5SZXZpZXcgdGhlIGNoYW5nZXMgYW5kIG1ha2Ugc3VyZSB0aGV5IGFyZSBhcyBleHBlY3RlZCAoY29ycmVjdCBpbmRlbnRhdGlvbiwgbm8gZHVwbGljYXRlIGxpbmVzLCBldGMpLlxuRWRpdCB0aGUgZmlsZSBhZ2FpbiBpZiBuZWNlc3NhcnkuXG4iLCJpc0Vycm9yIjpmYWxzZSwicmVxdWVzdElkIjoiIn19fSwiZHJhZnRFeGNoYW5nZSI6eyJyZXF1ZXN0X21lc3NhZ2UiOiIiLCJyaWNoX3RleHRfanNvbl9yZXByIjp7InR5cGUiOiJkb2MiLCJjb250ZW50IjpbeyJ0eXBlIjoicGFyYWdyYXBoIn1dfSwic3RhdHVzIjoiZHJhZnQifSwicmVxdWVzdElkcyI6W10sImlzUGlubmVkIjpmYWxzZSwiaXNTaGFyZWFibGUiOnRydWUsImV4dHJhRGF0YSI6eyJpc0FnZW50Q29udmVyc2F0aW9uIjp0cnVlLCJoYXNBZ2VudE9uYm9hcmRlZCI6dHJ1ZSwiaGFzRGlydHlFZGl0cyI6ZmFsc2UsImJhc2VsaW5lVGltZXN0YW1wIjowfSwicGVyc29uYVR5cGUiOjB9fSwiYWdlbnRFeGVjdXRpb25Nb2RlIjoiYXV0byIsImlzQWdlbnRFZGl0c0NvbGxhcHNlZCI6dHJ1ZX0=" />
      </map>
    </option>
  </component>
</project>